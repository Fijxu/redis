crystal_doc_search_index_callback({"repository_name":"redis","body":"# redis\n\nA pure-Crystal implementation of the Redis protocol\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     redis:\n       github: jgaskins/redis\n   ```\n\n2. Run `shards`\n\n## Usage\n\n```crystal\nrequire \"redis\"\n\nredis = Redis::Client.new # Defaults to `localhost` port 6379\n\nredis.set \"foo\", \"bar\"\nredis.get \"foo\" # => \"bar\"\n\nredis.incr \"counter\" # => 1\nredis.incr \"counter\" # => 2\nredis.decr \"counter\" # => 1\n\nredis.del \"foo\", \"counter\" # => 2\n```\n\n### Pipelined queries\n\nTo mitigate latency with multiple queries whose inputs and outputs are completely independent of each other, you can \"pipeline\" your queries by sending them all at once before reading them. To do this, you can use the `pipeline` method:\n\n```crystal\nredis.pipeline do |pipe|\n  pipe.incr \"foo\"\n  pipe.set \"bar\", \"baz\"\n  pipe.lpush \"my-list\", \"my value\"\nend\n```\n\nThe return value of `pipeline` will be an array containing the values of each of those calls in the order they were sent. So in this case, it might be `[1, nil, 2]` to match the return values of `incr`, `set`, and `lpush`, respectively.\n\n### Transactions\n\nThe Redis [`MULTI` command](https://redis.io/commands/multi) begins a transaction, so you can use the `multi` method to execute a transaction against the server:\n\n```crystal\nredis.multi do |txn|\n  txn.set \"foo\", \"bar\"\n  txn.incr \"baz\"\n  txn.lpush \"my-list\", \"my value\"\nend\n```\n\nThe transaction is automatically committed with [`EXEC`](https://redis.io/commands/exec) at the end of the block. If an exception occurs within the block, the transaction will be rolled back with [`DISCARD`](https://redis.io/commands/discard) before exiting the block.\n\nYou may also call `txn.discard`, which will effectively disable the transaction (all further methods called on the transaction do nothing), but will not exit the block. You will need to exit the block explicitly with `break` if there are operations within the block that cannot be rolled back, such as sending an email or sending a request to a third-party API.\n\nThe reason for this is that the only way to exit a containing block from an inner method in Crystal is to raise an exception, and this library chooses not to use exceptions for flow control.\n\n### Beyond `localhost`\n\nTo use a Redis server that isn't at `localhost:6379`, pass a `URI` to the client. For example, if you store it in your shell environment:\n\n```crystal\nredis = Redis::Client.new(URI.parse(ENV[\"REDIS_URL\"]))\n\n# ... or ...\n\nredis = Redis::Client.from_env(\"REDIS_URL\")\n```\n\nTo connect via SSL, make sure you use the `rediss://` URL scheme. If your Redis server requires a password or uses a different database slot than `0`, make sure you include them in the URL:\n\n```crystal\nredis = Redis::Client.new(URI.parse(\"rediss://:my_password@example.com/3\"))\n```\n\n### Connection Pool\n\nThe `Redis::Client` maintains its own connection pool, so there is no need to run your own within your application. When you execute a command on the `Redis::Client`, it is automatically being executed against a connection. When you execute a pipeline or transaction with `multi`, all commands within that block will automatically be routed to the same connection.\n\n## Development\n\nMake sure you have a Redis or KeyDB server running locally on port 6379.\n\n## Contributing\n\n1. Fork it (<https://github.com/jgaskins/redis/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Jamie Gaskins](https://github.com/jgaskins) - creator and maintainer\n","program":{"html_id":"redis/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"redis","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"redis/Array","path":"Array.html","kind":"class","full_name":"Array(T)","name":"Array","abstract":false,"superclass":{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Indexable/Mutable","kind":"module","full_name":"Indexable::Mutable","name":"Mutable"},{"html_id":"redis/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"redis/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"redis/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":275,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Indexable/Mutable","kind":"module","full_name":"Indexable::Mutable","name":"Mutable"}],"doc":"An `Array` is an ordered, integer-indexed collection of objects of type T.\n\nArray indexing starts at 0. A negative index is assumed to be\nrelative to the end of the array: -1 indicates the last element,\n-2 is the next to last element, and so on.\n\nAn `Array` can be created using the usual `new` method (several are provided), or with an array literal:\n\n```\nArray(Int32).new  # => []\n[1, 2, 3]         # Array(Int32)\n[1, \"hello\", 'x'] # Array(Int32 | String | Char)\n```\n\nSee [`Array` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/array.html) in the language reference.\n\nAn `Array` can have mixed types, meaning T will be a union of types, but these are determined\nwhen the array is created, either by specifying T or by using an array literal. In the latter\ncase, T will be set to the union of the array literal elements' types.\n\nWhen creating an empty array you must always specify T:\n\n```\n[] of Int32 # same as Array(Int32)\n[]          # syntax error\n```\n\nAn `Array` is implemented using an internal buffer of some capacity\nand is reallocated when elements are pushed to it when more capacity\nis needed. This is normally known as a [dynamic array](http://en.wikipedia.org/wiki/Dynamic_array).\n\nYou can use a special array literal syntax with other types too, as long as they define an argless\n`new` method and a `<<` method. `Set` is one such type:\n\n```\nset = Set{1, 2, 3} # => Set{1, 2, 3}\nset.class          # => Set(Int32)\n```\n\nThe above is the same as this:\n\n```\nset = Set(typeof(1, 2, 3)).new\nset << 1\nset << 2\nset << 3\n```","summary":"<p>An <code><a href=\"Array.html\">Array</a></code> is an ordered, integer-indexed collection of objects of type T.</p>","class_methods":[{"html_id":"can_transform_graph_result?(result:Redis::Value)-class-method","name":"can_transform_graph_result?","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"args_string":"(result : Redis::Value)","args_html":"(result : <a href=\"Redis/Value.html\">Redis::Value</a>)","location":{"filename":"src/graph/serializable.cr","line_number":288,"url":null},"def":{"name":"can_transform_graph_result?","args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"visibility":"Public","body":"false"}},{"html_id":"can_transform_graph_result?(result:Array)-class-method","name":"can_transform_graph_result?","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Array"}],"args_string":"(result : Array)","args_html":"(result : <a href=\"Array.html\">Array</a>)","location":{"filename":"src/graph/serializable.cr","line_number":292,"url":null},"def":{"name":"can_transform_graph_result?","args":[{"name":"result","external_name":"result","restriction":"Array"}],"visibility":"Public","body":"true"}},{"html_id":"from_graph_result(result:Redis::Value)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"args_string":"(result : Redis::Value)","args_html":"(result : <a href=\"Redis/Value.html\">Redis::Value</a>)","location":{"filename":"src/graph/serializable.cr","line_number":276,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"visibility":"Public","body":"case result\nwhen Array\n  result.map do |item|\n    T.from_graph_result(item)\n  end\nelse\n  raise(ArgumentError.new(\"Cannot create a #{self} from #{result.inspect}\"))\nend"}}],"instance_methods":[{"html_id":"to_redis_graph_param(io:IO)-instance-method","name":"to_redis_graph_param","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/graph/serializable.cr","line_number":296,"url":null},"def":{"name":"to_redis_graph_param","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io << \"\\\"[\"\njoin(io, \", \")\nio << \"]\\\"\"\n"}}]},{"html_id":"redis/Bool","path":"Bool.html","kind":"struct","full_name":"Bool","name":"Bool","abstract":false,"superclass":{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":260,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"doc":"Bool has only two possible values: `true` and `false`. They are constructed using these literals:\n\n```\ntrue  # A Bool that is true\nfalse # A Bool that is false\n```\n\nSee [`Bool` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/bool.html) in the language reference.","summary":"<p>Bool has only two possible values: <code>true</code> and <code>false</code>.</p>","class_methods":[{"html_id":"from_graph_result(result:Nil)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Nil"}],"args_string":"(result : Nil)","args_html":"(result : <a href=\"Nil.html\">Nil</a>)","location":{"filename":"src/graph/serializable.cr","line_number":265,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Nil"}],"visibility":"Public","body":"false"}},{"html_id":"from_graph_result(value:Int64)-class-method","name":"from_graph_result","doc":"Booleans in Redis tend to be represented by integers where 0 indicates false","summary":"<p>Booleans in Redis tend to be represented by integers where 0 indicates false</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","args_html":"(value : <a href=\"Int64.html\">Int64</a>)","location":{"filename":"src/graph/serializable.cr","line_number":270,"url":null},"def":{"name":"from_graph_result","args":[{"name":"value","external_name":"value","restriction":"Int64"}],"visibility":"Public","body":"value != 0"}},{"html_id":"from_graph_result(result:Redis::Value)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"args_string":"(result : Redis::Value)","args_html":"(result : <a href=\"Redis/Value.html\">Redis::Value</a>)","location":{"filename":"src/graph/serializable.cr","line_number":261,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"visibility":"Public","body":"raise(ArgumentError.new(\"Cannot create a #{self} from #{result.inspect}\"))"}}]},{"html_id":"redis/Int","path":"Int.html","kind":"struct","full_name":"Int","name":"Int","abstract":true,"superclass":{"html_id":"redis/Number","kind":"struct","full_name":"Number","name":"Number"},"ancestors":[{"html_id":"redis/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"redis/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":242,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"redis/Int16","kind":"struct","full_name":"Int16","name":"Int16"},{"html_id":"redis/Int32","kind":"struct","full_name":"Int32","name":"Int32"},{"html_id":"redis/Int64","kind":"struct","full_name":"Int64","name":"Int64"},{"html_id":"redis/Int8","kind":"struct","full_name":"Int8","name":"Int8"}],"doc":"Int is the base type of all integer types.\n\nThere are four signed integer types: `Int8`, `Int16`, `Int32` and `Int64`,\nbeing able to represent numbers of 8, 16, 32 and 64 bits respectively.\nThere are four unsigned integer types: `UInt8`, `UInt16`, `UInt32` and `UInt64`.\n\nAn integer literal is an optional `+` or `-` sign, followed by\na sequence of digits and underscores, optionally followed by a suffix.\nIf no suffix is present, the literal's type is the lowest between `Int32`, `Int64` and `UInt64`\nin which the number fits:\n\n```\n1 # Int32\n\n1_i8  # Int8\n1_i16 # Int16\n1_i32 # Int32\n1_i64 # Int64\n\n1_u8  # UInt8\n1_u16 # UInt16\n1_u32 # UInt32\n1_u64 # UInt64\n\n+10 # Int32\n-20 # Int32\n\n2147483648          # Int64\n9223372036854775808 # UInt64\n```\n\nThe underscore `_` before the suffix is optional.\n\nUnderscores can be used to make some numbers more readable:\n\n```\n1_000_000 # better than 1000000\n```\n\nBinary numbers start with `0b`:\n\n```\n0b1101 # == 13\n```\n\nOctal numbers start with `0o`:\n\n```\n0o123 # == 83\n```\n\nHexadecimal numbers start with `0x`:\n\n```\n0xFE012D # == 16646445\n0xfe012d # == 16646445\n```\n\nSee [`Integer` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/integers.html) in the language reference.","summary":"<p>Int is the base type of all integer types.</p>","class_methods":[{"html_id":"from_graph_result(result:Redis::Value)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"args_string":"(result : Redis::Value)","args_html":"(result : <a href=\"Redis/Value.html\">Redis::Value</a>)","location":{"filename":"src/graph/serializable.cr","line_number":243,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"visibility":"Public","body":"raise(ArgumentError.new(\"Cannot create a #{self} from #{result.inspect}\"))"}}],"instance_methods":[{"html_id":"to_redis_graph_param(io:IO)-instance-method","name":"to_redis_graph_param","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/graph/serializable.cr","line_number":247,"url":null},"def":{"name":"to_redis_graph_param","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io << self"}}]},{"html_id":"redis/Int16","path":"Int16.html","kind":"struct","full_name":"Int16","name":"Int16","abstract":false,"superclass":{"html_id":"redis/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"redis/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"redis/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"redis/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":252,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"class_methods":[{"html_id":"from_graph_result(result:Int64)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Int64"}],"args_string":"(result : Int64)","args_html":"(result : <a href=\"Int64.html\">Int64</a>)","location":{"filename":"src/graph/serializable.cr","line_number":252,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Int64"}],"visibility":"Public","body":"result.to_i16"}}]},{"html_id":"redis/Int32","path":"Int32.html","kind":"struct","full_name":"Int32","name":"Int32","abstract":false,"superclass":{"html_id":"redis/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"redis/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"redis/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"redis/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":252,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"class_methods":[{"html_id":"from_graph_result(result:Int64)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Int64"}],"args_string":"(result : Int64)","args_html":"(result : <a href=\"Int64.html\">Int64</a>)","location":{"filename":"src/graph/serializable.cr","line_number":252,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Int64"}],"visibility":"Public","body":"result.to_i32"}}]},{"html_id":"redis/Int64","path":"Int64.html","kind":"struct","full_name":"Int64","name":"Int64","abstract":false,"superclass":{"html_id":"redis/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"redis/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"redis/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"redis/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":252,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"class_methods":[{"html_id":"from_graph_result(result:Int64)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Int64"}],"args_string":"(result : Int64)","args_html":"(result : <a href=\"Int64.html\">Int64</a>)","location":{"filename":"src/graph/serializable.cr","line_number":252,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Int64"}],"visibility":"Public","body":"result.to_i64"}}]},{"html_id":"redis/Int8","path":"Int8.html","kind":"struct","full_name":"Int8","name":"Int8","abstract":false,"superclass":{"html_id":"redis/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"redis/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"redis/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"redis/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":252,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"class_methods":[{"html_id":"from_graph_result(result:Int64)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Int64"}],"args_string":"(result : Int64)","args_html":"(result : <a href=\"Int64.html\">Int64</a>)","location":{"filename":"src/graph/serializable.cr","line_number":252,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Int64"}],"visibility":"Public","body":"result.to_i8"}}]},{"html_id":"redis/Nil","path":"Nil.html","kind":"struct","full_name":"Nil","name":"Nil","abstract":false,"superclass":{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":220,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"doc":"The `Nil` type has only one possible value: `nil`.\n\n`nil` is commonly used to represent the absence of a value.\nFor example, `String#index` returns the position of the character or `nil` if it's not\nin the string:\n\n```\nstr = \"Hello world\"\nstr.index 'e' # => 1\nstr.index 'a' # => nil\n```\n\nIn the above example, trying to invoke a method on the returned value will\ngive a compile time error unless both `Int32` and `Nil` define that method:\n\n```\nstr = \"Hello world\"\nidx = str.index 'e'\nidx + 1 # Error: undefined method '+' for Nil\n```\n\nThe language and the standard library provide short, readable, easy ways to deal with `nil`,\nsuch as `Object#try` and `Object#not_nil!`:\n\n```\nstr = \"Hello world\"\n\n# The index of 'e' in str or 0 if not found\nidx1 = str.index('e') || 0\n\nidx2 = str.index('a')\nif idx2\n  # Compiles: idx2 can't be nil here\n  idx2 + 1\nend\n\n# Tell the compiler that we are sure the returned\n# value is not nil: raises a runtime exception\n# if our assumption doesn't hold.\nidx3 = str.index('o').not_nil!\n```\n\nSee [`Nil` literal](https://crystal-lang.org/reference/syntax_and_semantics/literals/nil.html) in the language reference.","summary":"<p>The <code><a href=\"Nil.html\">Nil</a></code> type has only one possible value: <code>nil</code>.</p>","class_methods":[{"html_id":"can_transform_graph_result?(result:Nil)-class-method","name":"can_transform_graph_result?","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Nil"}],"args_string":"(result : Nil)","args_html":"(result : <a href=\"Nil.html\">Nil</a>)","location":{"filename":"src/graph/serializable.cr","line_number":229,"url":null},"def":{"name":"can_transform_graph_result?","args":[{"name":"result","external_name":"result","restriction":"Nil"}],"visibility":"Public","body":"true"}},{"html_id":"can_transform_graph_result?(result:Redis::Value)-class-method","name":"can_transform_graph_result?","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"args_string":"(result : Redis::Value)","args_html":"(result : <a href=\"Redis/Value.html\">Redis::Value</a>)","location":{"filename":"src/graph/serializable.cr","line_number":225,"url":null},"def":{"name":"can_transform_graph_result?","args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"visibility":"Public","body":"false"}},{"html_id":"from_graph_result(result:Nil)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Nil"}],"args_string":"(result : Nil)","args_html":"(result : <a href=\"Nil.html\">Nil</a>)","location":{"filename":"src/graph/serializable.cr","line_number":233,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Nil"}],"visibility":"Public","body":"nil"}},{"html_id":"from_graph_result(result:Redis::Value)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"args_string":"(result : Redis::Value)","args_html":"(result : <a href=\"Redis/Value.html\">Redis::Value</a>)","location":{"filename":"src/graph/serializable.cr","line_number":221,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"visibility":"Public","body":"raise(ArgumentError.new(\"Cannot create a #{self} from #{result.inspect}\"))"}}],"instance_methods":[{"html_id":"to_redis_graph_param(io:IO)-instance-method","name":"to_redis_graph_param","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/graph/serializable.cr","line_number":237,"url":null},"def":{"name":"to_redis_graph_param","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io << \"null\""}}]},{"html_id":"redis/Redis","path":"Redis.html","kind":"module","full_name":"Redis","name":"Redis","abstract":false,"locations":[{"filename":"src/client.cr","line_number":5,"url":null},{"filename":"src/cluster.cr","line_number":7,"url":null},{"filename":"src/commands.cr","line_number":3,"url":null},{"filename":"src/connection.cr","line_number":11,"url":null},{"filename":"src/errors.cr","line_number":1,"url":null},{"filename":"src/graph.cr","line_number":7,"url":null},{"filename":"src/json.cr","line_number":5,"url":null},{"filename":"src/parser.cr","line_number":4,"url":null},{"filename":"src/pipeline.cr","line_number":5,"url":null},{"filename":"src/redis.cr","line_number":6,"url":null},{"filename":"src/search.cr","line_number":3,"url":null},{"filename":"src/streaming.cr","line_number":3,"url":null},{"filename":"src/time_series.cr","line_number":4,"url":null},{"filename":"src/transaction.cr","line_number":4,"url":null},{"filename":"src/value.cr","line_number":1,"url":null},{"filename":"src/writer.cr","line_number":1,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ERROR_MAP","name":"ERROR_MAP","value":"Hash(String, Error.class).new(default_value: Error)"},{"id":"VERSION","name":"VERSION","value":"\"0.3.1\""}],"types":[{"html_id":"redis/Redis/BusyGroup","path":"Redis/BusyGroup.html","kind":"class","full_name":"Redis::BusyGroup","name":"BusyGroup","abstract":false,"superclass":{"html_id":"redis/Redis/Error","kind":"class","full_name":"Redis::Error","name":"Error"},"ancestors":[{"html_id":"redis/Redis/Error","kind":"class","full_name":"Redis::Error","name":"Error"},{"html_id":"redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/errors.cr","line_number":11,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"}},{"html_id":"redis/Redis/Client","path":"Redis/Client.html","kind":"class","full_name":"Redis::Client","name":"Client","abstract":false,"superclass":{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/client.cr","line_number":19,"url":null},{"filename":"src/graph.cr","line_number":419,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"doc":"The Redis client is the expected entrypoint for this shard. By default, it will connect to localhost:6379, but you can also supply a `URI` to connect to an arbitrary Redis server. SSL, password authentication, and DB selection are all supported.\n\n```\n# Connects to localhost:6379\nredis = Redis::Client.new\n\n# Connects to a server at \"redis.example.com\" on port 6000 over a TLS\n# connection, authenticates with the password \"password\", and uses DB 3\nredis = Redis::Client.new(URI.parse(\"rediss://:password@redis.example.com:6000/3\"))\n\n# Connects to a server at the URL in `ENV[\"REDIS_URL\"]`\nredis = Redis::Client.from_env(\"REDIS_URL\")\n```","summary":"<p>The Redis client is the expected entrypoint for this shard.</p>","class_methods":[{"html_id":"from_env(env_var)-class-method","name":"from_env","abstract":false,"args":[{"name":"env_var","external_name":"env_var","restriction":""}],"args_string":"(env_var)","args_html":"(env_var)","location":{"filename":"src/client.cr","line_number":22,"url":null},"def":{"name":"from_env","args":[{"name":"env_var","external_name":"env_var","restriction":""}],"visibility":"Public","body":"new(URI.parse(ENV[env_var]))"}}],"constructors":[{"html_id":"new(uri:URI=URI.parse(ENV.fetch(\"REDIS_URL\",\"redis:///\")))-class-method","name":"new","doc":"The client holds a pool of connections that expands and contracts as\nneeded.","summary":"<p>The client holds a pool of connections that expands and contracts as needed.</p>","abstract":false,"args":[{"name":"uri","default_value":"URI.parse(ENV.fetch(\"REDIS_URL\", \"redis:///\"))","external_name":"uri","restriction":"URI"}],"args_string":"(uri : URI = URI.parse(ENV.fetch(\"REDIS_URL\", \"redis:///\")))","args_html":"(uri : URI = <span class=\"t\">URI</span>.parse(<span class=\"t\">ENV</span>.fetch(<span class=\"s\">&quot;REDIS_URL&quot;</span>, <span class=\"s\">&quot;redis:///&quot;</span>)))","location":{"filename":"src/client.cr","line_number":28,"url":null},"def":{"name":"new","args":[{"name":"uri","default_value":"URI.parse(ENV.fetch(\"REDIS_URL\", \"redis:///\"))","external_name":"uri","restriction":"URI"}],"visibility":"Public","body":"_ = allocate\n_.initialize(uri)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"graph(key:String)-instance-method","name":"graph","doc":"Instantiate a `Redis::Graph::Client` backed by this `Redis::Client`.","summary":"<p>Instantiate a <code><a href=\"../Redis/Graph/Client.html\">Redis::Graph::Client</a></code> backed by this <code><a href=\"../Redis/Client.html\">Redis::Client</a></code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/graph.cr","line_number":421,"url":null},"def":{"name":"graph","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"Graph::Client.new(self, key)"}}],"macros":[{"html_id":"method_missing(call)-macro","name":"method_missing","doc":"All Redis commands invoked on the client check out a connection from the\nconnection pool, invoke the command on that connection, and then check the\nconnection back into the pool.\n\n```\nredis = Redis::Client.new\n```","summary":"<p>All Redis commands invoked on the client check out a connection from the connection pool, invoke the command on that connection, and then check the connection back into the pool.</p>","abstract":false,"args":[{"name":"call","external_name":"call","restriction":""}],"args_string":"(call)","args_html":"(call)","location":{"filename":"src/client.cr","line_number":42,"url":null},"def":{"name":"method_missing","args":[{"name":"call","external_name":"call","restriction":""}],"visibility":"Public","body":"      @pool.checkout(&.\n{{ call }}\n)\n    \n"}}]},{"html_id":"redis/Redis/Cluster","path":"Redis/Cluster.html","kind":"class","full_name":"Redis::Cluster","name":"Cluster","abstract":false,"superclass":{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"redis/Redis/Commands","kind":"module","full_name":"Redis::Commands","name":"Commands"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/cluster.cr","line_number":31,"url":null},{"filename":"src/errors.cr","line_number":15,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"redis/Redis/Commands","kind":"module","full_name":"Redis::Commands","name":"Commands"}],"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"doc":"Use in place of a `Redis::Client` when talking to Redis clusters. This class\nwill discover all nodes in a Redis cluster when given a URI for any of them,\nroute commands to appropriate shards based on the keys they operate on, and\nroute commands which do not change state to shard replicas to spread the\nload across the cluster.\n\nIt's important that, when using commands which operate on multiple keys (for\nexample: `MGET`, `DEL`, `RPOPLPUSH`, etc) that _all_ specified keys reside\non the same shard in the cluster. Usually, this means designing your key\nnames with curly braces around parts of them to ensure they hash to the same\n[key slot](https://redis.io/commands/cluster-keyslot). For example:\n\n```\nredis.del \"{comment}:1\", \"{comment}:2\"\nvalue = redis.rpoplpush \"{queue}:default\", \"{queue}:default:pending\"\n```\n\nIf you want to use a Redis module that provides custom commands, you can\nregister them as read-only with `Redis::Cluster.register_read_only_commands`\nand they will automatically be routed to replicas. See\n[`redis/cluster/json.cr`](https://github.com/jgaskins/redis/blob/3e874563dd524df9af6827f72edecca13a615802/src/cluster/json.cr#L5-L15)\nfor example usage.","summary":"<p>Use in place of a <code><a href=\"../Redis/Client.html\">Redis::Client</a></code> when talking to Redis clusters.</p>\n<p><span class=\"flag lime\">EXPERIMENTAL</span>  Cluster support is still under development. Some APIs may change while details are discovered and highly customized clusters (for example, servers handling individual hash slots or multiple hash-slot ranges) are not yet supported.</p>","class_methods":[{"html_id":"register_read_only_command(command:String)-class-method","name":"register_read_only_command","doc":"Tell the cluster driver that the specified Redis command can be routed to\nread-only replicas.\n\n```\nRedis::Cluster.register_read_only_command \"mymodule.get\"\n```","summary":"<p>Tell the cluster driver that the specified Redis command can be routed to read-only replicas.</p>","abstract":false,"args":[{"name":"command","external_name":"command","restriction":"String"}],"args_string":"(command : String)","args_html":"(command : <a href=\"../String.html\">String</a>)","location":{"filename":"src/cluster.cr","line_number":65,"url":null},"def":{"name":"register_read_only_command","args":[{"name":"command","external_name":"command","restriction":"String"}],"visibility":"Public","body":"READ_ONLY_COMMANDS << command"}},{"html_id":"register_read_only_commands(commands:Enumerable(String))-class-method","name":"register_read_only_commands","doc":"Tell the cluster driver that all the specified Redis commands can be\nrouted to read-only replicas.\n\n```\nRedis::Cluster.register_read_only_commands %w[\n  mymodule.get\n  mymodule.mget\n]\n```","summary":"<p>Tell the cluster driver that all the specified Redis commands can be routed to read-only replicas.</p>","abstract":false,"args":[{"name":"commands","external_name":"commands","restriction":"Enumerable(String)"}],"args_string":"(commands : Enumerable(String))","args_html":"(commands : Enumerable(<a href=\"../String.html\">String</a>))","location":{"filename":"src/cluster.cr","line_number":55,"url":null},"def":{"name":"register_read_only_commands","args":[{"name":"commands","external_name":"commands","restriction":"Enumerable(String)"}],"visibility":"Public","body":"commands.each do |command|\n  register_read_only_command(command)\nend"}}],"constructors":[{"html_id":"new(uri:URI=URI.parse(ENV[\"REDIS_CLUSTER_URL\"]?||\"redis:///\"))-class-method","name":"new","doc":"Pass a `URI` (defaulting to the `REDIS_CLUSTER_URL` environment variable)\nto connect to the specified Redis cluster — the URI can point to _any_\nserver in the cluster and `Redis::Cluster` will discover the rest.","summary":"<p>Pass a <code>URI</code> (defaulting to the <code>REDIS_CLUSTER_URL</code> environment variable) to connect to the specified Redis cluster — the URI can point to <em>any</em> server in the cluster and <code><a href=\"../Redis/Cluster.html\">Redis::Cluster</a></code> will discover the rest.</p>","abstract":false,"args":[{"name":"uri","default_value":"URI.parse(ENV[\"REDIS_CLUSTER_URL\"]? || \"redis:///\")","external_name":"uri","restriction":"URI"}],"args_string":"(uri : URI = URI.parse(ENV[\"REDIS_CLUSTER_URL\"]? || \"redis:///\"))","args_html":"(uri : URI = <span class=\"t\">URI</span>.parse(<span class=\"t\">ENV</span>[<span class=\"s\">&quot;REDIS_CLUSTER_URL&quot;</span>]? || <span class=\"s\">&quot;redis:///&quot;</span>))","location":{"filename":"src/cluster.cr","line_number":72,"url":null},"def":{"name":"new","args":[{"name":"uri","default_value":"URI.parse(ENV[\"REDIS_CLUSTER_URL\"]? || \"redis:///\")","external_name":"uri","restriction":"URI"}],"visibility":"Public","body":"_ = allocate\n_.initialize(uri)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"close-instance-method","name":"close","doc":"Close all connections to this Redis cluster","summary":"<p>Close all connections to this Redis cluster</p>","abstract":false,"location":{"filename":"src/cluster.cr","line_number":338,"url":null},"def":{"name":"close","visibility":"Public","body":"begin\n  @write_pools.each do |__arg7|\n    pool = __arg7[1]\n    pool.close\n  end\n  @read_pools.each do |__arg8|\n    pool = __arg8[1]\n    pool.close\n  end\nensure\n  @closed = true\nend"}},{"html_id":"flushdb-instance-method","name":"flushdb","doc":"Executes `flushdb` on each shard in the cluster.","summary":"<p>Executes <code><a href=\"../Redis/Cluster.html#flushdb-instance-method\">#flushdb</a></code> on each shard in the cluster.</p>","abstract":false,"location":{"filename":"src/cluster.cr","line_number":210,"url":null},"def":{"name":"flushdb","visibility":"Public","body":"each_master(&.run({\"flushdb\"}))"}},{"html_id":"keys:Array(String)-instance-method","name":"keys","doc":"Get all key across all shards. This executes a `keys` command on every\nshard in the cluster. Probably not a good idea in production since this\nwill block every Redis shard or replica for the duration of the query, but\nwe're supporting it because you may have a reasonable use case for it at\n_some_ point and it's just not easy to do otherwise.","summary":"<p>Get all key across all shards.</p>","abstract":false,"location":{"filename":"src/cluster.cr","line_number":180,"url":null},"def":{"name":"keys","return_type":"Array(String)","visibility":"Public","body":"keys = [] of String\neach_unique_replica() do |__arg2|\n  __arg2.keys.each do |key|\n    keys << (key.as(String))\n  end\nend\nkeys\n"}},{"html_id":"pipeline(key:String,&)-instance-method","name":"pipeline","doc":"Run a pipeline for the specified key\n\n```\ncluster.pipeline \"{widgets}\" do |pipe|\n  widget_ids.each do |id|\n    pipe.get \"{widgets}:#{id}\"\n  end\nend\n```\n\nWARNING: All keys that this pipeline operates on _MUST_ reside on the same\nshard. It's best to pass a pre-hashed key (one containing `{}`) to this\nmethod. See the example above.","summary":"<p>Run a pipeline for the specified key</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String, &)","args_html":"(key : <a href=\"../String.html\">String</a>, &)","location":{"filename":"src/cluster.cr","line_number":200,"url":null},"def":{"name":"pipeline","args":[{"name":"key","external_name":"key","restriction":"String"}],"yields":1,"visibility":"Public","body":"(write_pool_for(key)).checkout(&.pipeline do |pipe|\n  yield pipe\nend)"}},{"html_id":"run(full_command)-instance-method","name":"run","doc":"Execute the given command and return the result from the server. Commands\nmust be an `Enumerable` and its `size` method must be re-entrant.\n\n```\nrun({\"set\", \"foo\", \"bar\"})\n```","summary":"<p>Execute the given command and return the result from the server.</p>","abstract":false,"args":[{"name":"full_command","external_name":"full_command","restriction":""}],"args_string":"(full_command)","args_html":"(full_command)","location":{"filename":"src/cluster.cr","line_number":268,"url":null},"def":{"name":"run","args":[{"name":"full_command","external_name":"full_command","restriction":""}],"visibility":"Public","body":"if full_command.empty?\n  raise(ArgumentError.new(\"Redis commands must have at least one component\"))\nend\ncommand = full_command[0]\nif key = full_command[1]?\n  if command =~ (/[A-Z]/)\n    command = command.downcase\n  end\n  started_at = Time.monotonic\n  (if READ_ONLY_COMMANDS.includes?(command)\n    read_pool_for(key)\n  else\n    write_pool_for(key)\n  end).checkout do |connection|\n    connection.run(full_command)\n  end.tap do\n    LOG.debug(&.emit(command: full_command.join(' '), duration: (Time.monotonic - started_at).total_seconds))\n  end\nelse\n  raise(Error.new(\"No key was specified for this command, so the cluster driver cannot route it to an appropriate Redis shard. A cluster-specific method must be added to handle cases like these until a generalized solution is added.\"))\nend\n"}},{"html_id":"scan_each(*args,**kwargs,&):Nil-instance-method","name":"scan_each","doc":"Execute `Commands#scan_each` on each shard, yielding any matching keys.","summary":"<p>Execute <code>Commands#scan_each</code> on each shard, yielding any matching keys.</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs, &) : Nil","args_html":"(*args, **kwargs, &) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/cluster.cr","line_number":205,"url":null},"def":{"name":"scan_each","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","external_name":"kwargs","restriction":""},"splat_index":0,"yields":1,"return_type":"Nil","visibility":"Public","body":"each_unique_replica(&.scan_each(*args, **kwargs) do |key|\n  yield key\nend)"}},{"html_id":"slot_for(key:String)-instance-method","name":"slot_for","doc":"Return the Redis hash slot for the given key. This is useful for seeing\nwhich shard your command will be routed to.","summary":"<p>Return the Redis hash slot for the given key.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/cluster.cr","line_number":381,"url":null},"def":{"name":"slot_for","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"if (hash_start = key.index('{')) && (hash_end = key.index('}', hash_start + 1))\n  key = key[(hash_start + 1)..(hash_end - 1)]\nend\n(CRC16.checksum(key)) % 16384\n"}}],"types":[{"html_id":"redis/Redis/Cluster/Ask","path":"Redis/Cluster/Ask.html","kind":"class","full_name":"Redis::Cluster::Ask","name":"Ask","abstract":false,"superclass":{"html_id":"redis/Redis/Cluster/Error","kind":"class","full_name":"Redis::Cluster::Error","name":"Error"},"ancestors":[{"html_id":"redis/Redis/Cluster/Error","kind":"class","full_name":"Redis::Cluster::Error","name":"Error"},{"html_id":"redis/Redis/Error","kind":"class","full_name":"Redis::Error","name":"Error"},{"html_id":"redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/errors.cr","line_number":23,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Cluster","kind":"class","full_name":"Redis::Cluster","name":"Cluster"}},{"html_id":"redis/Redis/Cluster/CrossSlot","path":"Redis/Cluster/CrossSlot.html","kind":"class","full_name":"Redis::Cluster::CrossSlot","name":"CrossSlot","abstract":false,"superclass":{"html_id":"redis/Redis/Cluster/Error","kind":"class","full_name":"Redis::Cluster::Error","name":"Error"},"ancestors":[{"html_id":"redis/Redis/Cluster/Error","kind":"class","full_name":"Redis::Cluster::Error","name":"Error"},{"html_id":"redis/Redis/Error","kind":"class","full_name":"Redis::Error","name":"Error"},{"html_id":"redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/errors.cr","line_number":27,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Cluster","kind":"class","full_name":"Redis::Cluster","name":"Cluster"}},{"html_id":"redis/Redis/Cluster/Error","path":"Redis/Cluster/Error.html","kind":"class","full_name":"Redis::Cluster::Error","name":"Error","abstract":false,"superclass":{"html_id":"redis/Redis/Error","kind":"class","full_name":"Redis::Error","name":"Error"},"ancestors":[{"html_id":"redis/Redis/Error","kind":"class","full_name":"Redis::Error","name":"Error"},{"html_id":"redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/errors.cr","line_number":16,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"redis/Redis/Cluster/Ask","kind":"class","full_name":"Redis::Cluster::Ask","name":"Ask"},{"html_id":"redis/Redis/Cluster/CrossSlot","kind":"class","full_name":"Redis::Cluster::CrossSlot","name":"CrossSlot"},{"html_id":"redis/Redis/Cluster/Moved","kind":"class","full_name":"Redis::Cluster::Moved","name":"Moved"}],"namespace":{"html_id":"redis/Redis/Cluster","kind":"class","full_name":"Redis::Cluster","name":"Cluster"}},{"html_id":"redis/Redis/Cluster/Moved","path":"Redis/Cluster/Moved.html","kind":"class","full_name":"Redis::Cluster::Moved","name":"Moved","abstract":false,"superclass":{"html_id":"redis/Redis/Cluster/Error","kind":"class","full_name":"Redis::Cluster::Error","name":"Error"},"ancestors":[{"html_id":"redis/Redis/Cluster/Error","kind":"class","full_name":"Redis::Cluster::Error","name":"Error"},{"html_id":"redis/Redis/Error","kind":"class","full_name":"Redis::Error","name":"Error"},{"html_id":"redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/errors.cr","line_number":19,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Cluster","kind":"class","full_name":"Redis::Cluster","name":"Cluster"}}]},{"html_id":"redis/Redis/Commands","path":"Redis/Commands.html","kind":"module","full_name":"Redis::Commands","name":"Commands","abstract":false,"locations":[{"filename":"src/commands.cr","line_number":9,"url":null},{"filename":"src/json.cr","line_number":319,"url":null},{"filename":"src/search.cr","line_number":194,"url":null},{"filename":"src/time_series.cr","line_number":204,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"redis/Redis/Cluster","kind":"class","full_name":"Redis::Cluster","name":"Cluster"},{"html_id":"redis/Redis/Connection","kind":"class","full_name":"Redis::Connection","name":"Connection"},{"html_id":"redis/Redis/Pipeline","kind":"class","full_name":"Redis::Pipeline","name":"Pipeline"},{"html_id":"redis/Redis/Transaction","kind":"class","full_name":"Redis::Transaction","name":"Transaction"}],"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"doc":"All Redis commands are defined in this module. Any paradigm that needs to\nuse these commands simply overrides `run`, which takes a single `command`\nobject, which must be an `Enumerable`.\n\nTODO: Add more Redis commands from https://redis.io/commands","summary":"<p>All Redis commands are defined in this module.</p>","instance_methods":[{"html_id":"blpop(*keys:String,timeout:Time::Span)-instance-method","name":"blpop","doc":"Remove and return an element from the end of the given list. If the list\nis empty or the key does not exist, this method waits the specified amount\nof time for an element to be added to it by another connection. If the\nelement *is* added by another connection within that amount of time, this\nmethod will return it immediately. If it *is not*, then this method returns\n`nil`.\n\n```\nredis.rpush \"foo\", \"first\"\nspawn do\n  sleep 100.milliseconds\n  redis.rpush \"foo\", \"second\"\nend\nredis.blpop \"foo\", 1.second # => \"first\"\nredis.blpop \"foo\", 1.second # => \"second\" (after 100 milliseconds)\nredis.blpop \"foo\", 1.second # => nil (after 1 second)\n```","summary":"<p>Remove and return an element from the end of the given list.</p>","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"String"},{"name":"timeout","external_name":"timeout","restriction":"Time::Span"}],"args_string":"(*keys : String, timeout : Time::Span)","args_html":"(*keys : <a href=\"../String.html\">String</a>, timeout : Time::Span)","location":{"filename":"src/commands.cr","line_number":235,"url":null},"def":{"name":"blpop","args":[{"name":"keys","external_name":"keys","restriction":"String"},{"name":"timeout","external_name":"timeout","restriction":"Time::Span"}],"splat_index":0,"visibility":"Public","body":"blpop(*keys, timeout: timeout.total_seconds.to_i.to_s)"}},{"html_id":"blpop(*keys:String,timeout:Int|Float)-instance-method","name":"blpop","doc":"Remove and return an element from the end of the given list. If the list\nis empty or the key does not exist, this method waits the specified number\nof seconds for an element to be added to it by another connection. If the\nelement *is* added by another connection within that number of seconds,\nthis method will return it immediately. If it *is not*, then this method\nreturns `nil`.\n\n```\nredis.lpush \"foo\", \"first\"\nspawn do\n  sleep 100.milliseconds\n  redis.lpush \"foo\", \"second\"\nend\nredis.blpop \"foo\", 1 # => \"first\"\nredis.blpop \"foo\", 1 # => \"second\" (after 100 milliseconds)\nredis.blpop \"foo\", 1 # => nil (after 1 second)\n```","summary":"<p>Remove and return an element from the end of the given list.</p>","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"String"},{"name":"timeout","external_name":"timeout","restriction":"Int | Float"}],"args_string":"(*keys : String, timeout : Int | Float)","args_html":"(*keys : <a href=\"../String.html\">String</a>, timeout : <a href=\"../Int.html\">Int</a> | Float)","location":{"filename":"src/commands.cr","line_number":256,"url":null},"def":{"name":"blpop","args":[{"name":"keys","external_name":"keys","restriction":"String"},{"name":"timeout","external_name":"timeout","restriction":"Int | Float"}],"splat_index":0,"visibility":"Public","body":"if timeout == timeout.to_i\n  timeout = timeout.to_i\nend\nblpop(*keys, timeout: timeout.to_s)\n"}},{"html_id":"blpop(*keys:String,timeout:String)-instance-method","name":"blpop","doc":"Remove and return an element from the end of the given list. If the list\nis empty or the key does not exist, this method waits the specified number\nof seconds for an element to be added to it by another connection. If the\nelement *is* added by another connection within that number of seconds,\nthis method will return it immediately. If it *is not*, then this method\nreturns `nil`.\n\n```\nredis.lpush \"foo\", \"first\"\nspawn do\n  sleep 100.milliseconds\n  redis.lpush \"foo\", \"second\"\nend\nredis.blpop \"foo\", \"1\" # => \"first\"\nredis.blpop \"foo\", \"1\" # => \"second\" (after 100 milliseconds)\nredis.blpop \"foo\", \"1\" # => nil (after 1 second)\n```","summary":"<p>Remove and return an element from the end of the given list.</p>","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"String"},{"name":"timeout","external_name":"timeout","restriction":"String"}],"args_string":"(*keys : String, timeout : String)","args_html":"(*keys : <a href=\"../String.html\">String</a>, timeout : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":278,"url":null},"def":{"name":"blpop","args":[{"name":"keys","external_name":"keys","restriction":"String"},{"name":"timeout","external_name":"timeout","restriction":"String"}],"splat_index":0,"visibility":"Public","body":"run(({\"blpop\"} + keys) + {timeout})"}},{"html_id":"brpop(keys:Enumerable(String),timeout:Int)-instance-method","name":"brpop","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"Enumerable(String)"},{"name":"timeout","external_name":"timeout","restriction":"Int"}],"args_string":"(keys : Enumerable(String), timeout : Int)","args_html":"(keys : Enumerable(<a href=\"../String.html\">String</a>), timeout : <a href=\"../Int.html\">Int</a>)","location":{"filename":"src/commands.cr","line_number":739,"url":null},"def":{"name":"brpop","args":[{"name":"keys","external_name":"keys","restriction":"Enumerable(String)"},{"name":"timeout","external_name":"timeout","restriction":"Int"}],"visibility":"Public","body":"command = Array(String).new(initial_capacity: 2 + keys.size)\ncommand << \"brpop\"\nkeys.each do |key|\n  command << key\nend\ncommand << timeout.to_s\nrun(command)\n"}},{"html_id":"brpop(*keys:String,timeout:Time::Span)-instance-method","name":"brpop","doc":"Remove and return an element from the end of the given list. If the list\nis empty or the key does not exist, this method waits the specified amount\nof time for an element to be added to it by another connection. If the\nelement *is* added by another connection within that amount of time, this\nmethod will return it immediately. If it *is not*, then this method returns\n`nil`.\n\n```\nredis.lpush \"foo\", \"first\"\nspawn do\n  sleep 100.milliseconds\n  redis.lpush \"foo\", \"second\"\nend\nredis.brpop \"foo\", 1.second # => \"first\"\nredis.brpop \"foo\", 1.second # => \"second\" (after 100 milliseconds)\nredis.brpop \"foo\", 1.second # => nil (after 1 second)\n```","summary":"<p>Remove and return an element from the end of the given list.</p>","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"String"},{"name":"timeout","external_name":"timeout","restriction":"Time::Span"}],"args_string":"(*keys : String, timeout : Time::Span)","args_html":"(*keys : <a href=\"../String.html\">String</a>, timeout : Time::Span)","location":{"filename":"src/commands.cr","line_number":299,"url":null},"def":{"name":"brpop","args":[{"name":"keys","external_name":"keys","restriction":"String"},{"name":"timeout","external_name":"timeout","restriction":"Time::Span"}],"splat_index":0,"visibility":"Public","body":"brpop(*keys, timeout: timeout.total_seconds)"}},{"html_id":"brpop(*keys:String,timeout:Number)-instance-method","name":"brpop","doc":"Remove and return an element from the end of the given list. If the list\nis empty or the key does not exist, this method waits the specified number\nof seconds for an element to be added to it by another connection. If the\nelement *is* added by another connection within that number of seconds,\nthis method will return it immediately. If it *is not*, then this method\nreturns `nil`.\n\n```\nredis.lpush \"foo\", \"first\"\nspawn do\n  sleep 100.milliseconds\n  redis.lpush \"foo\", \"second\"\nend\nredis.brpop \"foo\", 1 # => \"first\"\nredis.brpop \"foo\", 1 # => \"second\" (after 100 milliseconds)\nredis.brpop \"foo\", 1 # => nil (after 1 second)\n```","summary":"<p>Remove and return an element from the end of the given list.</p>","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"String"},{"name":"timeout","external_name":"timeout","restriction":"Number"}],"args_string":"(*keys : String, timeout : Number)","args_html":"(*keys : <a href=\"../String.html\">String</a>, timeout : Number)","location":{"filename":"src/commands.cr","line_number":320,"url":null},"def":{"name":"brpop","args":[{"name":"keys","external_name":"keys","restriction":"String"},{"name":"timeout","external_name":"timeout","restriction":"Number"}],"splat_index":0,"visibility":"Public","body":"if timeout == timeout.to_i\n  timeout = timeout.to_i\nend\nbrpop(*keys, timeout: timeout.to_s)\n"}},{"html_id":"brpop(*keys:String,timeout:String)-instance-method","name":"brpop","doc":"Remove and return an element from the end of the given list. If the list\nis empty or the key does not exist, this method waits the specified number\nof seconds for an element to be added to it by another connection. If the\nelement *is* added by another connection within that number of seconds,\nthis method will return it immediately. If it *is not*, then this method\nreturns `nil`.\n\n```\nredis.lpush \"foo\", \"first\"\nspawn do\n  sleep 100.milliseconds\n  redis.lpush \"foo\", \"second\"\nend\nredis.brpop \"foo\", \"1\" # => \"first\"\nredis.brpop \"foo\", \"1\" # => \"second\" (after 100 milliseconds)\nredis.brpop \"foo\", \"1\" # => nil (after 1 second)\n```","summary":"<p>Remove and return an element from the end of the given list.</p>","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"String"},{"name":"timeout","external_name":"timeout","restriction":"String"}],"args_string":"(*keys : String, timeout : String)","args_html":"(*keys : <a href=\"../String.html\">String</a>, timeout : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":342,"url":null},"def":{"name":"brpop","args":[{"name":"keys","external_name":"keys","restriction":"String"},{"name":"timeout","external_name":"timeout","restriction":"String"}],"splat_index":0,"visibility":"Public","body":"run(({\"brpop\"} + keys) + {timeout})"}},{"html_id":"decr(key:String)-instance-method","name":"decr","doc":"Atomically decrement and return the integer value for the specified key,\ncreating it if it does not exist\n\n```\nredis.del \"counter\"\nredis.decr \"counter\" # => -1\n```","summary":"<p>Atomically decrement and return the integer value for the specified key, creating it if it does not exist</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":93,"url":null},"def":{"name":"decr","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"run({\"decr\", key})"}},{"html_id":"decrby(key:String,amount:Int|String)-instance-method","name":"decrby","doc":"Atomically decrement and return the integer value for the specified key by\nthe specified amount, creating it if it does not exist\n\n```\nredis.del \"counter\"\nredis.decrby \"counter\", 2 # => -2\n```","summary":"<p>Atomically decrement and return the integer value for the specified key by the specified amount, creating it if it does not exist</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"amount","external_name":"amount","restriction":"Int | String"}],"args_string":"(key : String, amount : Int | String)","args_html":"(key : <a href=\"../String.html\">String</a>, amount : <a href=\"../Int.html\">Int</a> | <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":115,"url":null},"def":{"name":"decrby","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"amount","external_name":"amount","restriction":"Int | String"}],"visibility":"Public","body":"run({\"decrby\", key, amount.to_s})"}},{"html_id":"del(*keys:String)-instance-method","name":"del","doc":"Delete all specified keys and return the number of keys deleted.\n\n```\nredis.set \"foo\", \"12\"\nredis.del \"foo\", \"bar\" # => 1\nredis.del \"foo\", \"bar\" # => 0\n```","summary":"<p>Delete all specified keys and return the number of keys deleted.</p>","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"String"}],"args_string":"(*keys : String)","args_html":"(*keys : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":126,"url":null},"def":{"name":"del","args":[{"name":"keys","external_name":"keys","restriction":"String"}],"splat_index":0,"visibility":"Public","body":"run({\"del\"} + keys)"}},{"html_id":"exists(*keys:String)-instance-method","name":"exists","doc":"Return the number of specified keys that exist\n\n```\nredis.exists(\"foo\", \"bar\") # => 0\nredis.set \"foo\", \"exists now\"\nredis.exists(\"foo\", \"bar\") # => 1\nredis.set \"bar\", \"also exists now\"\nredis.exists(\"foo\", \"bar\") # => 2\n```","summary":"<p>Return the number of specified keys that exist</p>","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"String"}],"args_string":"(*keys : String)","args_html":"(*keys : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":143,"url":null},"def":{"name":"exists","args":[{"name":"keys","external_name":"keys","restriction":"String"}],"splat_index":0,"visibility":"Public","body":"run({\"exists\"} + keys)"}},{"html_id":"expire(key:String,ttl:Int)-instance-method","name":"expire","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"ttl","external_name":"ttl","restriction":"Int"}],"args_string":"(key : String, ttl : Int)","args_html":"(key : <a href=\"../String.html\">String</a>, ttl : <a href=\"../Int.html\">Int</a>)","location":{"filename":"src/commands.cr","line_number":647,"url":null},"def":{"name":"expire","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"ttl","external_name":"ttl","restriction":"Int"}],"visibility":"Public","body":"run({\"expire\", key, ttl.to_s})"}},{"html_id":"expireat(key:String,at:Time)-instance-method","name":"expireat","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"at","external_name":"at","restriction":"Time"}],"args_string":"(key : String, at : Time)","args_html":"(key : <a href=\"../String.html\">String</a>, at : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/commands.cr","line_number":655,"url":null},"def":{"name":"expireat","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"at","external_name":"at","restriction":"Time"}],"visibility":"Public","body":"run({\"expireat\", key, at.to_unix.to_s})"}},{"html_id":"flushdb-instance-method","name":"flushdb","abstract":false,"location":{"filename":"src/commands.cr","line_number":769,"url":null},"def":{"name":"flushdb","visibility":"Public","body":"run({\"flushdb\"})"}},{"html_id":"ft-instance-method","name":"ft","summary":"<p><span class=\"flag lime\">EXPERIMENTAL</span>  RediSearch support is still under development. Some APIs may change while details are discovered.</p>","abstract":false,"location":{"filename":"src/search.cr","line_number":196,"url":null},"def":{"name":"ft","visibility":"Public","body":"FullText.new(self)"}},{"html_id":"get(key:String)-instance-method","name":"get","doc":"Get the value for the specified key\n\n```\nredis.set \"foo\", \"bar\"\nredis.get(\"foo\") # => \"bar\"\n```","summary":"<p>Get the value for the specified key</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":71,"url":null},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"run({\"get\", key})"}},{"html_id":"hget(key:String,field:String)-instance-method","name":"hget","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"field","external_name":"field","restriction":"String"}],"args_string":"(key : String, field : String)","args_html":"(key : <a href=\"../String.html\">String</a>, field : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":598,"url":null},"def":{"name":"hget","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"field","external_name":"field","restriction":"String"}],"visibility":"Public","body":"run({\"hget\", key, field})"}},{"html_id":"hgetall(key:String)-instance-method","name":"hgetall","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":602,"url":null},"def":{"name":"hgetall","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"run({\"hgetall\", key})"}},{"html_id":"hmget(key:String,*fields:String)-instance-method","name":"hmget","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"fields","external_name":"fields","restriction":"String"}],"args_string":"(key : String, *fields : String)","args_html":"(key : <a href=\"../String.html\">String</a>, *fields : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":606,"url":null},"def":{"name":"hmget","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"fields","external_name":"fields","restriction":"String"}],"splat_index":1,"visibility":"Public","body":"run({\"hmget\", key} + fields)"}},{"html_id":"hmset(key:String,data:Hash(String,String))-instance-method","name":"hmset","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"data","external_name":"data","restriction":"Hash(String, String)"}],"args_string":"(key : String, data : Hash(String, String))","args_html":"(key : <a href=\"../String.html\">String</a>, data : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/commands.cr","line_number":614,"url":null},"def":{"name":"hmset","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"data","external_name":"data","restriction":"Hash(String, String)"}],"visibility":"Public","body":"command = Array(String).new(initial_capacity: 2 + data.size)\n(command << \"hmset\") << key\ndata.each do |key, value|\n  (command << key) << value\nend\nrun(command)\n"}},{"html_id":"hset(key:String,field:String,value:String)-instance-method","name":"hset","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"field","external_name":"field","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(key : String, field : String, value : String)","args_html":"(key : <a href=\"../String.html\">String</a>, field : <a href=\"../String.html\">String</a>, value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":610,"url":null},"def":{"name":"hset","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"field","external_name":"field","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"run({\"hset\", key, field, value})"}},{"html_id":"incr(key:String)-instance-method","name":"incr","doc":"Atomically increment and return the integer value for the specified key,\ncreating it if it does not exist\n\n```\nredis.del \"counter\"\nredis.incr \"counter\" # => 1\n```","summary":"<p>Atomically increment and return the integer value for the specified key, creating it if it does not exist</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":82,"url":null},"def":{"name":"incr","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"run({\"incr\", key})"}},{"html_id":"incrby(key:String,amount:Int|String)-instance-method","name":"incrby","doc":"Atomically increment and return the integer value for the specified key by\nthe specified amount, creating it if it does not exist\n\n```\nredis.del \"counter\"\nredis.incrby \"counter\", 2 # => 2\n```","summary":"<p>Atomically increment and return the integer value for the specified key by the specified amount, creating it if it does not exist</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"amount","external_name":"amount","restriction":"Int | String"}],"args_string":"(key : String, amount : Int | String)","args_html":"(key : <a href=\"../String.html\">String</a>, amount : <a href=\"../Int.html\">Int</a> | <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":104,"url":null},"def":{"name":"incrby","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"amount","external_name":"amount","restriction":"Int | String"}],"visibility":"Public","body":"run({\"incrby\", key, amount.to_s})"}},{"html_id":"info-instance-method","name":"info","abstract":false,"location":{"filename":"src/commands.cr","line_number":773,"url":null},"def":{"name":"info","visibility":"Public","body":"((run({\"info\"})).as(String)).lines.reject do |line|\n  line =~ (/^(#|$)/)\nend.map(&.split(':', 2)).to_h"}},{"html_id":"json-instance-method","name":"json","doc":"Return a `Redis::JSON` instance that wraps the current `Redis::Client` or\n`Redis::Cluster`.","summary":"<p>Return a <code><a href=\"../Redis/JSON.html\">Redis::JSON</a></code> instance that wraps the current <code><a href=\"../Redis/Client.html\">Redis::Client</a></code> or <code><a href=\"../Redis/Cluster.html\">Redis::Cluster</a></code>.</p>\n<p><span class=\"flag lime\">EXPERIMENTAL</span>  Support for the RedisJSON module is still under development and subject to change.</p>","abstract":false,"location":{"filename":"src/json.cr","line_number":323,"url":null},"def":{"name":"json","visibility":"Public","body":"JSON.new(self)"}},{"html_id":"keys(pattern=\"*\")-instance-method","name":"keys","doc":"Get the keys whose names follow the specified glob pattern. If a pattern\nis not specified, it will return all keys by default. Be careful when\nusing this command on Redis servers with a lot of traffic and millions\nof keys.\n\n```\nredis.keys       # => [\"foo\", \"bar\", \"baz\"]\nredis.keys(\"f*\") # => [\"foo\"]\nredis.keys(\"b*\") # => [\"bar\", \"baz\"]\n```","summary":"<p>Get the keys whose names follow the specified glob pattern.</p>","abstract":false,"args":[{"name":"pattern","default_value":"\"*\"","external_name":"pattern","restriction":""}],"args_string":"(pattern = \"*\")","args_html":"(pattern = <span class=\"s\">&quot;*&quot;</span>)","location":{"filename":"src/commands.cr","line_number":28,"url":null},"def":{"name":"keys","args":[{"name":"pattern","default_value":"\"*\"","external_name":"pattern","restriction":""}],"visibility":"Public","body":"run({\"keys\", pattern})"}},{"html_id":"llen(key:String)-instance-method","name":"llen","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":625,"url":null},"def":{"name":"llen","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"run({\"llen\", key})"}},{"html_id":"lpop(key:String,count:String?=nil)-instance-method","name":"lpop","doc":"Remove an item from the beginning of a list, returning the item or `nil`\nif the list was empty.\n\n```\nredis.del \"my-list\" # Delete so we know it's empty\nredis.lpush \"my-list\", \"foo\"\nredis.lpop \"my-list\" # => \"foo\"\nredis.lpop \"my-list\" # => nil\n```","summary":"<p>Remove an item from the beginning of a list, returning the item or <code>nil</code> if the list was empty.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"count","default_value":"nil","external_name":"count","restriction":"String | ::Nil"}],"args_string":"(key : String, count : String? = nil)","args_html":"(key : <a href=\"../String.html\">String</a>, count : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>)","location":{"filename":"src/commands.cr","line_number":168,"url":null},"def":{"name":"lpop","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"count","default_value":"nil","external_name":"count","restriction":"String | ::Nil"}],"visibility":"Public","body":"command = {\"lpop\", key}\nif count\n  command = command + {count}\nend\nrun(command)\n"}},{"html_id":"lpush(key:String,values:Enumerable(String))-instance-method","name":"lpush","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"values","external_name":"values","restriction":"Enumerable(String)"}],"args_string":"(key : String, values : Enumerable(String))","args_html":"(key : <a href=\"../String.html\">String</a>, values : Enumerable(<a href=\"../String.html\">String</a>))","location":{"filename":"src/commands.cr","line_number":731,"url":null},"def":{"name":"lpush","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"values","external_name":"values","restriction":"Enumerable(String)"}],"visibility":"Public","body":"command = Array(String).new(initial_capacity: 2 + values.size)\n(command << \"lpush\") << key\nvalues.each do |value|\n  command << value\nend\nrun(command)\n"}},{"html_id":"lpush(key,*values:String)-instance-method","name":"lpush","doc":"Insert an item at the beginning of a list, returning the number of items\nin the list after the insert.\n\n```\nredis.del \"my-list\"                 # Delete so we know it's empty\nredis.lpush \"my-list\", \"foo\", \"bar\" # => 2\nredis.lpush \"my-list\", \"foo\", \"bar\" # => 4\n```","summary":"<p>Insert an item at the beginning of a list, returning the number of items in the list after the insert.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"values","external_name":"values","restriction":"String"}],"args_string":"(key, *values : String)","args_html":"(key, *values : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":155,"url":null},"def":{"name":"lpush","args":[{"name":"key","external_name":"key","restriction":""},{"name":"values","external_name":"values","restriction":"String"}],"splat_index":1,"visibility":"Public","body":"run({\"lpush\", key} + values)"}},{"html_id":"lrange(key:String,starting:String,ending:String)-instance-method","name":"lrange","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"starting","external_name":"starting","restriction":"String"},{"name":"ending","external_name":"ending","restriction":"String"}],"args_string":"(key : String, starting : String, ending : String)","args_html":"(key : <a href=\"../String.html\">String</a>, starting : <a href=\"../String.html\">String</a>, ending : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":629,"url":null},"def":{"name":"lrange","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"starting","external_name":"starting","restriction":"String"},{"name":"ending","external_name":"ending","restriction":"String"}],"visibility":"Public","body":"run({\"lrange\", key, starting, ending})"}},{"html_id":"lrem(key:String,count:Int,value:String)-instance-method","name":"lrem","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"count","external_name":"count","restriction":"Int"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(key : String, count : Int, value : String)","args_html":"(key : <a href=\"../String.html\">String</a>, count : <a href=\"../Int.html\">Int</a>, value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":727,"url":null},"def":{"name":"lrem","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"count","external_name":"count","restriction":"Int"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"run({\"lrem\", key, count.to_s, value})"}},{"html_id":"mget(keys:Enumerable(String))-instance-method","name":"mget","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"Enumerable(String)"}],"args_string":"(keys : Enumerable(String))","args_html":"(keys : Enumerable(<a href=\"../String.html\">String</a>))","location":{"filename":"src/commands.cr","line_number":751,"url":null},"def":{"name":"mget","args":[{"name":"keys","external_name":"keys","restriction":"Enumerable(String)"}],"visibility":"Public","body":"command = Array(String).new(initial_capacity: 1 + keys.size)\ncommand << \"mget\"\nkeys.each do |key|\n  command << key\nend\nrun(command)\n"}},{"html_id":"mset(data:Hash(String,String))-instance-method","name":"mset","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Hash(String, String)"}],"args_string":"(data : Hash(String, String))","args_html":"(data : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/commands.cr","line_number":759,"url":null},"def":{"name":"mset","args":[{"name":"data","external_name":"data","restriction":"Hash(String, String)"}],"visibility":"Public","body":"command = Array(String).new(initial_capacity: 1 + data.size)\ncommand << \"mset\"\ndata.each do |key, value|\n  (command << key) << value\nend\nrun(command)\n"}},{"html_id":"pexpire(key:String,ttl:Int)-instance-method","name":"pexpire","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"ttl","external_name":"ttl","restriction":"Int"}],"args_string":"(key : String, ttl : Int)","args_html":"(key : <a href=\"../String.html\">String</a>, ttl : <a href=\"../Int.html\">Int</a>)","location":{"filename":"src/commands.cr","line_number":651,"url":null},"def":{"name":"pexpire","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"ttl","external_name":"ttl","restriction":"Int"}],"visibility":"Public","body":"run({\"pexpire\", key, ttl.to_s})"}},{"html_id":"pexpireat(key:String,at:Time)-instance-method","name":"pexpireat","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"at","external_name":"at","restriction":"Time"}],"args_string":"(key : String, at : Time)","args_html":"(key : <a href=\"../String.html\">String</a>, at : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/commands.cr","line_number":659,"url":null},"def":{"name":"pexpireat","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"at","external_name":"at","restriction":"Time"}],"visibility":"Public","body":"run({\"pexpireat\", key, at.to_unix_ms.to_s})"}},{"html_id":"pttl(key:String)-instance-method","name":"pttl","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":667,"url":null},"def":{"name":"pttl","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"run({\"pttl\", key})"}},{"html_id":"publish(channel:String,message:String)-instance-method","name":"publish","abstract":false,"args":[{"name":"channel","external_name":"channel","restriction":"String"},{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(channel : String, message : String)","args_html":"(channel : <a href=\"../String.html\">String</a>, message : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":384,"url":null},"def":{"name":"publish","args":[{"name":"channel","external_name":"channel","restriction":"String"},{"name":"message","external_name":"message","restriction":"String"}],"visibility":"Public","body":"run({\"publish\", channel, message})"}},{"html_id":"rpop(key:String)-instance-method","name":"rpop","doc":"Remove and return an element from the end of the given list. If the list\nis empty or the key does not exist, this method returns `nil`\n\n```\nredis.lpush \"foo\", \"hello\"\nredis.rpop \"foo\" # => \"hello\"\nredis.rpop \"foo\" # => nil\n```","summary":"<p>Remove and return an element from the end of the given list.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":202,"url":null},"def":{"name":"rpop","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"run({\"rpop\", key})"}},{"html_id":"rpoplpush(source:String,destination:String)-instance-method","name":"rpoplpush","doc":"Atomically remove an item from the end of a list and insert it at the\nbeginning of another. Returns that list item. If the first list is empty,\nnothing happens and this method returns `nil`.\n\n```\nredis.del \"foo\"\nredis.lpush \"foo\", \"hello\", \"world\"\nredis.rpoplpush \"foo\", \"bar\" # => \"hello\"\nredis.rpoplpush \"foo\", \"bar\" # => \"world\"\nredis.rpoplpush \"foo\", \"bar\" # => nil\n```","summary":"<p>Atomically remove an item from the end of a list and insert it at the beginning of another.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"String"},{"name":"destination","external_name":"destination","restriction":"String"}],"args_string":"(source : String, destination : String)","args_html":"(source : <a href=\"../String.html\">String</a>, destination : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":190,"url":null},"def":{"name":"rpoplpush","args":[{"name":"source","external_name":"source","restriction":"String"},{"name":"destination","external_name":"destination","restriction":"String"}],"visibility":"Public","body":"run({\"rpoplpush\", source, destination})"}},{"html_id":"rpush(key,*values:String)-instance-method","name":"rpush","doc":"Insert an item at the end of a list, returning the number of items\nin the list after the insert.\n\n```\nredis.del \"my-list\"                 # Delete so we know it's empty\nredis.rpush \"my-list\", \"foo\", \"bar\" # => 2\nredis.rpush \"my-list\", \"foo\", \"bar\" # => 4\n```","summary":"<p>Insert an item at the end of a list, returning the number of items in the list after the insert.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"values","external_name":"values","restriction":"String"}],"args_string":"(key, *values : String)","args_html":"(key, *values : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":214,"url":null},"def":{"name":"rpush","args":[{"name":"key","external_name":"key","restriction":""},{"name":"values","external_name":"values","restriction":"String"}],"splat_index":1,"visibility":"Public","body":"run({\"rpush\", key} + values)"}},{"html_id":"run(command)-instance-method","name":"run","doc":"Execute the given command and return the result from the server. Commands\nmust be an `Enumerable` and its `size` method must be re-entrant.\n\n```\nrun({\"set\", \"foo\", \"bar\"})\n```","summary":"<p>Execute the given command and return the result from the server.</p>","abstract":true,"args":[{"name":"command","external_name":"command","restriction":""}],"args_string":"(command)","args_html":"(command)","location":{"filename":"src/commands.cr","line_number":16,"url":null},"def":{"name":"run","args":[{"name":"command","external_name":"command","restriction":""}],"visibility":"Public","body":""}},{"html_id":"sadd(key:String,*values:String)-instance-method","name":"sadd","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"values","external_name":"values","restriction":"String"}],"args_string":"(key : String, *values : String)","args_html":"(key : <a href=\"../String.html\">String</a>, *values : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":346,"url":null},"def":{"name":"sadd","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"values","external_name":"values","restriction":"String"}],"splat_index":1,"visibility":"Public","body":"run({\"sadd\", key} + values)"}},{"html_id":"scan(cursor:String=\"0\",match:String?=nil,count:String|Int|Nil=nil,type:String?=nil)-instance-method","name":"scan","abstract":false,"args":[{"name":"cursor","default_value":"\"0\"","external_name":"cursor","restriction":"String"},{"name":"match","default_value":"nil","external_name":"match","restriction":"String | ::Nil"},{"name":"count","default_value":"nil","external_name":"count","restriction":"String | Int | Nil"},{"name":"type","default_value":"nil","external_name":"type","restriction":"String | ::Nil"}],"args_string":"(cursor : String = \"0\", match : String? = nil, count : String | Int | Nil = nil, type : String? = nil)","args_html":"(cursor : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;0&quot;</span>, match : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, count : <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, type : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>)","location":{"filename":"src/commands.cr","line_number":374,"url":null},"def":{"name":"scan","args":[{"name":"cursor","default_value":"\"0\"","external_name":"cursor","restriction":"String"},{"name":"match","default_value":"nil","external_name":"match","restriction":"String | ::Nil"},{"name":"count","default_value":"nil","external_name":"count","restriction":"String | Int | Nil"},{"name":"type","default_value":"nil","external_name":"type","restriction":"String | ::Nil"}],"visibility":"Public","body":"command = {\"scan\", cursor}\nif match\n  command = command + {\"match\", match}\nend\nif count\n  command = command + {\"count\", count.to_s}\nend\nif type\n  command = command + {\"type\", type}\nend\nrun(command)\n"}},{"html_id":"scard(key:String)-instance-method","name":"scard","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":370,"url":null},"def":{"name":"scard","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"run({\"scard\", key})"}},{"html_id":"sdiff(first:String,second:String)-instance-method","name":"sdiff","abstract":false,"args":[{"name":"first","external_name":"first","restriction":"String"},{"name":"second","external_name":"second","restriction":"String"}],"args_string":"(first : String, second : String)","args_html":"(first : <a href=\"../String.html\">String</a>, second : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":362,"url":null},"def":{"name":"sdiff","args":[{"name":"first","external_name":"first","restriction":"String"},{"name":"second","external_name":"second","restriction":"String"}],"visibility":"Public","body":"run({\"sdiff\", first, second})"}},{"html_id":"set(key:String,value:String,ex:String|Int?=nil,px:String|Int|Nil=nil,nx=false,xx=false,keepttl=false)-instance-method","name":"set","doc":"Set a given key to a given value, optionally specifying time-to-live (TTL).\n\n- `ex`: TTL in seconds (mnemonic: \"ex\" = \"expiration\")\n- `px`: TTL in milliseconds\n- `nx`: Only set this key if it does not exist (mnemonic: \"nx\" = it does \"not exist\")\n- `xx`: only set this key if it does exist (mnemonic: \"xx\" = it \"exists exists\" — look, I don't make the rules)\n- `keepttl`: If there is a TTL already set on the key, retain that TTL instead of overwriting it\n\n```\nredis.set \"foo\", \"bar\", ex: 1\nredis.get(\"foo\") # => \"bar\"\nsleep 1.second\nredis.get(\"foo\") # => nil\n```","summary":"<p>Set a given key to a given value, optionally specifying time-to-live (TTL).</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"},{"name":"ex","default_value":"nil","external_name":"ex","restriction":"String | Int | ::Nil"},{"name":"px","default_value":"nil","external_name":"px","restriction":"String | Int | Nil"},{"name":"nx","default_value":"false","external_name":"nx","restriction":""},{"name":"xx","default_value":"false","external_name":"xx","restriction":""},{"name":"keepttl","default_value":"false","external_name":"keepttl","restriction":""}],"args_string":"(key : String, value : String, ex : String | Int? = nil, px : String | Int | Nil = nil, nx = false, xx = false, keepttl = false)","args_html":"(key : <a href=\"../String.html\">String</a>, value : <a href=\"../String.html\">String</a>, ex : <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a>? = <span class=\"n\">nil</span>, px : <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, nx = <span class=\"n\">false</span>, xx = <span class=\"n\">false</span>, keepttl = <span class=\"n\">false</span>)","location":{"filename":"src/commands.cr","line_number":46,"url":null},"def":{"name":"set","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"},{"name":"ex","default_value":"nil","external_name":"ex","restriction":"String | Int | ::Nil"},{"name":"px","default_value":"nil","external_name":"px","restriction":"String | Int | Nil"},{"name":"nx","default_value":"false","external_name":"nx","restriction":""},{"name":"xx","default_value":"false","external_name":"xx","restriction":""},{"name":"keepttl","default_value":"false","external_name":"keepttl","restriction":""}],"visibility":"Public","body":"command = {\"set\", key, value}\nif ex\n  command = command + {\"ex\", ex.to_s}\nend\nif px\n  command = command + {\"px\", px.to_s}\nend\nif nx\n  command = command + {\"nx\"}\nend\nif xx\n  command = command + {\"xx\"}\nend\nif keepttl\n  command = command + {\"keepttl\"}\nend\nrun(command)\n"}},{"html_id":"set(key,value,ex:Time,nx=false,xx=false,keepttl=false)-instance-method","name":"set","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""},{"name":"ex","external_name":"ex","restriction":"Time"},{"name":"nx","default_value":"false","external_name":"nx","restriction":""},{"name":"xx","default_value":"false","external_name":"xx","restriction":""},{"name":"keepttl","default_value":"false","external_name":"keepttl","restriction":""}],"args_string":"(key, value, ex : Time, nx = false, xx = false, keepttl = false)","args_html":"(key, value, ex : <a href=\"../Time.html\">Time</a>, nx = <span class=\"n\">false</span>, xx = <span class=\"n\">false</span>, keepttl = <span class=\"n\">false</span>)","location":{"filename":"src/commands.cr","line_number":57,"url":null},"def":{"name":"set","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""},{"name":"ex","external_name":"ex","restriction":"Time"},{"name":"nx","default_value":"false","external_name":"nx","restriction":""},{"name":"xx","default_value":"false","external_name":"xx","restriction":""},{"name":"keepttl","default_value":"false","external_name":"keepttl","restriction":""}],"visibility":"Public","body":"set(key, value, ex: ex - Time.utc, nx: nx, xx: xx, keepttl: keepttl)"}},{"html_id":"set(key,value,ex:Time::Span,nx=false,xx=false,keepttl=false)-instance-method","name":"set","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""},{"name":"ex","external_name":"ex","restriction":"Time::Span"},{"name":"nx","default_value":"false","external_name":"nx","restriction":""},{"name":"xx","default_value":"false","external_name":"xx","restriction":""},{"name":"keepttl","default_value":"false","external_name":"keepttl","restriction":""}],"args_string":"(key, value, ex : Time::Span, nx = false, xx = false, keepttl = false)","args_html":"(key, value, ex : Time::Span, nx = <span class=\"n\">false</span>, xx = <span class=\"n\">false</span>, keepttl = <span class=\"n\">false</span>)","location":{"filename":"src/commands.cr","line_number":61,"url":null},"def":{"name":"set","args":[{"name":"key","external_name":"key","restriction":""},{"name":"value","external_name":"value","restriction":""},{"name":"ex","external_name":"ex","restriction":"Time::Span"},{"name":"nx","default_value":"false","external_name":"nx","restriction":""},{"name":"xx","default_value":"false","external_name":"xx","restriction":""},{"name":"keepttl","default_value":"false","external_name":"keepttl","restriction":""}],"visibility":"Public","body":"set(key, value, px: ex.total_milliseconds.to_i64, nx: nx, xx: xx, keepttl: keepttl)"}},{"html_id":"sinter(first:String,*others:String)-instance-method","name":"sinter","abstract":false,"args":[{"name":"first","external_name":"first","restriction":"String"},{"name":"others","external_name":"others","restriction":"String"}],"args_string":"(first : String, *others : String)","args_html":"(first : <a href=\"../String.html\">String</a>, *others : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":366,"url":null},"def":{"name":"sinter","args":[{"name":"first","external_name":"first","restriction":"String"},{"name":"others","external_name":"others","restriction":"String"}],"splat_index":1,"visibility":"Public","body":"run({\"sinter\", first} + others)"}},{"html_id":"sismember(key:String,value:String)-instance-method","name":"sismember","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(key : String, value : String)","args_html":"(key : <a href=\"../String.html\">String</a>, value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":350,"url":null},"def":{"name":"sismember","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"run({\"sismember\", key, value})"}},{"html_id":"smembers(key:String)-instance-method","name":"smembers","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":354,"url":null},"def":{"name":"smembers","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"run({\"smembers\", key})"}},{"html_id":"srem(key:String,members:Enumerable(String))-instance-method","name":"srem","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"members","external_name":"members","restriction":"Enumerable(String)"}],"args_string":"(key : String, members : Enumerable(String))","args_html":"(key : <a href=\"../String.html\">String</a>, members : Enumerable(<a href=\"../String.html\">String</a>))","location":{"filename":"src/commands.cr","line_number":633,"url":null},"def":{"name":"srem","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"members","external_name":"members","restriction":"Enumerable(String)"}],"visibility":"Public","body":"command = Array(String).new(initial_capacity: 2 + members.size)\n(command << \"srem\") << key\nmembers.each do |member|\n  command << member\nend\nrun(command)\n"}},{"html_id":"srem(key:String,*values:String)-instance-method","name":"srem","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"values","external_name":"values","restriction":"String"}],"args_string":"(key : String, *values : String)","args_html":"(key : <a href=\"../String.html\">String</a>, *values : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":358,"url":null},"def":{"name":"srem","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"values","external_name":"values","restriction":"String"}],"splat_index":1,"visibility":"Public","body":"run({\"srem\", key} + values)"}},{"html_id":"ts-instance-method","name":"ts","doc":"Return a `Redis::TimeSeries` that wraps the current `Redis::Client` or\n`Redis::Cluster`.","summary":"<p>Return a <code><a href=\"../Redis/TimeSeries.html\">Redis::TimeSeries</a></code> that wraps the current <code><a href=\"../Redis/Client.html\">Redis::Client</a></code> or <code><a href=\"../Redis/Cluster.html\">Redis::Cluster</a></code>.</p>","abstract":false,"location":{"filename":"src/time_series.cr","line_number":207,"url":null},"def":{"name":"ts","visibility":"Public","body":"TimeSeries.new(self)"}},{"html_id":"ttl(key:String)-instance-method","name":"ttl","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":663,"url":null},"def":{"name":"ttl","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"run({\"ttl\", key})"}},{"html_id":"type(key:String)-instance-method","name":"type","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":671,"url":null},"def":{"name":"type","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"run({\"type\", key})"}},{"html_id":"unlink(*keys:String)-instance-method","name":"unlink","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"String"}],"args_string":"(*keys : String)","args_html":"(*keys : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":130,"url":null},"def":{"name":"unlink","args":[{"name":"keys","external_name":"keys","restriction":"String"}],"splat_index":0,"visibility":"Public","body":"run({\"unlink\"} + keys)"}},{"html_id":"xack(key:String,group:String,id:String)-instance-method","name":"xack","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"group","external_name":"group","restriction":"String"},{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(key : String, group : String, id : String)","args_html":"(key : <a href=\"../String.html\">String</a>, group : <a href=\"../String.html\">String</a>, id : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":807,"url":null},"def":{"name":"xack","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"group","external_name":"group","restriction":"String"},{"name":"id","external_name":"id","restriction":"String"}],"visibility":"Public","body":"run({\"xack\", key, group, id})"}},{"html_id":"xack(key:String,group:String,ids:Enumerable(String))-instance-method","name":"xack","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"group","external_name":"group","restriction":"String"},{"name":"ids","external_name":"ids","restriction":"Enumerable(String)"}],"args_string":"(key : String, group : String, ids : Enumerable(String))","args_html":"(key : <a href=\"../String.html\">String</a>, group : <a href=\"../String.html\">String</a>, ids : Enumerable(<a href=\"../String.html\">String</a>))","location":{"filename":"src/commands.cr","line_number":811,"url":null},"def":{"name":"xack","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"group","external_name":"group","restriction":"String"},{"name":"ids","external_name":"ids","restriction":"Enumerable(String)"}],"visibility":"Public","body":"command = Array(String).new(initial_capacity: ids.size + 3)\n((command << \"xack\") << key) << group\nids.each do |id|\n  command << id\nend\nrun(command)\n"}},{"html_id":"xadd(key:String,id:String,maxlen,data:Hash(String,String))-instance-method","name":"xadd","doc":"Append an entry with the specified data to the stream with the given `key`\nand gives it the specified `id`. If the id is `\"*\"`, Redis will assign it\nan id of the form `\"#{Time.utc.to_unix_ms}-#{autoincrementing_index}\"`.\nIf `maxlen` is provided, Redis will trim the stream to the specified\nlength. If `maxlen` is of the form `~ 1000`, Redis will trim it to\n*approximately* that length, removing entries when it can do so\nefficiently. This method returns the `id` that Redis stores.\n\n```\nredis.xadd \"my-stream\", \"*\", {\"name\" => \"foo\", \"id\" => UUID.random.to_s}\n```","summary":"<p>Append an entry with the specified data to the stream with the given <code>key</code> and gives it the specified <code>id</code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"id","external_name":"id","restriction":"String"},{"name":"maxlen","external_name":"maxlen","restriction":""},{"name":"data","external_name":"data","restriction":"Hash(String, String)"}],"args_string":"(key : String, id : String, maxlen, data : Hash(String, String))","args_html":"(key : <a href=\"../String.html\">String</a>, id : <a href=\"../String.html\">String</a>, maxlen, data : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/commands.cr","line_number":445,"url":null},"def":{"name":"xadd","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"id","external_name":"id","restriction":"String"},{"name":"maxlen","external_name":"maxlen","restriction":""},{"name":"data","external_name":"data","restriction":"Hash(String, String)"}],"visibility":"Public","body":"command = Array(Value).new(initial_capacity: (data.size * 2) + 3)\n(command << \"xadd\") << key\nif maxlen\n  (command << \"maxlen\") << maxlen\nend\ncommand << id\ndata.each do |key, value|\n  (command << key) << value\nend\nrun(command)\n"}},{"html_id":"xadd(key:String,id:String,data:Hash(String,String))-instance-method","name":"xadd","doc":"Append an entry with the specified data to the stream with the given `key`\nand gives it the specified `id`. If the id is `\"*\"`, Redis will assign it\nan id of the form `\"#{Time.utc.to_unix_ms}-#{autoincrementing_index}\"`.\nIf `maxlen` is provided, Redis will trim the stream to the specified\nlength. If `maxlen` is of the form `~ 1000`, Redis will trim it to\n*approximately* that length, removing entries when it can do so\nefficiently. This method returns the `id` that Redis stores.\n\n```\nredis.xadd \"my-stream\", \"*\", {\"name\" => \"foo\", \"id\" => UUID.random.to_s}\n```","summary":"<p>Append an entry with the specified data to the stream with the given <code>key</code> and gives it the specified <code>id</code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"id","external_name":"id","restriction":"String"},{"name":"data","external_name":"data","restriction":"Hash(String, String)"}],"args_string":"(key : String, id : String, data : Hash(String, String))","args_html":"(key : <a href=\"../String.html\">String</a>, id : <a href=\"../String.html\">String</a>, data : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/commands.cr","line_number":430,"url":null},"def":{"name":"xadd","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"id","external_name":"id","restriction":"String"},{"name":"data","external_name":"data","restriction":"Hash(String, String)"}],"visibility":"Public","body":"xadd(key, id, maxlen: nil, data: data)"}},{"html_id":"xadd(key:String,id:String,maxlen=nil,**data)-instance-method","name":"xadd","doc":"Append an entry with the specified data to the stream with the given `key`\nand gives it the specified `id`. If the id is `\"*\"`, Redis will assign it\nan id of the form `\"#{Time.utc.to_unix_ms}-#{autoincrementing_index}\"`.\nIf `maxlen` is provided, Redis will trim the stream to the specified\nlength. If `maxlen` is of the form `~ 1000`, Redis will trim it to\n*approximately* that length, removing entries when it can do so\nefficiently. This method returns the `id` that Redis stores.\n\n```\nredis.xadd \"my-stream\", \"*\", name: \"foo\", id: UUID.random.to_s\n```","summary":"<p>Append an entry with the specified data to the stream with the given <code>key</code> and gives it the specified <code>id</code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"id","external_name":"id","restriction":"String"},{"name":"maxlen","default_value":"nil","external_name":"maxlen","restriction":""}],"args_string":"(key : String, id : String, maxlen = nil, **data)","args_html":"(key : <a href=\"../String.html\">String</a>, id : <a href=\"../String.html\">String</a>, maxlen = <span class=\"n\">nil</span>, **data)","location":{"filename":"src/commands.cr","line_number":399,"url":null},"def":{"name":"xadd","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"id","external_name":"id","restriction":"String"},{"name":"maxlen","default_value":"nil","external_name":"maxlen","restriction":""}],"double_splat":{"name":"data","external_name":"data","restriction":""},"visibility":"Public","body":"command = Array(Value).new(initial_capacity: (data.size * 2) + 6)\n(command << \"xadd\") << key\nif maxlen\n  command << \"maxlen\"\n  case maxlen\n  when Tuple\n    maxlen.each do |entry|\n      command << entry\n    end\n  when String\n    command << maxlen\n  end\nend\ncommand << id\ndata.each do |key, value|\n  (command << key.to_s) << value\nend\nrun(command)\n"}},{"html_id":"xautoclaim(key:String,group:String,consumer:String,min_idle_time:Time::Span,start:String,count:Int|String|Nil=nil)-instance-method","name":"xautoclaim","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"group","external_name":"group","restriction":"String"},{"name":"consumer","external_name":"consumer","restriction":"String"},{"name":"min_idle_time","external_name":"min_idle_time","restriction":"Time::Span"},{"name":"start","external_name":"start","restriction":"String"},{"name":"count","default_value":"nil","external_name":"count","restriction":"Int | String | Nil"}],"args_string":"(key : String, group : String, consumer : String, min_idle_time : Time::Span, start : String, count : Int | String | Nil = nil)","args_html":"(key : <a href=\"../String.html\">String</a>, group : <a href=\"../String.html\">String</a>, consumer : <a href=\"../String.html\">String</a>, min_idle_time : Time::Span, start : <a href=\"../String.html\">String</a>, count : <a href=\"../Int.html\">Int</a> | <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/commands.cr","line_number":819,"url":null},"def":{"name":"xautoclaim","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"group","external_name":"group","restriction":"String"},{"name":"consumer","external_name":"consumer","restriction":"String"},{"name":"min_idle_time","external_name":"min_idle_time","restriction":"Time::Span"},{"name":"start","external_name":"start","restriction":"String"},{"name":"count","default_value":"nil","external_name":"count","restriction":"Int | String | Nil"}],"visibility":"Public","body":"min_idle_time = min_idle_time.total_milliseconds.to_i.to_s\ncommand = {\"xautoclaim\", key, group, consumer, min_idle_time, start}\nif count\n  command = command + {\"count\", count.to_s}\nend\nrun(command)\n"}},{"html_id":"xgroup(command:String,key:String,groupname:String)-instance-method","name":"xgroup","doc":"Run a Redis XGROUP subcommand for a given stream. See the [XGROUP command in the Redis documentation](https://redis.io/commands/xgroup) for more information.\n\n```\nredis.xgroup \"DESTROY\", \"my-stream\", \"my-group\"\n```","summary":"<p>Run a Redis XGROUP subcommand for a given stream.</p>","abstract":false,"args":[{"name":"command","external_name":"command","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"groupname","external_name":"groupname","restriction":"String"}],"args_string":"(command : String, key : String, groupname : String)","args_html":"(command : <a href=\"../String.html\">String</a>, key : <a href=\"../String.html\">String</a>, groupname : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":509,"url":null},"def":{"name":"xgroup","args":[{"name":"command","external_name":"command","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"groupname","external_name":"groupname","restriction":"String"}],"visibility":"Public","body":"run({\"xgroup\", command, key, groupname})"}},{"html_id":"xgroup(command:XGroup,key:String,groupname:String,*,id:String?=nil,mkstream=false,consumer_name:String?=nil)-instance-method","name":"xgroup","doc":"Run a Redis XGROUP subcommand for a given stream. See the [XGROUP command in the Redis documentation](https://redis.io/commands/xgroup) for more information.\n\n```\nredis.xgroup :create, \"my-stream\", \"my-group\", mkstream: true\n```","summary":"<p>Run a Redis XGROUP subcommand for a given stream.</p>","abstract":false,"args":[{"name":"command","external_name":"command","restriction":"XGroup"},{"name":"key","external_name":"key","restriction":"String"},{"name":"groupname","external_name":"groupname","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"id","default_value":"nil","external_name":"id","restriction":"String | ::Nil"},{"name":"mkstream","default_value":"false","external_name":"mkstream","restriction":""},{"name":"consumer_name","default_value":"nil","external_name":"consumer_name","restriction":"String | ::Nil"}],"args_string":"(command : XGroup, key : String, groupname : String, *, id : String? = nil, mkstream = false, consumer_name : String? = nil)","args_html":"(command : <a href=\"../Redis/Commands/XGroup.html\">XGroup</a>, key : <a href=\"../String.html\">String</a>, groupname : <a href=\"../String.html\">String</a>, *, id : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, mkstream = <span class=\"n\">false</span>, consumer_name : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>)","location":{"filename":"src/commands.cr","line_number":487,"url":null},"def":{"name":"xgroup","args":[{"name":"command","external_name":"command","restriction":"XGroup"},{"name":"key","external_name":"key","restriction":"String"},{"name":"groupname","external_name":"groupname","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"id","default_value":"nil","external_name":"id","restriction":"String | ::Nil"},{"name":"mkstream","default_value":"false","external_name":"mkstream","restriction":""},{"name":"consumer_name","default_value":"nil","external_name":"consumer_name","restriction":"String | ::Nil"}],"splat_index":3,"visibility":"Public","body":"cmd = Array(String).new(initial_capacity: 7)\n(((cmd << \"xgroup\") << command.to_s) << key) << groupname\nif id\n  cmd << id\nend\nif mkstream\n  cmd << \"mkstream\"\nend\nif consumer_name\n  cmd << consumer_name\nend\nrun(cmd)\n"}},{"html_id":"xgroup(command:String,key:String,groupname:String,*args:String)-instance-method","name":"xgroup","doc":"Run a Redis XGROUP subcommand for a given stream. See the [XGROUP command in the Redis documentation](https://redis.io/commands/xgroup) for more information.\n\n```\nredis.xgroup \"CREATE\", \"my-stream\", \"my-group\", \"0\"\n```","summary":"<p>Run a Redis XGROUP subcommand for a given stream.</p>","abstract":false,"args":[{"name":"command","external_name":"command","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"groupname","external_name":"groupname","restriction":"String"},{"name":"args","external_name":"args","restriction":"String"}],"args_string":"(command : String, key : String, groupname : String, *args : String)","args_html":"(command : <a href=\"../String.html\">String</a>, key : <a href=\"../String.html\">String</a>, groupname : <a href=\"../String.html\">String</a>, *args : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":518,"url":null},"def":{"name":"xgroup","args":[{"name":"command","external_name":"command","restriction":"String"},{"name":"key","external_name":"key","restriction":"String"},{"name":"groupname","external_name":"groupname","restriction":"String"},{"name":"args","external_name":"args","restriction":"String"}],"splat_index":3,"visibility":"Public","body":"run({\"xgroup\", command, key, groupname} + args)"}},{"html_id":"xgroup_create(key:String,groupname:String,*,id:String=\"$\",mkstream=false)-instance-method","name":"xgroup_create","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"groupname","external_name":"groupname","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"id","default_value":"\"$\"","external_name":"id","restriction":"String"},{"name":"mkstream","default_value":"false","external_name":"mkstream","restriction":""}],"args_string":"(key : String, groupname : String, *, id : String = \"$\", mkstream = false)","args_html":"(key : <a href=\"../String.html\">String</a>, groupname : <a href=\"../String.html\">String</a>, *, id : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;$&quot;</span>, mkstream = <span class=\"n\">false</span>)","location":{"filename":"src/commands.cr","line_number":473,"url":null},"def":{"name":"xgroup_create","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"groupname","external_name":"groupname","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"id","default_value":"\"$\"","external_name":"id","restriction":"String"},{"name":"mkstream","default_value":"false","external_name":"mkstream","restriction":""}],"splat_index":2,"visibility":"Public","body":"xgroup(XGroup::CREATE, key, groupname, id: id, mkstream: mkstream)"}},{"html_id":"xgroup_create_consumer(key:String,groupname:String,consumer_name:String)-instance-method","name":"xgroup_create_consumer","doc":"XGROUP CREATECONSUMER key groupname consumername","summary":"<p>XGROUP CREATECONSUMER key groupname consumername</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"groupname","external_name":"groupname","restriction":"String"},{"name":"consumer_name","external_name":"consumer_name","restriction":"String"}],"args_string":"(key : String, groupname : String, consumer_name : String)","args_html":"(key : <a href=\"../String.html\">String</a>, groupname : <a href=\"../String.html\">String</a>, consumer_name : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":478,"url":null},"def":{"name":"xgroup_create_consumer","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"groupname","external_name":"groupname","restriction":"String"},{"name":"consumer_name","external_name":"consumer_name","restriction":"String"}],"visibility":"Public","body":"xgroup(XGroup::CREATECONSUMER, key, groupname, consumer_name: consumer_name)"}},{"html_id":"xlen(key:String)-instance-method","name":"xlen","doc":"Return the number of entries in the given stream","summary":"<p>Return the number of entries in the given stream</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":458,"url":null},"def":{"name":"xlen","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"run({\"xlen\", key})"}},{"html_id":"xpending(key:String,group:String,start:String,endfinish:String,count:String|Int,idle:String|Time::Span|Nil=nil)-instance-method","name":"xpending","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"group","external_name":"group","restriction":"String"},{"name":"start","external_name":"start","restriction":"String"},{"name":"finish","external_name":"end","restriction":"String"},{"name":"count","external_name":"count","restriction":"String | Int"},{"name":"idle","default_value":"nil","external_name":"idle","restriction":"String | Time::Span | Nil"}],"args_string":"(key : String, group : String, start : String, end finish : String, count : String | Int, idle : String | Time::Span | Nil = nil)","args_html":"(key : <a href=\"../String.html\">String</a>, group : <a href=\"../String.html\">String</a>, start : <a href=\"../String.html\">String</a>, end finish : <a href=\"../String.html\">String</a>, count : <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a>, idle : <a href=\"../String.html\">String</a> | Time::Span | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/commands.cr","line_number":787,"url":null},"def":{"name":"xpending","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"group","external_name":"group","restriction":"String"},{"name":"start","external_name":"start","restriction":"String"},{"name":"finish","external_name":"end","restriction":"String"},{"name":"count","external_name":"count","restriction":"String | Int"},{"name":"idle","default_value":"nil","external_name":"idle","restriction":"String | Time::Span | Nil"}],"visibility":"Public","body":"command = {\"xpending\", key, group}\ncase idle\nwhen String\n  command = command + {\"idle\", idle}\nwhen Time::Span\n  command = command + {\"idle\", idle.total_milliseconds.to_i.to_s}\nend\ncommand = command + {start, finish, count.to_s}\nrun(command)\n"}},{"html_id":"xpending(key:String,group:String)-instance-method","name":"xpending","doc":"XPENDING key group [[IDLE min-idle-time] start end count [consumer]]","summary":"<p>XPENDING key group [[IDLE min-idle-time] start end count [consumer]]</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"group","external_name":"group","restriction":"String"}],"args_string":"(key : String, group : String)","args_html":"(key : <a href=\"../String.html\">String</a>, group : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":783,"url":null},"def":{"name":"xpending","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"group","external_name":"group","restriction":"String"}],"visibility":"Public","body":"run({\"xpending\", key, group})"}},{"html_id":"xrange(key:String,startmin,endmax,count=nil)-instance-method","name":"xrange","doc":"Return the entries in the given stream between the `start` and `end` ids.\nIf `count` is provided, Redis will return only that number of entries.","summary":"<p>Return the entries in the given stream between the <code>start</code> and <code>end</code> ids.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"min","external_name":"start","restriction":""},{"name":"max","external_name":"end","restriction":""},{"name":"count","default_value":"nil","external_name":"count","restriction":""}],"args_string":"(key : String, start min, end max, count = nil)","args_html":"(key : <a href=\"../String.html\">String</a>, start min, end max, count = <span class=\"n\">nil</span>)","location":{"filename":"src/commands.cr","line_number":464,"url":null},"def":{"name":"xrange","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"min","external_name":"start","restriction":""},{"name":"max","external_name":"end","restriction":""},{"name":"count","default_value":"nil","external_name":"count","restriction":""}],"visibility":"Public","body":"command = {\"xrange\", key, min, max}\nif count\n  command = command + {\"count\", count}\nend\nrun(command)\n"}},{"html_id":"xreadgroup(group:String,consumer:String,count:String|Int|Nil=nil,block:Time::Span|String|Int|Nil=nil,no_ack=false,streams:Hash(String,String)={}ofString=>String)-instance-method","name":"xreadgroup","doc":"Execute an `XREADGROUP` command on the Redis server.\n\nThis is returned in its raw form from Redis, but you can pass it to a\n`Redis::Streaming::XReadGroupResponse` to make it easier to work with.","summary":"<p>Execute an <code>XREADGROUP</code> command on the Redis server.</p>","abstract":false,"args":[{"name":"group","external_name":"group","restriction":"String"},{"name":"consumer","external_name":"consumer","restriction":"String"},{"name":"count","default_value":"nil","external_name":"count","restriction":"String | Int | Nil"},{"name":"block","default_value":"nil","external_name":"block","restriction":"Time::Span | String | Int | Nil"},{"name":"no_ack","default_value":"false","external_name":"no_ack","restriction":""},{"name":"streams","default_value":"{} of String => String","external_name":"streams","restriction":"Hash(String, String)"}],"args_string":"(group : String, consumer : String, count : String | Int | Nil = nil, block : Time::Span | String | Int | Nil = nil, no_ack = false, streams : Hash(String, String) = {} of String => String)","args_html":"(group : <a href=\"../String.html\">String</a>, consumer : <a href=\"../String.html\">String</a>, count : <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, block : Time::Span | <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, no_ack = <span class=\"n\">false</span>, streams : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>) = {} <span class=\"k\">of</span> <span class=\"t\">String</span> =&gt; <span class=\"t\">String</span>)","location":{"filename":"src/commands.cr","line_number":526,"url":null},"def":{"name":"xreadgroup","args":[{"name":"group","external_name":"group","restriction":"String"},{"name":"consumer","external_name":"consumer","restriction":"String"},{"name":"count","default_value":"nil","external_name":"count","restriction":"String | Int | Nil"},{"name":"block","default_value":"nil","external_name":"block","restriction":"Time::Span | String | Int | Nil"},{"name":"no_ack","default_value":"false","external_name":"no_ack","restriction":""},{"name":"streams","default_value":"{} of String => String","external_name":"streams","restriction":"Hash(String, String)"}],"visibility":"Public","body":"command = Array(Value).new(initial_capacity: 9 + (streams.size * 2))\n(((command << \"xreadgroup\") << \"group\") << group) << consumer\nif count\n  (command << \"count\") << count.to_s\nend\ncase block\nin Time::Span\n  (command << \"block\") << block.total_milliseconds.to_i.to_s\nin String\n  (command << \"block\") << block\nin Int\n  (command << \"block\") << block.to_s\nin Nil\nend\nif no_ack\n  command << \"noack\"\nend\ncommand << \"streams\"\nstreams.each_key do |key|\n  command << key\nend\nstreams.each_value do |value|\n  command << value\nend\nrun(command)\n"}},{"html_id":"xreadgroup(group:String,consumer:String,count:String|Int|Nil=nil,block:Time::Span|String|Int|Nil=nil,no_ack=false,streams:NamedTuple=NamedTuple.new)-instance-method","name":"xreadgroup","doc":"Execute an `XREADGROUP` command on the Redis server. If `block` is not nil, the server will block for up to that much time (if you pass a number, it will be interpreted as milliseconds) until any new messages enter the stream.\n\nThis is returned in its raw form from Redis, but you can pass it to a\n`Redis::Streaming::XReadGroupResponse` to make it easier to work with.\n\n```\n# Long-poll for up to 10 messages from the stream with key `my_stream`,\n# blocking for up to 2 seconds if there are no messages waiting.\nresponse = redis.xreadgroup \"group\", \"consumer\",\n  streams: {my_stream: \">\"},\n  count: 10,\n  block: 2.seconds\nresponse = Redis::Streaming::XReadGroupResponse.new(response)\n```","summary":"<p>Execute an <code>XREADGROUP</code> command on the Redis server.</p>","abstract":false,"args":[{"name":"group","external_name":"group","restriction":"String"},{"name":"consumer","external_name":"consumer","restriction":"String"},{"name":"count","default_value":"nil","external_name":"count","restriction":"String | Int | Nil"},{"name":"block","default_value":"nil","external_name":"block","restriction":"Time::Span | String | Int | Nil"},{"name":"no_ack","default_value":"false","external_name":"no_ack","restriction":""},{"name":"streams","default_value":"NamedTuple.new","external_name":"streams","restriction":"NamedTuple"}],"args_string":"(group : String, consumer : String, count : String | Int | Nil = nil, block : Time::Span | String | Int | Nil = nil, no_ack = false, streams : NamedTuple = NamedTuple.new)","args_html":"(group : <a href=\"../String.html\">String</a>, consumer : <a href=\"../String.html\">String</a>, count : <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, block : Time::Span | <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, no_ack = <span class=\"n\">false</span>, streams : NamedTuple = <span class=\"t\">NamedTuple</span>.<span class=\"k\">new</span>)","location":{"filename":"src/commands.cr","line_number":569,"url":null},"def":{"name":"xreadgroup","args":[{"name":"group","external_name":"group","restriction":"String"},{"name":"consumer","external_name":"consumer","restriction":"String"},{"name":"count","default_value":"nil","external_name":"count","restriction":"String | Int | Nil"},{"name":"block","default_value":"nil","external_name":"block","restriction":"Time::Span | String | Int | Nil"},{"name":"no_ack","default_value":"false","external_name":"no_ack","restriction":""},{"name":"streams","default_value":"NamedTuple.new","external_name":"streams","restriction":"NamedTuple"}],"visibility":"Public","body":"command = Array(Value).new(initial_capacity: 9 + (streams.size * 2))\n(((command << \"xreadgroup\") << \"group\") << group) << consumer\nif count\n  (command << \"count\") << count.to_s\nend\ncase block\nin Time::Span\n  (command << \"block\") << block.total_milliseconds.to_i.to_s\nin String\n  (command << \"block\") << block\nin Int\n  (command << \"block\") << block.to_s\nin Nil\nend\nif no_ack\n  command << \"noack\"\nend\ncommand << \"streams\"\nstreams.each_key do |key|\n  command << key.to_s\nend\nstreams.each_value do |value|\n  command << value\nend\nrun(command)\n"}},{"html_id":"zadd(key:String,score:String|Float,value:String)-instance-method","name":"zadd","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"score","external_name":"score","restriction":"String | Float"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(key : String, score : String | Float, value : String)","args_html":"(key : <a href=\"../String.html\">String</a>, score : <a href=\"../String.html\">String</a> | Float, value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":711,"url":null},"def":{"name":"zadd","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"score","external_name":"score","restriction":"String | Float"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"run({\"zadd\", key, score.to_s, value})"}},{"html_id":"zadd(key:String,values:Enumerable)-instance-method","name":"zadd","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"values","external_name":"values","restriction":"Enumerable"}],"args_string":"(key : String, values : Enumerable)","args_html":"(key : <a href=\"../String.html\">String</a>, values : Enumerable)","location":{"filename":"src/commands.cr","line_number":715,"url":null},"def":{"name":"zadd","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"values","external_name":"values","restriction":"Enumerable"}],"visibility":"Public","body":"command = Array(String).new(initial_capacity: 2 + values.size)\n(command << \"zadd\") << key\nvalues.each do |value|\n  command << (value.as(String))\nend\nrun(command)\n"}},{"html_id":"zcard(key:String)-instance-method","name":"zcard","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":643,"url":null},"def":{"name":"zcard","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"run({\"zcard\", key})"}},{"html_id":"zrange(key:String,starting:String|Int,ending:String|Int,with_scores:Bool=false)-instance-method","name":"zrange","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"starting","external_name":"starting","restriction":"String | Int"},{"name":"ending","external_name":"ending","restriction":"String | Int"},{"name":"with_scores","default_value":"false","external_name":"with_scores","restriction":"Bool"}],"args_string":"(key : String, starting : String | Int, ending : String | Int, with_scores : Bool = false)","args_html":"(key : <a href=\"../String.html\">String</a>, starting : <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a>, ending : <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a>, with_scores : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/commands.cr","line_number":684,"url":null},"def":{"name":"zrange","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"starting","external_name":"starting","restriction":"String | Int"},{"name":"ending","external_name":"ending","restriction":"String | Int"},{"name":"with_scores","default_value":"false","external_name":"with_scores","restriction":"Bool"}],"visibility":"Public","body":"command = {\"zrange\", key, starting.to_s, ending.to_s}\nif with_scores\n  command = command + {\"withscores\"}\nend\nrun(command)\n"}},{"html_id":"zrangebyscore(key:String,low:String|Float,high:String|Float,limit:Enumerable(String)?=nil)-instance-method","name":"zrangebyscore","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"low","external_name":"low","restriction":"String | Float"},{"name":"high","external_name":"high","restriction":"String | Float"},{"name":"limit","default_value":"nil","external_name":"limit","restriction":"Enumerable(String) | ::Nil"}],"args_string":"(key : String, low : String | Float, high : String | Float, limit : Enumerable(String)? = nil)","args_html":"(key : <a href=\"../String.html\">String</a>, low : <a href=\"../String.html\">String</a> | Float, high : <a href=\"../String.html\">String</a> | Float, limit : Enumerable(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/commands.cr","line_number":693,"url":null},"def":{"name":"zrangebyscore","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"low","external_name":"low","restriction":"String | Float"},{"name":"high","external_name":"high","restriction":"String | Float"},{"name":"limit","default_value":"nil","external_name":"limit","restriction":"Enumerable(String) | ::Nil"}],"visibility":"Public","body":"command = {\"zrangebyscore\", key, low.to_s, high.to_s}\nif limit\n  command = command + {\"limit\", limit[0], limit[1]}\nend\nrun(command)\n"}},{"html_id":"zrem(key:String,value:String)-instance-method","name":"zrem","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(key : String, value : String)","args_html":"(key : <a href=\"../String.html\">String</a>, value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/commands.cr","line_number":723,"url":null},"def":{"name":"zrem","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"run({\"zrem\", key, value})"}},{"html_id":"zremrangebyrank(key:String,low:Int,high:Int)-instance-method","name":"zremrangebyrank","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"low","external_name":"low","restriction":"Int"},{"name":"high","external_name":"high","restriction":"Int"}],"args_string":"(key : String, low : Int, high : Int)","args_html":"(key : <a href=\"../String.html\">String</a>, low : <a href=\"../Int.html\">Int</a>, high : <a href=\"../Int.html\">Int</a>)","location":{"filename":"src/commands.cr","line_number":707,"url":null},"def":{"name":"zremrangebyrank","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"low","external_name":"low","restriction":"Int"},{"name":"high","external_name":"high","restriction":"Int"}],"visibility":"Public","body":"run({\"zremrangebyrank\", key, low.to_s, high.to_s})"}},{"html_id":"zremrangebyscore(key:String,low:String|Float,high:String|Float)-instance-method","name":"zremrangebyscore","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"low","external_name":"low","restriction":"String | Float"},{"name":"high","external_name":"high","restriction":"String | Float"}],"args_string":"(key : String, low : String | Float, high : String | Float)","args_html":"(key : <a href=\"../String.html\">String</a>, low : <a href=\"../String.html\">String</a> | Float, high : <a href=\"../String.html\">String</a> | Float)","location":{"filename":"src/commands.cr","line_number":703,"url":null},"def":{"name":"zremrangebyscore","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"low","external_name":"low","restriction":"String | Float"},{"name":"high","external_name":"high","restriction":"String | Float"}],"visibility":"Public","body":"run({\"zremrangebyscore\", key, low.to_s, high.to_s})"}},{"html_id":"zrevrange(key:String,starting:String|Int,ending:String|Int,with_scores:Bool=false)-instance-method","name":"zrevrange","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"starting","external_name":"starting","restriction":"String | Int"},{"name":"ending","external_name":"ending","restriction":"String | Int"},{"name":"with_scores","default_value":"false","external_name":"with_scores","restriction":"Bool"}],"args_string":"(key : String, starting : String | Int, ending : String | Int, with_scores : Bool = false)","args_html":"(key : <a href=\"../String.html\">String</a>, starting : <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a>, ending : <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a>, with_scores : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/commands.cr","line_number":675,"url":null},"def":{"name":"zrevrange","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"starting","external_name":"starting","restriction":"String | Int"},{"name":"ending","external_name":"ending","restriction":"String | Int"},{"name":"with_scores","default_value":"false","external_name":"with_scores","restriction":"Bool"}],"visibility":"Public","body":"command = {\"zrevrange\", key, starting.to_s, ending.to_s}\nif with_scores\n  command = command + {\"withscores\"}\nend\nrun(command)\n"}}],"types":[{"html_id":"redis/Redis/Commands/XGroup","path":"Redis/Commands/XGroup.html","kind":"enum","full_name":"Redis::Commands::XGroup","name":"XGroup","abstract":false,"ancestors":[{"html_id":"redis/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/commands.cr","line_number":497,"url":null}],"repository_name":"redis","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"CREATE","name":"CREATE","value":"0"},{"id":"DESTROY","name":"DESTROY","value":"1"},{"id":"CREATECONSUMER","name":"CREATECONSUMER","value":"2"},{"id":"DELCONSUMER","name":"DELCONSUMER","value":"3"}],"namespace":{"html_id":"redis/Redis/Commands","kind":"module","full_name":"Redis::Commands","name":"Commands"},"instance_methods":[{"html_id":"create?-instance-method","name":"create?","abstract":false,"location":{"filename":"src/commands.cr","line_number":498,"url":null},"def":{"name":"create?","visibility":"Public","body":"self == CREATE"}},{"html_id":"createconsumer?-instance-method","name":"createconsumer?","abstract":false,"location":{"filename":"src/commands.cr","line_number":500,"url":null},"def":{"name":"createconsumer?","visibility":"Public","body":"self == CREATECONSUMER"}},{"html_id":"delconsumer?-instance-method","name":"delconsumer?","abstract":false,"location":{"filename":"src/commands.cr","line_number":501,"url":null},"def":{"name":"delconsumer?","visibility":"Public","body":"self == DELCONSUMER"}},{"html_id":"destroy?-instance-method","name":"destroy?","abstract":false,"location":{"filename":"src/commands.cr","line_number":499,"url":null},"def":{"name":"destroy?","visibility":"Public","body":"self == DESTROY"}}]}]},{"html_id":"redis/Redis/Connection","path":"Redis/Connection.html","kind":"class","full_name":"Redis::Connection","name":"Connection","abstract":false,"superclass":{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"redis/Redis/Commands","kind":"module","full_name":"Redis::Commands","name":"Commands"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/connection.cr","line_number":13,"url":null},{"filename":"src/graph.cr","line_number":426,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"redis/Redis/Commands","kind":"module","full_name":"Redis::Commands","name":"Commands"}],"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"doc":"The connection wraps the TCP connection to the Redis server.","summary":"<p>The connection wraps the TCP connection to the Redis server.</p>","constructors":[{"html_id":"new(uri=URI.parse(\"redis:///\"))-class-method","name":"new","doc":"We receive all connection information in the URI.\n\nSSL connections require specifying the `rediss://` scheme.\nPassword authentication uses the URI password.\nDB selection uses the URI path.","summary":"<p>We receive all connection information in the URI.</p>","abstract":false,"args":[{"name":"uri","default_value":"URI.parse(\"redis:///\")","external_name":"uri","restriction":""}],"args_string":"(uri = URI.parse(\"redis:///\"))","args_html":"(uri = <span class=\"t\">URI</span>.parse(<span class=\"s\">&quot;redis:///&quot;</span>))","location":{"filename":"src/connection.cr","line_number":23,"url":null},"def":{"name":"new","args":[{"name":"uri","default_value":"URI.parse(\"redis:///\")","external_name":"uri","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(uri)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"close-instance-method","name":"close","doc":"Close the connection to the server.","summary":"<p>Close the connection to the server.</p>","abstract":false,"location":{"filename":"src/connection.cr","line_number":227,"url":null},"def":{"name":"close","visibility":"Public","body":"@socket.close"}},{"html_id":"encode(command)-instance-method","name":"encode","abstract":false,"args":[{"name":"command","external_name":"command","restriction":""}],"args_string":"(command)","args_html":"(command)","location":{"filename":"src/connection.cr","line_number":251,"url":null},"def":{"name":"encode","args":[{"name":"command","external_name":"command","restriction":""}],"visibility":"Public","body":"@writer.encode(command)"}},{"html_id":"flush-instance-method","name":"flush","doc":"Flush the connection buffer and make sure we've sent everything to the\nserver.","summary":"<p>Flush the connection buffer and make sure we've sent everything to the server.</p>","abstract":false,"location":{"filename":"src/connection.cr","line_number":238,"url":null},"def":{"name":"flush","visibility":"Public","body":"@socket.flush"}},{"html_id":"multi(retries=5,&)-instance-method","name":"multi","doc":"Execute a transaction within the server. The transaction is automatically\ncommitted at the end of the block or can be rolled back with\n`Transaction#discard`. Transactions are also rolled back if an exception\nis raised.\n\n```\nredis.multi do |redis|\n  redis.set \"foo\", \"bar\"\n  redis.incr \"counter\"\n  raise \"Oops!\"\nend\n\nredis.get \"foo\"     # => nil\nredis.get \"counter\" # => nil\n```","summary":"<p>Execute a transaction within the server.</p>","abstract":false,"args":[{"name":"retries","default_value":"5","external_name":"retries","restriction":""}],"args_string":"(retries = 5, &)","args_html":"(retries = <span class=\"n\">5</span>, &)","location":{"filename":"src/connection.cr","line_number":98,"url":null},"def":{"name":"multi","args":[{"name":"retries","default_value":"5","external_name":"retries","restriction":""}],"yields":1,"visibility":"Public","body":"loop do\n  begin\n    txn = Transaction.new(self)\n    begin\n      txn.start!\n      yield txn\n      if txn.discarded?\n        return [] of Value\n      else\n        return txn.exec.as(Array)\n      end\n    rescue ex\n      txn.discard\n      raise(ex)\n    end\n  rescue ex : IO::Error\n    if retries > 0\n      retries = retries - 1\n      initialize(@uri)\n    else\n      raise(ex)\n    end\n  end\nend"}},{"html_id":"pipeline(&)-instance-method","name":"pipeline","doc":"Execute a pipeline of commands. A pipeline sends all commands to the\nserver before reading any of the results.\n\n```\nredis.pipeline do |redis|\n  redis.set \"foo\", \"bar\"\n  redis.incr \"counter\"\nend\n```","summary":"<p>Execute a pipeline of commands.</p>","abstract":false,"location":{"filename":"src/connection.cr","line_number":64,"url":null},"def":{"name":"pipeline","yields":1,"visibility":"Public","body":"pipeline = Pipeline.new(self)\nerror = nil\nbegin\n  yield pipeline\nrescue ex\n  error = ex\nend\n@socket.flush\nresult = pipeline.commit\nif error\n  raise(error)\nelse\n  result\nend\n"}},{"html_id":"psubscribe(*channels:String,&block:Subscription,self->)-instance-method","name":"psubscribe","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":"String"}],"args_string":"(*channels : String, &block : Subscription, self -> )","args_html":"(*channels : <a href=\"../String.html\">String</a>, &block : Subscription, <span class=\"k\">self</span> -> )","location":{"filename":"src/connection.cr","line_number":124,"url":null},"def":{"name":"psubscribe","args":[{"name":"channels","external_name":"channels","restriction":"String"}],"splat_index":0,"yields":2,"block_arg":{"name":"block","external_name":"block","restriction":"(Subscription, self ->)"},"visibility":"Public","body":"subscription = Subscription.new(self)\n@writer.encode({\"psubscribe\"} + channels)\nflush\nyield subscription, self\nsubscription.call\n"}},{"html_id":"punsubscribe(*channels:String)-instance-method","name":"punsubscribe","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":"String"}],"args_string":"(*channels : String)","args_html":"(*channels : <a href=\"../String.html\">String</a>)","location":{"filename":"src/connection.cr","line_number":146,"url":null},"def":{"name":"punsubscribe","args":[{"name":"channels","external_name":"channels","restriction":"String"}],"splat_index":0,"visibility":"Public","body":"@writer.encode({\"punsubscribe\"} + channels)\nflush\n"}},{"html_id":"read-instance-method","name":"read","doc":"Read the next value from the server","summary":"<p>Read the next value from the server</p>","abstract":false,"location":{"filename":"src/connection.cr","line_number":243,"url":null},"def":{"name":"read","visibility":"Public","body":"@parser.read"}},{"html_id":"readonly!:Nil-instance-method","name":"readonly!","abstract":false,"location":{"filename":"src/connection.cr","line_number":151,"url":null},"def":{"name":"readonly!","return_type":"Nil","visibility":"Public","body":"run({\"readonly\"})"}},{"html_id":"run(command,retries=5):Value-instance-method","name":"run","doc":"Execute the given command and return the result from the server. Commands must be an `Enumerable`.\n\n```\nrun({\"set\", \"foo\", \"bar\"})\n```","summary":"<p>Execute the given command and return the result from the server.</p>","abstract":false,"args":[{"name":"command","external_name":"command","restriction":""},{"name":"retries","default_value":"5","external_name":"retries","restriction":""}],"args_string":"(command, retries = 5) : Value","args_html":"(command, retries = <span class=\"n\">5</span>) : <a href=\"../Redis/Value.html\">Value</a>","location":{"filename":"src/connection.cr","line_number":198,"url":null},"def":{"name":"run","args":[{"name":"command","external_name":"command","restriction":""},{"name":"retries","default_value":"5","external_name":"retries","restriction":""}],"return_type":"Value","visibility":"Public","body":"loop do\n  begin\n    @writer.encode(command)\n    flush\n    return read\n  rescue ex : IO::Error\n    if retries > 0\n      retries = retries - 1\n      initialize(@uri)\n    else\n      raise(ex)\n    end\n  end\nend"}},{"html_id":"scan_each(matchpattern:String?=nil,count:String|Int|Nil=nil,type:String?=nil,&):Nil-instance-method","name":"scan_each","abstract":false,"args":[{"name":"pattern","default_value":"nil","external_name":"match","restriction":"String | ::Nil"},{"name":"count","default_value":"nil","external_name":"count","restriction":"String | Int | Nil"},{"name":"type","default_value":"nil","external_name":"type","restriction":"String | ::Nil"}],"args_string":"(match pattern : String? = nil, count : String | Int | Nil = nil, type : String? = nil, &) : Nil","args_html":"(match pattern : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, count : <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, type : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, &) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/connection.cr","line_number":213,"url":null},"def":{"name":"scan_each","args":[{"name":"pattern","default_value":"nil","external_name":"match","restriction":"String | ::Nil"},{"name":"count","default_value":"nil","external_name":"count","restriction":"String | Int | Nil"},{"name":"type","default_value":"nil","external_name":"type","restriction":"String | ::Nil"}],"yields":1,"return_type":"Nil","visibility":"Public","body":"cursor = \"\"\nwhile !(cursor == \"0\")\n  response = scan(cursor, match: pattern, count: count, type: type)\n  cursor, results = response.as(Array)\n  cursor = cursor.as(String)\n  (results.as(Array)).each do |key|\n    yield key.as(String)\n  end\nend\n"}},{"html_id":"subscribe(*channels:String,&block:Subscription,self->)-instance-method","name":"subscribe","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":"String"}],"args_string":"(*channels : String, &block : Subscription, self -> )","args_html":"(*channels : <a href=\"../String.html\">String</a>, &block : Subscription, <span class=\"k\">self</span> -> )","location":{"filename":"src/connection.cr","line_number":124,"url":null},"def":{"name":"subscribe","args":[{"name":"channels","external_name":"channels","restriction":"String"}],"splat_index":0,"yields":2,"block_arg":{"name":"block","external_name":"block","restriction":"(Subscription, self ->)"},"visibility":"Public","body":"subscription = Subscription.new(self)\n@writer.encode({\"subscribe\"} + channels)\nflush\nyield subscription, self\nsubscription.call\n"}},{"html_id":"subscribe(*channels:String)-instance-method","name":"subscribe","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":"String"}],"args_string":"(*channels : String)","args_html":"(*channels : <a href=\"../String.html\">String</a>)","location":{"filename":"src/connection.cr","line_number":136,"url":null},"def":{"name":"subscribe","args":[{"name":"channels","external_name":"channels","restriction":"String"}],"splat_index":0,"visibility":"Public","body":"@writer.encode({\"subscribe\"} + channels)\nflush\n"}},{"html_id":"unsubscribe(*channels:String)-instance-method","name":"unsubscribe","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":"String"}],"args_string":"(*channels : String)","args_html":"(*channels : <a href=\"../String.html\">String</a>)","location":{"filename":"src/connection.cr","line_number":141,"url":null},"def":{"name":"unsubscribe","args":[{"name":"channels","external_name":"channels","restriction":"String"}],"splat_index":0,"visibility":"Public","body":"@writer.encode({\"unsubscribe\"} + channels)\nflush\n"}},{"html_id":"url-instance-method","name":"url","abstract":false,"location":{"filename":"src/connection.cr","line_number":247,"url":null},"def":{"name":"url","visibility":"Public","body":"@uri.to_s"}}]},{"html_id":"redis/Redis/Error","path":"Redis/Error.html","kind":"class","full_name":"Redis::Error","name":"Error","abstract":false,"superclass":{"html_id":"redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/errors.cr","line_number":4,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"redis/Redis/BusyGroup","kind":"class","full_name":"Redis::BusyGroup","name":"BusyGroup"},{"html_id":"redis/Redis/Cluster/Error","kind":"class","full_name":"Redis::Cluster::Error","name":"Error"},{"html_id":"redis/Redis/Graph/Error","kind":"class","full_name":"Redis::Graph::Error","name":"Error"},{"html_id":"redis/Redis/NoGroup","kind":"class","full_name":"Redis::NoGroup","name":"NoGroup"}],"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"}},{"html_id":"redis/Redis/FullText","path":"Redis/FullText.html","kind":"struct","full_name":"Redis::FullText(Runnable)","name":"FullText","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/search.cr","line_number":23,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"doc":"`Redis::FullText` wraps a `Redis::Client` or `Redis::Cluster` to execute\ncommands against a fulltext search index located on a given server.\n\n```\nredis = Redis::Client.new\nredis.ft.create <<-INDEX\n  people-index ON HASH\n    PREFIX 1 person:\n  SCHEMA\n    name TEXT NOSTEM SORTABLE\n    email TEXT NOSTEM SORTABLE\n    location GEO\nINDEX\n```\n\nIf your Redis server is running in Cluster mode, you can\n`require \"redis/cluster/search\"` to send read-only `FullText` commands to\nshard replicas.","summary":"<p><code><a href=\"../Redis/FullText.html\">Redis::FullText</a></code> wraps a <code><a href=\"../Redis/Client.html\">Redis::Client</a></code> or <code><a href=\"../Redis/Cluster.html\">Redis::Cluster</a></code> to execute commands against a fulltext search index located on a given server.</p>\n<p><span class=\"flag lime\">EXPERIMENTAL</span>  RediSearch support is still under development. Some APIs may change while details are discovered.</p>","instance_methods":[{"html_id":"create(string:String)-instance-method","name":"create","doc":"Create a search index using the syntax specified in the [RediSearch\n`FT.CREATE` docs](https://oss.redis.com/redisearch/Commands/#ftcreate).\n\n```\nredis = Redis::Client.new\nredis.ft.create <<-INDEX\n  people-index ON HASH\n    PREFIX 1 person:\n  SCHEMA\n    name TEXT NOSTEM SORTABLE\n    email TEXT NOSTEM SORTABLE\n    location GEO\nINDEX\n```\n\nNOTE: This method returns immediately, before the index is complete. You can run searches against an incomplete index, but you will also have incomplete results. To find how far along the index is, you can use the `info` method.\nTODO: Add a method that generates the string passed into this overload.","summary":"<p>Create a search index using the syntax specified in the <a href=\"https://oss.redis.com/redisearch/Commands/#ftcreate\">RediSearch <code>FT.CREATE</code> docs</a>.</p>","abstract":false,"args":[{"name":"string","external_name":"string","restriction":"String"}],"args_string":"(string : String)","args_html":"(string : <a href=\"../String.html\">String</a>)","location":{"filename":"src/search.cr","line_number":75,"url":null},"def":{"name":"create","args":[{"name":"string","external_name":"string","restriction":"String"}],"visibility":"Public","body":"@redis.run([\"ft.create\"] + string.split)"}},{"html_id":"drop(index:String,keepdocs=false)-instance-method","name":"drop","doc":"Drop the specified `index`.","summary":"<p>Drop the specified <code>index</code>.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"String"},{"name":"keepdocs","default_value":"false","external_name":"keepdocs","restriction":""}],"args_string":"(index : String, keepdocs = false)","args_html":"(index : <a href=\"../String.html\">String</a>, keepdocs = <span class=\"n\">false</span>)","location":{"filename":"src/search.cr","line_number":181,"url":null},"def":{"name":"drop","args":[{"name":"index","external_name":"index","restriction":"String"},{"name":"keepdocs","default_value":"false","external_name":"keepdocs","restriction":""}],"visibility":"Public","body":"dropindex(index, keepdocs)"}},{"html_id":"dropindex(key:String,keepdocs=false)-instance-method","name":"dropindex","doc":"Drop the specified `index`.","summary":"<p>Drop the specified <code>index</code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"keepdocs","default_value":"false","external_name":"keepdocs","restriction":""}],"args_string":"(key : String, keepdocs = false)","args_html":"(key : <a href=\"../String.html\">String</a>, keepdocs = <span class=\"n\">false</span>)","location":{"filename":"src/search.cr","line_number":186,"url":null},"def":{"name":"dropindex","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"keepdocs","default_value":"false","external_name":"keepdocs","restriction":""}],"visibility":"Public","body":"command = [\"ft.dropindex\", key]\nif keepdocs\n  command << \"keepdocs\"\nend\n@redis.run(command)\n"}},{"html_id":"info(index:String)-instance-method","name":"info","doc":"Get information about the search index contained in `index`. For more\ndetails, see [the `FT.INFO` documentation](https://oss.redis.com/redisearch/Commands/#ftinfo).","summary":"<p>Get information about the search index contained in <code>index</code>.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"String"}],"args_string":"(index : String)","args_html":"(index : <a href=\"../String.html\">String</a>)","location":{"filename":"src/search.cr","line_number":81,"url":null},"def":{"name":"info","args":[{"name":"index","external_name":"index","restriction":"String"}],"visibility":"Public","body":"@redis.run({\"ft.info\", index})"}},{"html_id":"profile(index:String,query:String)-instance-method","name":"profile","doc":"Profile the given search. For further details, see [the `FT.PROFILE`\ndocumentation](https://oss.redis.com/redisearch/Commands/#ftprofile).","summary":"<p>Profile the given search.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"String"},{"name":"query","external_name":"query","restriction":"String"}],"args_string":"(index : String, query : String)","args_html":"(index : <a href=\"../String.html\">String</a>, query : <a href=\"../String.html\">String</a>)","location":{"filename":"src/search.cr","line_number":176,"url":null},"def":{"name":"profile","args":[{"name":"index","external_name":"index","restriction":"String"},{"name":"query","external_name":"query","restriction":"String"}],"visibility":"Public","body":"@redis.run({\"ft.profile\", index, \"search\", \"query\", query})"}},{"html_id":"search(index:String,query:String,nocontent=false,verbatim=false,nostopwords=false,withscores=false,withpayloads=false,withsortkeys=false,filter:Tuple(String,Int|String,Int|String)?=nil,geofilter:Tuple(String,Float,Float,Numeric,GeoUnit)?=nil,inkeys:Array(String)?=nil,infields:Array(String)?=nil,returnreturn_value:Array(String)?=nil,slop:Int?=nil,inorder:Bool?=nil,language:String?=nil,expander:String?=nil,scorer:String?=nil,explainscore=nil,payload:String|Bytes|Nil=nil,sortby:SortBy?=nil,limit:Tuple(Int,Int)?=nil)-instance-method","name":"search","doc":"Run the specified `query` against `index`. Customize the search with various other arguments. For details about what each one does and the return value, see [the `FT.SEARCH`\ndocumentation](https://oss.redis.com/redisearch/Commands/#ftsearch).\n\n```\nresult = redis.ft.search \"people-index\", \"@name:Jamie\",\n  return: %w[name email],\n  sortby: Redis::FullText::SortBy.new(\"name\", :asc)\n```","summary":"<p>Run the specified <code>query</code> against <code>index</code>.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"String"},{"name":"query","external_name":"query","restriction":"String"},{"name":"nocontent","default_value":"false","external_name":"nocontent","restriction":""},{"name":"verbatim","default_value":"false","external_name":"verbatim","restriction":""},{"name":"nostopwords","default_value":"false","external_name":"nostopwords","restriction":""},{"name":"withscores","default_value":"false","external_name":"withscores","restriction":""},{"name":"withpayloads","default_value":"false","external_name":"withpayloads","restriction":""},{"name":"withsortkeys","default_value":"false","external_name":"withsortkeys","restriction":""},{"name":"filter","default_value":"nil","external_name":"filter","restriction":"::Tuple(String, Int | String, Int | String) | ::Nil"},{"name":"geofilter","default_value":"nil","external_name":"geofilter","restriction":"::Tuple(String, Float, Float, Numeric, GeoUnit) | ::Nil"},{"name":"inkeys","default_value":"nil","external_name":"inkeys","restriction":"Array(String) | ::Nil"},{"name":"infields","default_value":"nil","external_name":"infields","restriction":"Array(String) | ::Nil"},{"name":"return_value","default_value":"nil","external_name":"return","restriction":"Array(String) | ::Nil"},{"name":"slop","default_value":"nil","external_name":"slop","restriction":"Int | ::Nil"},{"name":"inorder","default_value":"nil","external_name":"inorder","restriction":"Bool | ::Nil"},{"name":"language","default_value":"nil","external_name":"language","restriction":"String | ::Nil"},{"name":"expander","default_value":"nil","external_name":"expander","restriction":"String | ::Nil"},{"name":"scorer","default_value":"nil","external_name":"scorer","restriction":"String | ::Nil"},{"name":"explainscore","default_value":"nil","external_name":"explainscore","restriction":""},{"name":"payload","default_value":"nil","external_name":"payload","restriction":"String | Bytes | Nil"},{"name":"sortby","default_value":"nil","external_name":"sortby","restriction":"SortBy | ::Nil"},{"name":"limit","default_value":"nil","external_name":"limit","restriction":"::Tuple(Int, Int) | ::Nil"}],"args_string":"(index : String, query : String, nocontent = false, verbatim = false, nostopwords = false, withscores = false, withpayloads = false, withsortkeys = false, filter : Tuple(String, Int | String, Int | String)? = nil, geofilter : Tuple(String, Float, Float, Numeric, GeoUnit)? = nil, inkeys : Array(String)? = nil, infields : Array(String)? = nil, return return_value : Array(String)? = nil, slop : Int? = nil, inorder : Bool? = nil, language : String? = nil, expander : String? = nil, scorer : String? = nil, explainscore = nil, payload : String | Bytes | Nil = nil, sortby : SortBy? = nil, limit : Tuple(Int, Int)? = nil)","args_html":"(index : <a href=\"../String.html\">String</a>, query : <a href=\"../String.html\">String</a>, nocontent = <span class=\"n\">false</span>, verbatim = <span class=\"n\">false</span>, nostopwords = <span class=\"n\">false</span>, withscores = <span class=\"n\">false</span>, withpayloads = <span class=\"n\">false</span>, withsortkeys = <span class=\"n\">false</span>, filter : <a href=\"../Tuple.html\">Tuple</a>(<a href=\"../String.html\">String</a>, <a href=\"../Int.html\">Int</a> | <a href=\"../String.html\">String</a>, <a href=\"../Int.html\">Int</a> | <a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>, geofilter : <a href=\"../Tuple.html\">Tuple</a>(<a href=\"../String.html\">String</a>, Float, Float, Numeric, <a href=\"../Redis/FullText/GeoUnit.html\">GeoUnit</a>)? = <span class=\"n\">nil</span>, inkeys : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>, infields : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>, return return_value : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>, slop : <a href=\"../Int.html\">Int</a>? = <span class=\"n\">nil</span>, inorder : <a href=\"../Bool.html\">Bool</a>? = <span class=\"n\">nil</span>, language : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, expander : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, scorer : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, explainscore = <span class=\"n\">nil</span>, payload : <a href=\"../String.html\">String</a> | Bytes | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, sortby : <a href=\"../Redis/FullText/SortBy.html\">SortBy</a>? = <span class=\"n\">nil</span>, limit : <a href=\"../Tuple.html\">Tuple</a>(<a href=\"../Int.html\">Int</a>, <a href=\"../Int.html\">Int</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/search.cr","line_number":93,"url":null},"def":{"name":"search","args":[{"name":"index","external_name":"index","restriction":"String"},{"name":"query","external_name":"query","restriction":"String"},{"name":"nocontent","default_value":"false","external_name":"nocontent","restriction":""},{"name":"verbatim","default_value":"false","external_name":"verbatim","restriction":""},{"name":"nostopwords","default_value":"false","external_name":"nostopwords","restriction":""},{"name":"withscores","default_value":"false","external_name":"withscores","restriction":""},{"name":"withpayloads","default_value":"false","external_name":"withpayloads","restriction":""},{"name":"withsortkeys","default_value":"false","external_name":"withsortkeys","restriction":""},{"name":"filter","default_value":"nil","external_name":"filter","restriction":"::Tuple(String, Int | String, Int | String) | ::Nil"},{"name":"geofilter","default_value":"nil","external_name":"geofilter","restriction":"::Tuple(String, Float, Float, Numeric, GeoUnit) | ::Nil"},{"name":"inkeys","default_value":"nil","external_name":"inkeys","restriction":"Array(String) | ::Nil"},{"name":"infields","default_value":"nil","external_name":"infields","restriction":"Array(String) | ::Nil"},{"name":"return_value","default_value":"nil","external_name":"return","restriction":"Array(String) | ::Nil"},{"name":"slop","default_value":"nil","external_name":"slop","restriction":"Int | ::Nil"},{"name":"inorder","default_value":"nil","external_name":"inorder","restriction":"Bool | ::Nil"},{"name":"language","default_value":"nil","external_name":"language","restriction":"String | ::Nil"},{"name":"expander","default_value":"nil","external_name":"expander","restriction":"String | ::Nil"},{"name":"scorer","default_value":"nil","external_name":"scorer","restriction":"String | ::Nil"},{"name":"explainscore","default_value":"nil","external_name":"explainscore","restriction":""},{"name":"payload","default_value":"nil","external_name":"payload","restriction":"String | Bytes | Nil"},{"name":"sortby","default_value":"nil","external_name":"sortby","restriction":"SortBy | ::Nil"},{"name":"limit","default_value":"nil","external_name":"limit","restriction":"::Tuple(Int, Int) | ::Nil"}],"visibility":"Public","body":"command = [\"ft.search\", index, query]\nif nocontent\n  command << \"nocontent\"\nend\nif verbatim\n  command << \"verbatim\"\nend\nif nostopwords\n  command << \"nostopwords\"\nend\nif withscores\n  command << \"withscores\"\nend\nif withpayloads\n  command << \"withpayloads\"\nend\nif withsortkeys\n  command << \"withsortkeys\"\nend\nif filter\n  command << \"filter\"\n  attr, min, max = filter\n  ((command << attr) << min.to_s) << max.to_s\nend\nif geofilter\n  command << \"geofilter\"\n  geofilter.each do |__arg0|\n    attr = __arg0[0]\n    lon = __arg0[1]\n    lat = __arg0[2]\n    radius = __arg0[3]\n    unit = __arg0[4]\n    ((((command << attr) << lon.to_s) << lat.to_s) << radius.to_s) << unit.to_s\n  end\nend\nif inkeys\n  command << \"inkeys\"\n  command.concat(inkeys)\nend\nif infields\n  command << \"infields\"\n  command.concat(infields)\nend\nif return_value\n  command = command + ([\"return\", return_value.size.to_s] + return_value)\nend\nif slop\n  (command << \"slop\") << slop.to_s\nend\nif inorder\n  command << \"inorder\"\nend\nif language\n  (command << \"language\") << language\nend\nif expander\n  (command << \"expander\") << expander\nend\nif scorer\n  (command << \"scorer\") << scorer\nend\nif explainscore\n  command << \"explainscore\"\nend\ncase payload\nwhen String\n  command << payload\nwhen Bytes\n  command << (String.new(payload))\nend\nif sortby\n  ((command << \"sortby\") << sortby.attribute) << sortby.direction.to_s\nend\nif limit\n  command << \"limit\"\n  command.concat(limit.map(&.to_s).to_a)\nend\n@redis.run(command)\n"}}],"types":[{"html_id":"redis/Redis/FullText/GeoUnit","path":"Redis/FullText/GeoUnit.html","kind":"enum","full_name":"Redis::FullText::GeoUnit","name":"GeoUnit","abstract":false,"ancestors":[{"html_id":"redis/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/search.cr","line_number":45,"url":null}],"repository_name":"redis","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"M","name":"M","value":"0"},{"id":"KM","name":"KM","value":"1"},{"id":"MI","name":"MI","value":"2"},{"id":"FT","name":"FT","value":"3"}],"namespace":{"html_id":"redis/Redis/FullText","kind":"struct","full_name":"Redis::FullText(Runnable)","name":"FullText"},"doc":"Pass to the `search` method's `geofilter` argument to filter within the\nspecified range. For example, to search for pizza places within 25 miles\nof the Baltimore Ravens stadium:\n\n```\nredis.ft.search \"places-index\", \"pizza\",\n  geofilter: {\"location\", -76.622400, 39.277751, 25, :mi}\n```","summary":"<p>Pass to the <code>search</code> method's <code>geofilter</code> argument to filter within the specified range.</p>","instance_methods":[{"html_id":"ft?-instance-method","name":"ft?","abstract":false,"location":{"filename":"src/search.cr","line_number":49,"url":null},"def":{"name":"ft?","visibility":"Public","body":"self == FT"}},{"html_id":"km?-instance-method","name":"km?","abstract":false,"location":{"filename":"src/search.cr","line_number":47,"url":null},"def":{"name":"km?","visibility":"Public","body":"self == KM"}},{"html_id":"m?-instance-method","name":"m?","abstract":false,"location":{"filename":"src/search.cr","line_number":46,"url":null},"def":{"name":"m?","visibility":"Public","body":"self == M"}},{"html_id":"mi?-instance-method","name":"mi?","abstract":false,"location":{"filename":"src/search.cr","line_number":48,"url":null},"def":{"name":"mi?","visibility":"Public","body":"self == MI"}}]},{"html_id":"redis/Redis/FullText/SortBy","path":"Redis/FullText/SortBy.html","kind":"struct","full_name":"Redis::FullText::SortBy","name":"SortBy","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/search.cr","line_number":35,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/FullText","kind":"struct","full_name":"Redis::FullText(Runnable)","name":"FullText"},"doc":"Pass to the `search` method's `sortby` argument to sort the results on the\ngiven attribute.\n\n```\nredis.ft.search \"people-index\", \"@name:Jamie\",\n  sortby: Redis::FullText::SortBy.new(\"name\", :asc)\n```","summary":"<p>Pass to the <code>search</code> method's <code>sortby</code> argument to sort the results on the given attribute.</p>","constructors":[{"html_id":"new(attribute:String,direction:SortDirection=:asc)-class-method","name":"new","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"String"},{"name":"direction","default_value":":asc","external_name":"direction","restriction":"SortDirection"}],"args_string":"(attribute : String, direction : SortDirection = :asc)","args_html":"(attribute : <a href=\"../../String.html\">String</a>, direction : <a href=\"../../Redis/FullText/SortDirection.html\">SortDirection</a> = <span class=\"n\">:asc</span>)","location":{"filename":"src/search.cr","line_number":35,"url":null},"def":{"name":"new","args":[{"name":"attribute","external_name":"attribute","restriction":"String"},{"name":"direction","default_value":":asc","external_name":"direction","restriction":"SortDirection"}],"visibility":"Public","body":"_ = allocate\n_.initialize(attribute, direction)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"attribute:String-instance-method","name":"attribute","abstract":false,"def":{"name":"attribute","return_type":"String","visibility":"Public","body":"@attribute"}},{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/search.cr","line_number":35,"url":null},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@attribute.clone, @direction.clone)"}},{"html_id":"copy_with(attribute_attribute=@attribute,direction_direction=@direction)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_attribute","default_value":"@attribute","external_name":"attribute","restriction":""},{"name":"_direction","default_value":"@direction","external_name":"direction","restriction":""}],"args_string":"(attribute _attribute = @attribute, direction _direction = @direction)","args_html":"(attribute _attribute = @attribute, direction _direction = @direction)","location":{"filename":"src/search.cr","line_number":35,"url":null},"def":{"name":"copy_with","args":[{"name":"_attribute","default_value":"@attribute","external_name":"attribute","restriction":""},{"name":"_direction","default_value":"@direction","external_name":"direction","restriction":""}],"visibility":"Public","body":"self.class.new(_attribute, _direction)"}},{"html_id":"direction:SortDirection-instance-method","name":"direction","abstract":false,"def":{"name":"direction","return_type":"SortDirection","visibility":"Public","body":"@direction"}}]},{"html_id":"redis/Redis/FullText/SortDirection","path":"Redis/FullText/SortDirection.html","kind":"enum","full_name":"Redis::FullText::SortDirection","name":"SortDirection","abstract":false,"ancestors":[{"html_id":"redis/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/search.cr","line_number":53,"url":null}],"repository_name":"redis","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"ASC","name":"ASC","value":"0"},{"id":"DESC","name":"DESC","value":"1"}],"namespace":{"html_id":"redis/Redis/FullText","kind":"struct","full_name":"Redis::FullText(Runnable)","name":"FullText"},"doc":"Pass to a `SortBy` constructor to specify a fulltext search sort direction.","summary":"<p>Pass to a <code><a href=\"../../Redis/FullText/SortBy.html\">SortBy</a></code> constructor to specify a fulltext search sort direction.</p>","instance_methods":[{"html_id":"asc?-instance-method","name":"asc?","abstract":false,"location":{"filename":"src/search.cr","line_number":54,"url":null},"def":{"name":"asc?","visibility":"Public","body":"self == ASC"}},{"html_id":"desc?-instance-method","name":"desc?","abstract":false,"location":{"filename":"src/search.cr","line_number":55,"url":null},"def":{"name":"desc?","visibility":"Public","body":"self == DESC"}}]}]},{"html_id":"redis/Redis/Future","path":"Redis/Future.html","kind":"class","full_name":"Redis::Future","name":"Future","abstract":false,"superclass":{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/pipeline.cr","line_number":33,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"doc":"A `Redis::Future` is what pipelined commands return. They will be resolved\nwith the value of the command that spawned them.","summary":"<p>A <code><a href=\"../Redis/Future.html\">Redis::Future</a></code> is what pipelined commands return.</p>","instance_methods":[{"html_id":"resolve(value:Value)-instance-method","name":"resolve","doc":"Resolves a Future with the supplied Redis::Value","summary":"<p>Resolves a Future with the supplied Redis::Value</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Value"}],"args_string":"(value : Value)","args_html":"(value : <a href=\"../Redis/Value.html\">Value</a>)","location":{"filename":"src/pipeline.cr","line_number":38,"url":null},"def":{"name":"resolve","args":[{"name":"value","external_name":"value","restriction":"Value"}],"visibility":"Public","body":"@resolved = true\n@value = value\n"}},{"html_id":"resolved?:Bool-instance-method","name":"resolved?","abstract":false,"location":{"filename":"src/pipeline.cr","line_number":35,"url":null},"def":{"name":"resolved?","visibility":"Public","body":"@resolved"}},{"html_id":"value-instance-method","name":"value","doc":"Read the value contained in this Future after it is resolved. If this\nmethod is called before the Future is resolved, it will raise a\n`Redis::Future::NotResolved` exception.","summary":"<p>Read the value contained in this Future after it is resolved.</p>","abstract":false,"location":{"filename":"src/pipeline.cr","line_number":46,"url":null},"def":{"name":"value","visibility":"Public","body":"if resolved?\n  @value\nelse\n  raise(NotResolved.new(\"Attempted to get the value of an unresolved Redis::Future\"))\nend"}}],"types":[{"html_id":"redis/Redis/Future/NotResolved","path":"Redis/Future/NotResolved.html","kind":"class","full_name":"Redis::Future::NotResolved","name":"NotResolved","abstract":false,"superclass":{"html_id":"redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/pipeline.cr","line_number":57,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Future","kind":"class","full_name":"Redis::Future","name":"Future"},"doc":"A `Redis::Future::NotResolved` is raised when attempting to access the\nvalue of a `Future` that has not been resolved yet. For example, calling\n`pipeline.get(\"my-key\").value`.","summary":"<p>A <code><a href=\"../../Redis/Future/NotResolved.html\">Redis::Future::NotResolved</a></code> is raised when attempting to access the value of a <code><a href=\"../../Redis/Future.html\">Future</a></code> that has not been resolved yet.</p>"}]},{"html_id":"redis/Redis/Graph","path":"Redis/Graph.html","kind":"module","full_name":"Redis::Graph","name":"Graph","abstract":false,"locations":[{"filename":"src/graph.cr","line_number":52,"url":null},{"filename":"src/graph/serializable.cr","line_number":1,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"doc":"[RedisGraph](https://redis.io/docs/stack/graph/) is a graph database built\non top of Redis that you query using the [Cypher](https://opencypher.org)\nquery language.\n\nIf your Redis server is running RedisGraph (for example, using [Redis\nStack](https://redis.io/docs/stack/)), you can branch off of your existing\n`Redis::Client` using the `Redis::Client#graph` method:\n\n```\nrequire \"redis/graph\"\n\nstruct Person\n  include Redis::Graph::Serializable::Node\n\n  getter id : Int64\n  getter name : String\nend\n\nredis = Redis::Client.new\n\n# Store the graph data in the Redis key \"my-graph\"\ngraph = redis.graph(key: \"my-graph\")\n\n# Create some data in our graph\ngraph.write_query <<-CYPHER, id: 123, name: \"Jamie\"\n  CREATE (person:Person{id: $id, name: $name})\nCYPHER\n\n# The `return` argument specifies the return types of the results in your\n# Cypher query's `RETURN` clause\npp graph.read_query(<<-CYPHER, {id: 123}, return: {Person})\n  MATCH (person:Person{id: $id})\n  RETURN person\nCYPHER\n# => [{Person(\n#       @id=123,\n#       @name=\"Jamie\",\n#       @node=\n#        Redis::Graph::Serializable::Node::Metadata(@id=0, @labels=[\"Person\"]))}]\n```\n\nIn addition to basic Redis property types, `Redis::Graph::Serializable` types\nalso support `Bool`, `UUID`, and `Time`.","summary":"<p><a href=\"https://redis.io/docs/stack/graph/\">RedisGraph</a> is a graph database built on top of Redis that you query using the <a href=\"https://opencypher.org\">Cypher</a> query language.</p>\n<p><span class=\"flag lime\">EXPERIMENTAL</span>  The <code><a href=\"../Redis/Graph.html\">Redis::Graph</a></code> API is experimental and may be subject to change.</p>","types":[{"html_id":"redis/Redis/Graph/Client","path":"Redis/Graph/Client.html","kind":"struct","full_name":"Redis::Graph::Client(Runnable)","name":"Client","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph.cr","line_number":56,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Graph","kind":"module","full_name":"Redis::Graph","name":"Graph"},"constructors":[{"html_id":"new(redis:Runnable,key:String)-class-method","name":"new","abstract":false,"args":[{"name":"redis","external_name":"redis","restriction":"Runnable"},{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(redis : Runnable, key : String)","args_html":"(redis : Runnable, key : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/graph.cr","line_number":57,"url":null},"def":{"name":"new","args":[{"name":"redis","external_name":"redis","restriction":"Runnable"},{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"_ = Client(Runnable).allocate\n_.initialize(redis, key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"multi(&)-instance-method","name":"multi","doc":"Execute a transaction within the given graph\n\n```\ngraph.multi do |txn|\n  txn.write_query <<-CYPHER, team_id: 123\n    MATCH (\n  CYPHER\nend\n```","summary":"<p>Execute a transaction within the given graph</p>\n<p><span class=\"flag lime\">EXPERIMENTAL</span>  This method may be difficult to use, since it relies primarily on <code>Redis::Client#multi</code>, which is not graph-aware. It is currently intended primarily to roll back previous writes if others do not succeed when a single query is not feasible. This may be iterated on in the future.</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":147,"url":null},"def":{"name":"multi","yields":1,"visibility":"Public","body":"@redis.multi do |txn|\n  yield Client.new(txn.@connection, @key)\nend"}},{"html_id":"read_query(cypher:String,params:NamedTuple|Hash,returntypes:Tuple(*T))forallT-instance-method","name":"read_query","doc":"Query the graph with the given Cypher query, passing in the given\nparams, and returning the given types corresponding to the values in\nyour Cypher `RETURN` clause.\n\n```\ngraph.read_query <<-CYPHER, {team_id: 123}, return: {Person}\n  MATCH (team:Team{id: $team_id})\n  MATCH (person)-[:MEMBER_OF]->(team)\n  RETURN person\nCYPHER\n```","summary":"<p>Query the graph with the given Cypher query, passing in the given params, and returning the given types corresponding to the values in your Cypher <code>RETURN</code> clause.</p>","abstract":false,"args":[{"name":"cypher","external_name":"cypher","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple | Hash"},{"name":"types","external_name":"return","restriction":"Tuple(*T)"}],"args_string":"(cypher : String, params : NamedTuple | Hash, return types : Tuple(*T)) forall T","args_html":"(cypher : <a href=\"../../String.html\">String</a>, params : NamedTuple | Hash, return types : <a href=\"../../Tuple.html\">Tuple</a>(<span class=\"o\">*</span><span class=\"t\">T</span>)) forall T","location":{"filename":"src/graph.cr","line_number":130,"url":null},"def":{"name":"read_query","args":[{"name":"cypher","external_name":"cypher","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple | Hash"},{"name":"types","external_name":"return","restriction":"Tuple(*T)"}],"visibility":"Public","body":"{% if true %}\n          result = Result.new(@redis.run({\"GRAPH.RO_QUERY\", @key, build_query(cypher, params)}).as(Array))\n          TypedResult({ {{ (T.type_vars.map(&.instance).join(\", \")).id }} }).new(result)\n        {% end %}"}},{"html_id":"read_query(cypher:String)-instance-method","name":"read_query","doc":"Query the graph with the given Cypher query.\n\n```\ngraph.read_query <<-CYPHER\n  MATCH (person:Person)\n  RETURN person\nCYPHER\n```","summary":"<p>Query the graph with the given Cypher query.</p>","abstract":false,"args":[{"name":"cypher","external_name":"cypher","restriction":"String"}],"args_string":"(cypher : String)","args_html":"(cypher : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/graph.cr","line_number":101,"url":null},"def":{"name":"read_query","args":[{"name":"cypher","external_name":"cypher","restriction":"String"}],"visibility":"Public","body":"Result.new((@redis.run({\"GRAPH.RO_QUERY\", @key, cypher})).as(Array))"}},{"html_id":"read_query(cypher:String,**params)-instance-method","name":"read_query","doc":"Query the graph with the given Cypher query, passing in the given\nparams.\n\n```\ngraph.read_query <<-CYPHER, team_id: 123\n  MATCH (team:Team{id: $team_id})\n  MATCH (person)-[membership:MEMBER_OF]->(team)\n  RETURN person, membership, team\nCYPHER\n```","summary":"<p>Query the graph with the given Cypher query, passing in the given params.</p>","abstract":false,"args":[{"name":"cypher","external_name":"cypher","restriction":"String"}],"args_string":"(cypher : String, **params)","args_html":"(cypher : <a href=\"../../String.html\">String</a>, **params)","location":{"filename":"src/graph.cr","line_number":115,"url":null},"def":{"name":"read_query","args":[{"name":"cypher","external_name":"cypher","restriction":"String"}],"double_splat":{"name":"params","external_name":"params","restriction":""},"visibility":"Public","body":"Result.new((@redis.run({\"GRAPH.RO_QUERY\", @key, build_query(cypher, params)})).as(Array))"}},{"html_id":"write_query(cypher:String,params:NamedTuple|Hash,returntypes:Tuple(*T))forallT-instance-method","name":"write_query","doc":"Write data to the graph using the given cypher query, passing in the\ngiven params and returning the given types for the values in your\nquery's `RETURN` clause.\n\n```\ngraph.write_query <<-CYPHER, {id: 123, now: Time.utc.to_unix_ms}, return: {Person}\n  MATCH (person:Person{id: $id})\n  SET person.confirmed_at = $now\n  RETURN person\nCYPHER\n```","summary":"<p>Write data to the graph using the given cypher query, passing in the given params and returning the given types for the values in your query's <code>RETURN</code> clause.</p>","abstract":false,"args":[{"name":"cypher","external_name":"cypher","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple | Hash"},{"name":"types","external_name":"return","restriction":"Tuple(*T)"}],"args_string":"(cypher : String, params : NamedTuple | Hash, return types : Tuple(*T)) forall T","args_html":"(cypher : <a href=\"../../String.html\">String</a>, params : NamedTuple | Hash, return types : <a href=\"../../Tuple.html\">Tuple</a>(<span class=\"o\">*</span><span class=\"t\">T</span>)) forall T","location":{"filename":"src/graph.cr","line_number":80,"url":null},"def":{"name":"write_query","args":[{"name":"cypher","external_name":"cypher","restriction":"String"},{"name":"params","external_name":"params","restriction":"NamedTuple | Hash"},{"name":"types","external_name":"return","restriction":"Tuple(*T)"}],"visibility":"Public","body":"result = Result.new((@redis.run({\"GRAPH.QUERY\", @key, build_query(cypher, params)})).as(Array))\nresult.map do |row|\n  types.from_graph_result(row.as(Array))\nend\n"}},{"html_id":"write_query(cypher:String)-instance-method","name":"write_query","doc":"Write data to this graph using the given Cypher query.\n\n```\ngraph.write_query \"MATCH (u:User{active: true}) SET u:ActiveUser, u.active = null\"\n```","summary":"<p>Write data to this graph using the given Cypher query.</p>","abstract":false,"args":[{"name":"cypher","external_name":"cypher","restriction":"String"}],"args_string":"(cypher : String)","args_html":"(cypher : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/graph.cr","line_number":65,"url":null},"def":{"name":"write_query","args":[{"name":"cypher","external_name":"cypher","restriction":"String"}],"visibility":"Public","body":"Result.new((@redis.run({\"GRAPH.QUERY\", @key, cypher})).as(Array))"}},{"html_id":"write_query(cypher:String,**params:Property)-instance-method","name":"write_query","doc":"Write data to the graph using the given cypher query, passing in the\ngiven query parameters.","summary":"<p>Write data to the graph using the given cypher query, passing in the given query parameters.</p>","abstract":false,"args":[{"name":"cypher","external_name":"cypher","restriction":"String"}],"args_string":"(cypher : String, **params : Property)","args_html":"(cypher : <a href=\"../../String.html\">String</a>, **params : Property)","location":{"filename":"src/graph.cr","line_number":89,"url":null},"def":{"name":"write_query","args":[{"name":"cypher","external_name":"cypher","restriction":"String"}],"double_splat":{"name":"params","external_name":"params","restriction":"Property"},"visibility":"Public","body":"Result.new((@redis.run({\"GRAPH.QUERY\", @key, build_query(cypher, params)})).as(Array))"}}]},{"html_id":"redis/Redis/Graph/Error","path":"Redis/Graph/Error.html","kind":"class","full_name":"Redis::Graph::Error","name":"Error","abstract":false,"superclass":{"html_id":"redis/Redis/Error","kind":"class","full_name":"Redis::Error","name":"Error"},"ancestors":[{"html_id":"redis/Redis/Error","kind":"class","full_name":"Redis::Error","name":"Error"},{"html_id":"redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph.cr","line_number":53,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Graph","kind":"module","full_name":"Redis::Graph","name":"Graph"}},{"html_id":"redis/Redis/Graph/List","path":"Redis/Graph/List.html","kind":"alias","full_name":"Redis::Graph::List","name":"List","abstract":false,"locations":[{"filename":"src/graph.cr","line_number":290,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":true,"aliased":"Array(Array(Array(Redis::Value) | Int64 | Redis::Graph::Node | Redis::Graph::Relationship | String | Nil) | Array(Redis::Value) | Int64 | Redis::Graph::Node | Redis::Graph::Relationship | String | Nil)","aliased_html":"<a href=\"../../Array.html\">Array</a>(<a href=\"../../Array.html\">Array</a>(<a href=\"../../Array.html\">Array</a>(<a href=\"../../Redis/Value.html\">Redis::Value</a>) | <a href=\"../../Int64.html\">Int64</a> | <a href=\"../../Redis/Graph/Node.html\">Redis::Graph::Node</a> | <a href=\"../../Redis/Graph/Relationship.html\">Redis::Graph::Relationship</a> | <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a>) | <a href=\"../../Array.html\">Array</a>(<a href=\"../../Redis/Value.html\">Redis::Value</a>) | <a href=\"../../Int64.html\">Int64</a> | <a href=\"../../Redis/Graph/Node.html\">Redis::Graph::Node</a> | <a href=\"../../Redis/Graph/Relationship.html\">Redis::Graph::Relationship</a> | <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a>)","const":false,"namespace":{"html_id":"redis/Redis/Graph","kind":"module","full_name":"Redis::Graph","name":"Graph"}},{"html_id":"redis/Redis/Graph/Map","path":"Redis/Graph/Map.html","kind":"alias","full_name":"Redis::Graph::Map","name":"Map","abstract":false,"locations":[{"filename":"src/graph.cr","line_number":291,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":true,"aliased":"Hash(String, Array(Redis::Value) | Int64 | String | Nil)","aliased_html":"Hash(<a href=\"../../String.html\">String</a>, <a href=\"../../Array.html\">Array</a>(<a href=\"../../Redis/Value.html\">Redis::Value</a>) | <a href=\"../../Int64.html\">Int64</a> | <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a>)","const":false,"namespace":{"html_id":"redis/Redis/Graph","kind":"module","full_name":"Redis::Graph","name":"Graph"}},{"html_id":"redis/Redis/Graph/Node","path":"Redis/Graph/Node.html","kind":"struct","full_name":"Redis::Graph::Node","name":"Node","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph.cr","line_number":184,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Graph","kind":"module","full_name":"Redis::Graph","name":"Graph"},"doc":"Represents a node in the graph.\n\n```\nresult = graph.read_query(<<-CYPHER)\n  MATCH (u:User)\n  RETURN u\nCYPHER\n\nresult.each do |(user)|\n  user = user.as(Redis::Graph::Node)\n  # ...\nend\n```","summary":"<p>Represents a node in the graph.</p>","instance_methods":[{"html_id":"id:Int64-instance-method","name":"id","abstract":false,"location":{"filename":"src/graph.cr","line_number":185,"url":null},"def":{"name":"id","return_type":"Int64","visibility":"Public","body":"@id"}},{"html_id":"labels:Array(String)-instance-method","name":"labels","abstract":false,"location":{"filename":"src/graph.cr","line_number":186,"url":null},"def":{"name":"labels","return_type":"Array(String)","visibility":"Public","body":"@labels"}},{"html_id":"properties:Hash(String,Property)-instance-method","name":"properties","abstract":false,"location":{"filename":"src/graph.cr","line_number":187,"url":null},"def":{"name":"properties","return_type":"Hash(String, Property)","visibility":"Public","body":"@properties"}}]},{"html_id":"redis/Redis/Graph/Property","path":"Redis/Graph/Property.html","kind":"alias","full_name":"Redis::Graph::Property","name":"Property","abstract":false,"locations":[{"filename":"src/graph.cr","line_number":288,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":true,"aliased":"Redis::Value","aliased_html":"<a href=\"../../Redis/Value.html\">Redis::Value</a>","const":false,"namespace":{"html_id":"redis/Redis/Graph","kind":"module","full_name":"Redis::Graph","name":"Graph"}},{"html_id":"redis/Redis/Graph/Relationship","path":"Redis/Graph/Relationship.html","kind":"struct","full_name":"Redis::Graph::Relationship","name":"Relationship","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph.cr","line_number":225,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Graph","kind":"module","full_name":"Redis::Graph","name":"Graph"},"doc":"Represents a relationship in your graph\n\n```\nresult = graph.read_query(<<-CYPHER)\n  MATCH (:User)-[membership:MEMBER_OF]->(:Team)\n  RETURN membership\nCYPHER\n\nresult.each do |(membership)|\n  membership = membership.as(Redis::Graph::Relationship)\n  # ...\nend\n```","summary":"<p>Represents a relationship in your graph</p>","instance_methods":[{"html_id":"dest_node:Int64-instance-method","name":"dest_node","doc":"The node that this relationship points to, for example with\n`(person)-[membership]->(team)`, it will be the node id of `team`.\n\nWARNING: This will not match an `id` *property* of the destination node.","summary":"<p>The node that this relationship points to, for example with <code>(person)-[membership]-&gt;(team)</code>, it will be the node id of <code>team</code>.</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":248,"url":null},"def":{"name":"dest_node","return_type":"Int64","visibility":"Public","body":"@dest_node"}},{"html_id":"id:Int64-instance-method","name":"id","doc":"The identifier of the relationship.\n\nNOTE: If this relationship has an `id` property, this is *not* that.\nWARNING: Do not try to query against this. RedisGraph provides no\nguarantees that this relationship will be at the same offset it was at\nthe last time you queried it.","summary":"<p>The identifier of the relationship.</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":232,"url":null},"def":{"name":"id","return_type":"Int64","visibility":"Public","body":"@id"}},{"html_id":"properties:Hash(String,Property)-instance-method","name":"properties","doc":"The hash of properties for this relationship.\n\n```\nresult = graph.write_query <<-CYPHER, now: Time.utc.to_unix_ms\n  CREATE (person)-[membership{since: $now}]->(team)\n  RETURN membership\nCYPHER\nresult.first.properties # => {\"since\" => 2022-05-15T05:48:23 UTC}\n```","summary":"<p>The hash of properties for this relationship.</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":259,"url":null},"def":{"name":"properties","return_type":"Hash(String, Property)","visibility":"Public","body":"@properties"}},{"html_id":"src_node:Int64-instance-method","name":"src_node","doc":"The node that this relationship originates from, for example with\n`(person)-[membership]->(team)`, it will be the node id of `person`.\n\nWARNING: This will not match an `id` *property* of the source node.","summary":"<p>The node that this relationship originates from, for example with <code>(person)-[membership]-&gt;(team)</code>, it will be the node id of <code>person</code>.</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":242,"url":null},"def":{"name":"src_node","return_type":"Int64","visibility":"Public","body":"@src_node"}},{"html_id":"type:String-instance-method","name":"type","doc":"The type of relationship, for example with `[:MEMBER_OF]`, the `type`\nwill be `\"MEMBER_OF\"`.","summary":"<p>The type of relationship, for example with <code>[:MEMBER_OF]</code>, the <code><a href=\"../../Redis/Graph/Relationship.html#type%3AString-instance-method\">#type</a></code> will be <code>&quot;MEMBER_OF&quot;</code>.</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":236,"url":null},"def":{"name":"type","return_type":"String","visibility":"Public","body":"@type"}}]},{"html_id":"redis/Redis/Graph/Result","path":"Redis/Graph/Result.html","kind":"struct","full_name":"Redis::Graph::Result","name":"Result","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph.cr","line_number":294,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"redis/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"redis/Redis/Graph","kind":"module","full_name":"Redis::Graph","name":"Graph"},"doc":"Parses the results of a Cypher query","summary":"<p>Parses the results of a Cypher query</p>","constructors":[{"html_id":"new(raw:Array)-class-method","name":"new","abstract":false,"args":[{"name":"raw","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : <a href=\"../../Array.html\">Array</a>)","location":{"filename":"src/graph.cr","line_number":318,"url":null},"def":{"name":"new","args":[{"name":"raw","external_name":"raw","restriction":"Array"}],"visibility":"Public","body":"fields, rows, metadata = raw\nlabels_added = 0_i64\nnodes_created = 0_i64\nproperties_set = 0_i64\ncached = false\nquery_time = 0.seconds\n(metadata.as(Array)).each do |item|\n  case item\n  when /Labels added: (\\d+)/\n    labels_added = $~[1].to_i64\n  when /Nodes created: (\\d+)/\n    nodes_created = $~[1].to_i64\n  when /Properties set: (\\d+)/\n    properties_set = $~[1].to_i64\n  when /Query internal execution time: (\\d+\\.\\d+) milliseconds/\n    query_time = $~[1].to_f64.milliseconds\n  when /Cached execution: (\\d+)/\n    cached = $~[1] != \"0\"\n  end\nend\nnew(fields: (fields.as(Array)).map do |__arg10|\n  __arg10.as(String)\nend, rows: (rows.as(Array)).map do |row|\n  row = row.as(Array)\n  list = List.new(initial_capacity: row.size)\n  row.each do |item|\n    (case item\n    in String, Int64, Nil\n      list << item\n    in Array\n      list << (((Node.from?(item)) || (Relationship.from?(item))) || item)\n    end).as(ResultValue | List)\n  end\n  list\nend, cached_execution: !(!(cached =~ (/1/))), duration: query_time, labels_added: labels_added, nodes_created: nodes_created, properties_set: properties_set)\n"}},{"html_id":"new(*,fields,rows,cached_execution,duration,labels_added,nodes_created,properties_set)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"fields","external_name":"fields","restriction":""},{"name":"rows","external_name":"rows","restriction":""},{"name":"cached_execution","external_name":"cached_execution","restriction":""},{"name":"duration","external_name":"duration","restriction":""},{"name":"labels_added","external_name":"labels_added","restriction":""},{"name":"nodes_created","external_name":"nodes_created","restriction":""},{"name":"properties_set","external_name":"properties_set","restriction":""}],"args_string":"(*, fields, rows, cached_execution, duration, labels_added, nodes_created, properties_set)","args_html":"(*, fields, rows, cached_execution, duration, labels_added, nodes_created, properties_set)","location":{"filename":"src/graph.cr","line_number":364,"url":null},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"fields","external_name":"fields","restriction":""},{"name":"rows","external_name":"rows","restriction":""},{"name":"cached_execution","external_name":"cached_execution","restriction":""},{"name":"duration","external_name":"duration","restriction":""},{"name":"labels_added","external_name":"labels_added","restriction":""},{"name":"nodes_created","external_name":"nodes_created","restriction":""},{"name":"properties_set","external_name":"properties_set","restriction":""}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(fields: fields, rows: rows, cached_execution: cached_execution, duration: duration, labels_added: labels_added, nodes_created: nodes_created, properties_set: properties_set)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"cached_execution?:Bool-instance-method","name":"cached_execution?","doc":"Indicates whether the query was cached by RedisGraph","summary":"<p>Indicates whether the query was cached by RedisGraph</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":304,"url":null},"def":{"name":"cached_execution?","return_type":"Bool","visibility":"Public","body":"@cached_execution"}},{"html_id":"duration:Time::Span-instance-method","name":"duration","doc":"How long it took RedisGraph to execute the query on the server side.","summary":"<p>How long it took RedisGraph to execute the query on the server side.</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":307,"url":null},"def":{"name":"duration","return_type":"Time::Span","visibility":"Public","body":"@duration"}},{"html_id":"each(&)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":367,"url":null},"def":{"name":"each","yields":1,"visibility":"Public","body":"@rows.each do |row|\n  yield row\nend"}},{"html_id":"fields:Array(String)-instance-method","name":"fields","doc":"The names of the fields in a query's `RETURN` clause","summary":"<p>The names of the fields in a query's <code>RETURN</code> clause</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":298,"url":null},"def":{"name":"fields","return_type":"Array(String)","visibility":"Public","body":"@fields"}},{"html_id":"labels_added:Int64-instance-method","name":"labels_added","doc":"How many labels were added in this query","summary":"<p>How many labels were added in this query</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":310,"url":null},"def":{"name":"labels_added","return_type":"Int64","visibility":"Public","body":"@labels_added"}},{"html_id":"nodes_created:Int64-instance-method","name":"nodes_created","doc":"How many nodes were created in this query","summary":"<p>How many nodes were created in this query</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":313,"url":null},"def":{"name":"nodes_created","return_type":"Int64","visibility":"Public","body":"@nodes_created"}},{"html_id":"properties_set:Int64-instance-method","name":"properties_set","doc":"How many properties were set in this query","summary":"<p>How many properties were set in this query</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":316,"url":null},"def":{"name":"properties_set","return_type":"Int64","visibility":"Public","body":"@properties_set"}},{"html_id":"rows:Array(List)-instance-method","name":"rows","doc":"The values of the fields in a query's `RETURN` clause","summary":"<p>The values of the fields in a query's <code>RETURN</code> clause</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":301,"url":null},"def":{"name":"rows","return_type":"Array(List)","visibility":"Public","body":"@rows"}}]},{"html_id":"redis/Redis/Graph/ResultValue","path":"Redis/Graph/ResultValue.html","kind":"alias","full_name":"Redis::Graph::ResultValue","name":"ResultValue","abstract":false,"locations":[{"filename":"src/graph.cr","line_number":289,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":true,"aliased":"(Array(Redis::Value) | Int64 | Redis::Graph::Node | Redis::Graph::Relationship | String | Nil)","aliased_html":"<a href=\"../../Array.html\">Array</a>(<a href=\"../../Redis/Value.html\">Redis::Value</a>) | <a href=\"../../Int64.html\">Int64</a> | <a href=\"../../Redis/Graph/Node.html\">Redis::Graph::Node</a> | <a href=\"../../Redis/Graph/Relationship.html\">Redis::Graph::Relationship</a> | <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a>","const":false,"namespace":{"html_id":"redis/Redis/Graph","kind":"module","full_name":"Redis::Graph","name":"Graph"}},{"html_id":"redis/Redis/Graph/Serializable","path":"Redis/Graph/Serializable.html","kind":"module","full_name":"Redis::Graph::Serializable","name":"Serializable","abstract":false,"locations":[{"filename":"src/graph/serializable.cr","line_number":2,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Graph","kind":"module","full_name":"Redis::Graph","name":"Graph"},"types":[{"html_id":"redis/Redis/Graph/Serializable/Node","path":"Redis/Graph/Serializable/Node.html","kind":"module","full_name":"Redis::Graph::Serializable::Node","name":"Node","abstract":false,"locations":[{"filename":"src/graph/serializable.cr","line_number":6,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Graph/Serializable","kind":"module","full_name":"Redis::Graph::Serializable","name":"Serializable"},"types":[{"html_id":"redis/Redis/Graph/Serializable/Node/Metadata","path":"Redis/Graph/Serializable/Node/Metadata.html","kind":"struct","full_name":"Redis::Graph::Serializable::Node::Metadata","name":"Metadata","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":7,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Graph/Serializable/Node","kind":"module","full_name":"Redis::Graph::Serializable::Node","name":"Node"},"constructors":[{"html_id":"new(id:Int64,labels:Array(String))-class-method","name":"new","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"Int64"},{"name":"labels","external_name":"labels","restriction":"Array(String)"}],"args_string":"(id : Int64, labels : Array(String))","args_html":"(id : <a href=\"../../../../Int64.html\">Int64</a>, labels : <a href=\"../../../../Array.html\">Array</a>(<a href=\"../../../../String.html\">String</a>))","location":{"filename":"src/graph/serializable.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"id","external_name":"id","restriction":"Int64"},{"name":"labels","external_name":"labels","restriction":"Array(String)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(id, labels)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/graph/serializable.cr","line_number":7,"url":null},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@id.clone, @labels.clone)"}},{"html_id":"copy_with(id_id=@id,labels_labels=@labels)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_id","default_value":"@id","external_name":"id","restriction":""},{"name":"_labels","default_value":"@labels","external_name":"labels","restriction":""}],"args_string":"(id _id = @id, labels _labels = @labels)","args_html":"(id _id = @id, labels _labels = @labels)","location":{"filename":"src/graph/serializable.cr","line_number":7,"url":null},"def":{"name":"copy_with","args":[{"name":"_id","default_value":"@id","external_name":"id","restriction":""},{"name":"_labels","default_value":"@labels","external_name":"labels","restriction":""}],"visibility":"Public","body":"self.class.new(_id, _labels)"}},{"html_id":"id:Int64-instance-method","name":"id","abstract":false,"def":{"name":"id","return_type":"Int64","visibility":"Public","body":"@id"}},{"html_id":"labels:Array(String)-instance-method","name":"labels","abstract":false,"def":{"name":"labels","return_type":"Array(String)","visibility":"Public","body":"@labels"}}]}]},{"html_id":"redis/Redis/Graph/Serializable/Property","path":"Redis/Graph/Serializable/Property.html","kind":"annotation","full_name":"Redis::Graph::Serializable::Property","name":"Property","abstract":false,"locations":[{"filename":"src/graph/serializable.cr","line_number":3,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Graph/Serializable","kind":"module","full_name":"Redis::Graph::Serializable","name":"Serializable"}},{"html_id":"redis/Redis/Graph/Serializable/Relationship","path":"Redis/Graph/Serializable/Relationship.html","kind":"module","full_name":"Redis::Graph::Serializable::Relationship","name":"Relationship","abstract":false,"locations":[{"filename":"src/graph/serializable.cr","line_number":76,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Graph/Serializable","kind":"module","full_name":"Redis::Graph::Serializable","name":"Serializable"},"types":[{"html_id":"redis/Redis/Graph/Serializable/Relationship/Metadata","path":"Redis/Graph/Serializable/Relationship/Metadata.html","kind":"struct","full_name":"Redis::Graph::Serializable::Relationship::Metadata","name":"Metadata","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":77,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Graph/Serializable/Relationship","kind":"module","full_name":"Redis::Graph::Serializable::Relationship","name":"Relationship"},"constructors":[{"html_id":"new(id:Int64,type:String,source_node:Int64,destination_node:Int64)-class-method","name":"new","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"Int64"},{"name":"type","external_name":"type","restriction":"String"},{"name":"source_node","external_name":"source_node","restriction":"Int64"},{"name":"destination_node","external_name":"destination_node","restriction":"Int64"}],"args_string":"(id : Int64, type : String, source_node : Int64, destination_node : Int64)","args_html":"(id : <a href=\"../../../../Int64.html\">Int64</a>, type : <a href=\"../../../../String.html\">String</a>, source_node : <a href=\"../../../../Int64.html\">Int64</a>, destination_node : <a href=\"../../../../Int64.html\">Int64</a>)","location":{"filename":"src/graph/serializable.cr","line_number":77,"url":null},"def":{"name":"new","args":[{"name":"id","external_name":"id","restriction":"Int64"},{"name":"type","external_name":"type","restriction":"String"},{"name":"source_node","external_name":"source_node","restriction":"Int64"},{"name":"destination_node","external_name":"destination_node","restriction":"Int64"}],"visibility":"Public","body":"_ = allocate\n_.initialize(id, type, source_node, destination_node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/graph/serializable.cr","line_number":77,"url":null},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@id.clone, @type.clone, @source_node.clone, @destination_node.clone)"}},{"html_id":"copy_with(id_id=@id,type_type=@type,source_node_source_node=@source_node,destination_node_destination_node=@destination_node)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_id","default_value":"@id","external_name":"id","restriction":""},{"name":"_type","default_value":"@type","external_name":"type","restriction":""},{"name":"_source_node","default_value":"@source_node","external_name":"source_node","restriction":""},{"name":"_destination_node","default_value":"@destination_node","external_name":"destination_node","restriction":""}],"args_string":"(id _id = @id, type _type = @type, source_node _source_node = @source_node, destination_node _destination_node = @destination_node)","args_html":"(id _id = @id, type _type = @type, source_node _source_node = @source_node, destination_node _destination_node = @destination_node)","location":{"filename":"src/graph/serializable.cr","line_number":77,"url":null},"def":{"name":"copy_with","args":[{"name":"_id","default_value":"@id","external_name":"id","restriction":""},{"name":"_type","default_value":"@type","external_name":"type","restriction":""},{"name":"_source_node","default_value":"@source_node","external_name":"source_node","restriction":""},{"name":"_destination_node","default_value":"@destination_node","external_name":"destination_node","restriction":""}],"visibility":"Public","body":"self.class.new(_id, _type, _source_node, _destination_node)"}},{"html_id":"destination_node:Int64-instance-method","name":"destination_node","abstract":false,"def":{"name":"destination_node","return_type":"Int64","visibility":"Public","body":"@destination_node"}},{"html_id":"id:Int64-instance-method","name":"id","abstract":false,"def":{"name":"id","return_type":"Int64","visibility":"Public","body":"@id"}},{"html_id":"source_node:Int64-instance-method","name":"source_node","abstract":false,"def":{"name":"source_node","return_type":"Int64","visibility":"Public","body":"@source_node"}},{"html_id":"type:String-instance-method","name":"type","abstract":false,"def":{"name":"type","return_type":"String","visibility":"Public","body":"@type"}}]}]}]},{"html_id":"redis/Redis/Graph/TypedResult","path":"Redis/Graph/TypedResult.html","kind":"struct","full_name":"Redis::Graph::TypedResult(T)","name":"TypedResult","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph.cr","line_number":372,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"redis/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"redis/Redis/Graph","kind":"module","full_name":"Redis::Graph","name":"Graph"},"instance_methods":[{"html_id":"cached_execution?:Bool-instance-method","name":"cached_execution?","doc":"Indicates whether the query was cached by RedisGraph","summary":"<p>Indicates whether the query was cached by RedisGraph</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":380,"url":null},"def":{"name":"cached_execution?","return_type":"Bool","visibility":"Public","body":"@cached_execution"}},{"html_id":"duration:Time::Span-instance-method","name":"duration","doc":"How long it took RedisGraph to execute the query on the server side.","summary":"<p>How long it took RedisGraph to execute the query on the server side.</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":382,"url":null},"def":{"name":"duration","return_type":"Time::Span","visibility":"Public","body":"@duration"}},{"html_id":"each(&)-instance-method","name":"each","doc":"Iterate over each of the results, yielding a tuple containing instances\nof the types in `T`.","summary":"<p>Iterate over each of the results, yielding a tuple containing instances of the types in <code>T</code>.</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":413,"url":null},"def":{"name":"each","yields":1,"visibility":"Public","body":"@rows.each do |row|\n  yield row\nend"}},{"html_id":"fields:Array(String)-instance-method","name":"fields","doc":"The names of the fields in a query's `RETURN` clause","summary":"<p>The names of the fields in a query's <code>RETURN</code> clause</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":376,"url":null},"def":{"name":"fields","return_type":"Array(String)","visibility":"Public","body":"@fields"}},{"html_id":"labels_added:Int64-instance-method","name":"labels_added","doc":"How many labels were added in this query","summary":"<p>How many labels were added in this query</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":384,"url":null},"def":{"name":"labels_added","return_type":"Int64","visibility":"Public","body":"@labels_added"}},{"html_id":"nodes_created:Int64-instance-method","name":"nodes_created","doc":"How many nodes were created in this query","summary":"<p>How many nodes were created in this query</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":386,"url":null},"def":{"name":"nodes_created","return_type":"Int64","visibility":"Public","body":"@nodes_created"}},{"html_id":"properties_set:Int64-instance-method","name":"properties_set","doc":"How many properties were set in this query","summary":"<p>How many properties were set in this query</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":388,"url":null},"def":{"name":"properties_set","return_type":"Int64","visibility":"Public","body":"@properties_set"}},{"html_id":"rows:Array(T)-instance-method","name":"rows","doc":"The values of the fields in a query's `RETURN` clause","summary":"<p>The values of the fields in a query's <code>RETURN</code> clause</p>","abstract":false,"location":{"filename":"src/graph.cr","line_number":378,"url":null},"def":{"name":"rows","return_type":"Array(T)","visibility":"Public","body":"@rows"}}]}]},{"html_id":"redis/Redis/JSON","path":"Redis/JSON.html","kind":"struct","full_name":"Redis::JSON(Runnable)","name":"JSON","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/json.cr","line_number":36,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"doc":"`Redis::JSON` wraps a `Redis::Client` or `Redis::Cluster` to execute\ncommands against keys storing JSON data using the\n[RedisJSON](https://oss.redis.com/redisjson/) plugin for Redis.\n\n```\nrequire \"redis\"\nrequire \"redis/json\"\nrequire \"uuid/json\"\n\nstruct Person\n  include JSON::Serializable\n\n  getter id : UUID\n  getter name : String\n  getter email : String\n\n  def initialize(@id, @name, @email)\n  end\nend\n\nredis = Redis::Client.new\n\nid = UUID.random\n\nredis.json.set \"person:#{id}\", \".\", Person.new(id, \"Jamie\", \"jamie@example.com\")\nredis.json.get(\"person:#{id}\", \".\", as: Person)\n# => Person(@email=\"jamie@example.com\", @id=UUID(081af617-6b50-48d3-b53f-dbc17a1072f5), @name=\"Jamie\")\nredis.json.get(\"person:#{id}\", \".name\", as: String)\n# => \"Jamie\"\n```","summary":"<p><code><a href=\"../Redis/JSON.html\">Redis::JSON</a></code> wraps a <code><a href=\"../Redis/Client.html\">Redis::Client</a></code> or <code><a href=\"../Redis/Cluster.html\">Redis::Cluster</a></code> to execute commands against keys storing JSON data using the <a href=\"https://oss.redis.com/redisjson/\">RedisJSON</a> plugin for Redis.</p>","constructors":[{"html_id":"new(redis:Runnable)-class-method","name":"new","abstract":false,"args":[{"name":"redis","external_name":"redis","restriction":"Runnable"}],"args_string":"(redis : Runnable)","args_html":"(redis : Runnable)","location":{"filename":"src/json.cr","line_number":37,"url":null},"def":{"name":"new","args":[{"name":"redis","external_name":"redis","restriction":"Runnable"}],"visibility":"Public","body":"_ = JSON(Runnable).allocate\n_.initialize(redis)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"arrappend(key:String,path:String,value)-instance-method","name":"arrappend","doc":"Append `value` as JSON to the array located at the JSONPath in `key`\n\n```\nredis.json.arrappend \"posts:#{id}\", \".tags\", \"redis\"\n```","summary":"<p>Append <code>value</code> as JSON to the array located at the JSONPath in <code>key</code></p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key : String, path : String, value)","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>, value)","location":{"filename":"src/json.cr","line_number":197,"url":null},"def":{"name":"arrappend","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"@redis.run({\"json.arrappend\", key, path, value.to_json})"}},{"html_id":"arrappend(key:String,path:String,*,values:Array)-instance-method","name":"arrappend","doc":"Append `values` as JSON to the array located at the JSONPath in `key`\n\n```\nredis.json.arrappend \"posts:#{id}\", \".tags\", %w[redis crystal]\n```","summary":"<p>Append <code>values</code> as JSON to the array located at the JSONPath in <code>key</code></p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"values","external_name":"values","restriction":"Array"}],"args_string":"(key : String, path : String, *, values : Array)","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>, *, values : <a href=\"../Array.html\">Array</a>)","location":{"filename":"src/json.cr","line_number":206,"url":null},"def":{"name":"arrappend","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"values","external_name":"values","restriction":"Array"}],"splat_index":2,"visibility":"Public","body":"command = Array(String).new(initial_capacity: 3 + values.size)\n((command << \"json.arrappend\") << key) << path\nvalues.each do |value|\n  command << value.to_json\nend\n@redis.run(command)\n"}},{"html_id":"arrindex(key:String,path:String,value,betweenrange:Range(Int,Int?))-instance-method","name":"arrindex","doc":"Get the index of `value` in the array located at the JSONPath in `key` if\nand only if it falls in the specified `range`\n\n```\nredis.json.arrindex \"posts:#{id}\", \".tags\", \"redis\", between: 1..3\n# => 2\n```","summary":"<p>Get the index of <code>value</code> in the array located at the JSONPath in <code>key</code> if and only if it falls in the specified <code>range</code></p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"value","external_name":"value","restriction":""},{"name":"range","external_name":"between","restriction":"Range(Int, Int | ::Nil)"}],"args_string":"(key : String, path : String, value, between range : Range(Int, Int?))","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>, value, between range : Range(<a href=\"../Int.html\">Int</a>, <a href=\"../Int.html\">Int</a>?))","location":{"filename":"src/json.cr","line_number":232,"url":null},"def":{"name":"arrindex","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"value","external_name":"value","restriction":""},{"name":"range","external_name":"between","restriction":"Range(Int, Int | ::Nil)"}],"visibility":"Public","body":"command = {\"json.arrindex\", key, path, value.to_json, range.begin.to_s}\nif last = range.end\n  if range.excludes_end?\n    command = command + {last.to_s}\n  else\n    command = command + {(last + 1).to_s}\n  end\nend\n@redis.run(command)\n"}},{"html_id":"arrindex(key:String,path:String,value)-instance-method","name":"arrindex","doc":"Get the index of `value` in the array located at the JSONPath in `key`\n\n```\nredis.json.arrindex \"posts:#{id}\", \".tags\", \"redis\" # => 2\n```","summary":"<p>Get the index of <code>value</code> in the array located at the JSONPath in <code>key</code></p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key : String, path : String, value)","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>, value)","location":{"filename":"src/json.cr","line_number":221,"url":null},"def":{"name":"arrindex","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"@redis.run({\"json.arrindex\", key, path, value.to_json})"}},{"html_id":"arrinsert(key:String,path:String,index:Int,value)-instance-method","name":"arrinsert","doc":"Insert `value` into the array located at the JSONPath in `key` at `index`\n\n```\nredis.json.arrinsert \"posts:#{id}\", \".tags\", index: 1, value: \"redis\"\n# => 3\n```","summary":"<p>Insert <code>value</code> into the array located at the JSONPath in <code>key</code> at <code>index</code></p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"index","external_name":"index","restriction":"Int"},{"name":"value","external_name":"value","restriction":""}],"args_string":"(key : String, path : String, index : Int, value)","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>, index : <a href=\"../Int.html\">Int</a>, value)","location":{"filename":"src/json.cr","line_number":251,"url":null},"def":{"name":"arrinsert","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"index","external_name":"index","restriction":"Int"},{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"@redis.run({\"json.arrinsert\", key, path, index.to_s, value.to_json})"}},{"html_id":"arrinsert(key:String,path:String,index:Int,*,values:Array)-instance-method","name":"arrinsert","doc":"Insert the elements of `values` into the array located at the JSONPath in\n`key` at `index`\n\n```\nredis.json.arrinsert \"posts:#{id}\", \".tags\", index: 1, values: %w[\n  redis\n  crystal\n]\n# => 4\n```","summary":"<p>Insert the elements of <code>values</code> into the array located at the JSONPath in <code>key</code> at <code>index</code></p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"index","external_name":"index","restriction":"Int"},{"name":"","external_name":"","restriction":""},{"name":"values","external_name":"values","restriction":"Array"}],"args_string":"(key : String, path : String, index : Int, *, values : Array)","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>, index : <a href=\"../Int.html\">Int</a>, *, values : <a href=\"../Array.html\">Array</a>)","location":{"filename":"src/json.cr","line_number":265,"url":null},"def":{"name":"arrinsert","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"index","external_name":"index","restriction":"Int"},{"name":"","external_name":"","restriction":""},{"name":"values","external_name":"values","restriction":"Array"}],"splat_index":3,"visibility":"Public","body":"command = Array(String).new(initial_capacity: 4 + values.size)\n(((command << \"json.arrinsert\") << key) << path) << index.to_s\nvalues.each do |value|\n  command << value.to_json\nend\n@redis.run(command)\n"}},{"html_id":"arrlen(key:String,path:String)-instance-method","name":"arrlen","doc":"Get the number of elements in the array located at the JSONPath in `key`\n\n```\nredis.json.arrlen \"posts:#{id}\", \".tags\"\n# => 4\n```","summary":"<p>Get the number of elements in the array located at the JSONPath in <code>key</code></p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(key : String, path : String)","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>)","location":{"filename":"src/json.cr","line_number":281,"url":null},"def":{"name":"arrlen","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"}],"visibility":"Public","body":"@redis.run({\"json.arrlen\", key, path})"}},{"html_id":"arrpop(key:String,path:String?=nil,*,index:Int=-1)-instance-method","name":"arrpop","doc":"Remove and return the value located at `index` (defaulting to the last\nelement) in the array located at the JSONPath in `key`\n\n```\nredis.json.arrlen \"posts:#{id}\", \".tags\"\n# => 4\n```","summary":"<p>Remove and return the value located at <code>index</code> (defaulting to the last element) in the array located at the JSONPath in <code>key</code></p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","default_value":"nil","external_name":"path","restriction":"String | ::Nil"},{"name":"","external_name":"","restriction":""},{"name":"index","default_value":"-1","external_name":"index","restriction":"Int"}],"args_string":"(key : String, path : String? = nil, *, index : Int = -1)","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, *, index : <a href=\"../Int.html\">Int</a> = <span class=\"n\">-1</span>)","location":{"filename":"src/json.cr","line_number":292,"url":null},"def":{"name":"arrpop","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","default_value":"nil","external_name":"path","restriction":"String | ::Nil"},{"name":"","external_name":"","restriction":""},{"name":"index","default_value":"-1","external_name":"index","restriction":"Int"}],"splat_index":2,"visibility":"Public","body":"command = {\"json.arrpop\", key}\nif path\n  command = command + {path}\n  if index != -1\n    command = command + {index.to_s}\n  end\nend\n@redis.run(command)\n"}},{"html_id":"arrpop(key:String,path:String,*,index:Int=-1,as:T.class):T?forallT-instance-method","name":"arrpop","doc":"Remove and return the value located at `index` (defaulting to the last\nelement) in the array located at the JSONPath in `key`\n\n```\nredis.json.arrlen \"posts:#{id}\", \".tags\"\n# => 4\n```\n\nNOTE: This method cannot be invoked on a pipeline or the transaction\nyielded to a `Redis::Connection#multi` block.","summary":"<p>Remove and return the value located at <code>index</code> (defaulting to the last element) in the array located at the JSONPath in <code>key</code></p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"index","default_value":"-1","external_name":"index","restriction":"Int"},{"name":"as","external_name":"as","restriction":"T.class"}],"args_string":"(key : String, path : String, *, index : Int = -1, as : T.class) : T? forall T","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>, *, index : <a href=\"../Int.html\">Int</a> = <span class=\"n\">-1</span>, as : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T? forall T","location":{"filename":"src/json.cr","line_number":312,"url":null},"def":{"name":"arrpop","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"index","default_value":"-1","external_name":"index","restriction":"Int"},{"name":"as","external_name":"as","restriction":"T.class"}],"splat_index":2,"return_type":"T | ::Nil","visibility":"Public","body":"if result = arrpop(key, path, index: index)\n  T.from_json(result.as(String))\nend"}},{"html_id":"get(key:String,path:String,astype:T.class):T?forallT-instance-method","name":"get","doc":"Get the value stored at the given JSONPath inside the given `key`,\ndeserializing the value into the type `T`. You can use this to deserialize\nyour custom `JSON::Serializable` objects.\n\n```\nstruct Order\n  include JSON::Serializable\n  getter id : UUID\n  getter customer_id : UUID\n  getter line_items : Array(LineItem)\nend\n\nstruct LineItem\n  include JSON::Serializable\n  getter product_id : UUID\n  getter quantity : Int32\n  getter unit_price_cents : Int32\nend\n\n# Get the Order at the root\nredis.json.get(\"order:#{id}\", \".\", as: Order)\n# Get the LineItems at the `.line_items` JSONPath\n# Note the `$` at the beginning to make it an array\nredis.json.get(\"order:#{id}\", \"$.line_items\", as: Array(LineItem))\n# Get only the `product_id` properties of all the `line_items`\nredis.json.get(\"order:#{id}\", \"$.line_items..product_id\", as: Array(UUID))\n```\n\nNOTE: This method _cannot_ be used in a pipeline or `Redis::Connection#multi`\nblock because it operates on the value returned from the Redis server\ninside the method, which isn't possible when using pipelines or `multi`.","summary":"<p>Get the value stored at the given JSONPath inside the given <code>key</code>, deserializing the value into the type <code>T</code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"type","external_name":"as","restriction":"T.class"}],"args_string":"(key : String, path : String, as type : T.class) : T? forall T","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>, as type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T? forall T","location":{"filename":"src/json.cr","line_number":138,"url":null},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"type","external_name":"as","restriction":"T.class"}],"return_type":"T | ::Nil","visibility":"Public","body":"if result = @redis.run({\"json.get\", key, path})\n  T.from_json(result.as(String))\nend"}},{"html_id":"get(key:String,path:String)-instance-method","name":"get","doc":"Get the raw JSON string representation at the given `key` nested at the\ngiven JSONPath.\n\n```\nemail = redis.json.get(\"user:#{id}\", \".email\").as(String)\n# => \"me@example.com\"\n```","summary":"<p>Get the raw JSON string representation at the given <code>key</code> nested at the given JSONPath.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(key : String, path : String)","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>)","location":{"filename":"src/json.cr","line_number":84,"url":null},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"}],"visibility":"Public","body":"@redis.run({\"json.get\", key, path})"}},{"html_id":"get(key:String,paths:Array(String),astype:T.class=::JSON::Any)forallT-instance-method","name":"get","doc":"Get the values stored at the specifed JSONPaths, deserializing them into\nthe specified type as values in a `Hash`.\n\n```\nif result = redis.json.get(\"posts:#{id}\", %w[title tags], as: String | Array(String))\n  result         # => {\"title\" => \"JSON with Redis\", tags: [\"redis\", \"json\", \"crystal\"]}\n  typeof(result) # => Hash(String, String | Array(String))\nend\n```\n\nNOTE: This method _cannot_ be used in a pipeline or `Redis::Connection#multi`\nblock because it operates on the value returned from the Redis server,\nwhich isn't a thing when using pipelines or `multi`.","summary":"<p>Get the values stored at the specifed JSONPaths, deserializing them into the specified type as values in a <code>Hash</code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"paths","external_name":"paths","restriction":"Array(String)"},{"name":"type","default_value":"::JSON::Any","external_name":"as","restriction":"T.class"}],"args_string":"(key : String, paths : Array(String), as type : T.class = ::JSON::Any) forall T","args_html":"(key : <a href=\"../String.html\">String</a>, paths : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), as type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">::</span><span class=\"t\">JSON</span><span class=\"t\">::</span><span class=\"t\">Any</span>) forall T","location":{"filename":"src/json.cr","line_number":101,"url":null},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"paths","external_name":"paths","restriction":"Array(String)"},{"name":"type","default_value":"::JSON::Any","external_name":"as","restriction":"T.class"}],"visibility":"Public","body":"if result = @redis.run([\"json.get\", key] + paths)\n  Hash(String, T).from_json(result.as(String))\nend"}},{"html_id":"get(key:String)-instance-method","name":"get","doc":"Get the raw JSON string at the specified `key`","summary":"<p>Get the raw JSON string at the specified <code>key</code></p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/json.cr","line_number":73,"url":null},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"@redis.run({\"json.get\", key})"}},{"html_id":"mget(keys:Array(String),path:String,astype:T.class):Array(T?)forallT-instance-method","name":"mget","doc":"Get the values for all `keys` at the specified JSONPaths.\n\nNOTE: This method _cannot_ be used in a pipeline or `Redis::Connection#multi`\nblock because it operates on the value returned from the Redis server\ninside the method, which isn't possible when using pipelines or `multi`.\nNOTE: If you are using a cluster, the `keys` _must_ all be on the same\nshard, or you may only get some of them back with this method. When using\n`mget` in a cluster, you'll most likely want to use subhashed keys (with\n`{}` around the same part of the name) to ensure all keys are on the same\nshard.","summary":"<p>Get the values for all <code>keys</code> at the specified JSONPaths.</p>","abstract":false,"args":[{"name":"keys","external_name":"keys","restriction":"Array(String)"},{"name":"path","external_name":"path","restriction":"String"},{"name":"type","external_name":"as","restriction":"T.class"}],"args_string":"(keys : Array(String), path : String, as type : T.class) : Array(T?) forall T","args_html":"(keys : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), path : <a href=\"../String.html\">String</a>, as type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : <a href=\"../Array.html\">Array</a>(T?) forall T","location":{"filename":"src/json.cr","line_number":154,"url":null},"def":{"name":"mget","args":[{"name":"keys","external_name":"keys","restriction":"Array(String)"},{"name":"path","external_name":"path","restriction":"String"},{"name":"type","external_name":"as","restriction":"T.class"}],"return_type":"Array(T | ::Nil)","visibility":"Public","body":"if result = @redis.run(([\"json.mget\"] + keys) + [path])\n  (result.as(Array)).map do |value|\n    if value\n      T.from_json(value.as(String))\n    end\n  end\nelse\n  raise(\"lolwut?\")\nend"}},{"html_id":"numincrby(key:String,path:String,count:String|Int,astype:T.class):TforallT-instance-method","name":"numincrby","doc":"Increment the number at the specified JSONPath\n\n```\nredis.json.numincrby \"product:#{id}\", \".purchase_count\", 1, as: Int64\n# => 2\n```\n\nIf `key` exists and an incrementable number exists at the specified\nJSONPath (including the possibility of incrementing multiple numbers if\nthe JSONPath resolves to multiple numeric values), then this method\nreturns a value of type `T`. If the JSONPath resolves to multiple values\n(for example, it begins with \"$\" or is recursive), you will need to\nspecify that it can be an `Array` of that type.","summary":"<p>Increment the number at the specified JSONPath</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"count","external_name":"count","restriction":"String | Int"},{"name":"type","external_name":"as","restriction":"T.class"}],"args_string":"(key : String, path : String, count : String | Int, as type : T.class) : T forall T","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>, count : <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a>, as type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","location":{"filename":"src/json.cr","line_number":188,"url":null},"def":{"name":"numincrby","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"count","external_name":"count","restriction":"String | Int"},{"name":"type","external_name":"as","restriction":"T.class"}],"return_type":"T","visibility":"Public","body":"T.from_json((numincrby(key, path, count)).as(String))"}},{"html_id":"numincrby(key:String,path:String,count:String|Int)-instance-method","name":"numincrby","doc":"Increment the number at the specified JSONPath\n\n```\nredis.json.numincrby \"product:#{id}\", \".purchase_count\", 1\n```","summary":"<p>Increment the number at the specified JSONPath</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"count","external_name":"count","restriction":"String | Int"}],"args_string":"(key : String, path : String, count : String | Int)","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>, count : <a href=\"../String.html\">String</a> | <a href=\"../Int.html\">Int</a>)","location":{"filename":"src/json.cr","line_number":171,"url":null},"def":{"name":"numincrby","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"count","external_name":"count","restriction":"String | Int"}],"visibility":"Public","body":"@redis.run({\"json.numincrby\", key, path, count.to_s})"}},{"html_id":"set(key:String,path:String,value,*,nx=false,xx=false):Nil-instance-method","name":"set","doc":"Set the given key to the given JSON `value`. The `value` will have\n`to_json` called on it automatically. The `nx` and `xx` arguments are\nidentical to `Redis::Commands#set`.\n\nStore a user at the root JSONPath (`.`) of the specified key:\n\n```\nstruct User\n  include JSON::Serializable\n\n  getter id : UUID\n  getter name : String\n  getter email : String\nend\n\nredis.json.set \"user:#{user.id}\", \".\", user\n```\n\nUpdate (with `xx` so we ensure the key exists) a user's email by setting\nthe new email value at the `.email` JSONPath:\n\n```\nredis.json.set \"user:#{id}\", \".email\", new_email, xx: true\n```","summary":"<p>Set the given key to the given JSON <code>value</code>.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"value","external_name":"value","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"nx","default_value":"false","external_name":"nx","restriction":""},{"name":"xx","default_value":"false","external_name":"xx","restriction":""}],"args_string":"(key : String, path : String, value, *, nx = false, xx = false) : Nil","args_html":"(key : <a href=\"../String.html\">String</a>, path : <a href=\"../String.html\">String</a>, value, *, nx = <span class=\"n\">false</span>, xx = <span class=\"n\">false</span>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/json.cr","line_number":64,"url":null},"def":{"name":"set","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"path","external_name":"path","restriction":"String"},{"name":"value","external_name":"value","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"nx","default_value":"false","external_name":"nx","restriction":""},{"name":"xx","default_value":"false","external_name":"xx","restriction":""}],"splat_index":3,"return_type":"Nil","visibility":"Public","body":"command = {\"json.set\", key, path, value.to_json}\nif nx\n  command = command + {\"nx\"}\nend\nif xx\n  command = command + {\"xx\"}\nend\n@redis.run(command)\n"}}]},{"html_id":"redis/Redis/NoGroup","path":"Redis/NoGroup.html","kind":"class","full_name":"Redis::NoGroup","name":"NoGroup","abstract":false,"superclass":{"html_id":"redis/Redis/Error","kind":"class","full_name":"Redis::Error","name":"Error"},"ancestors":[{"html_id":"redis/Redis/Error","kind":"class","full_name":"Redis::Error","name":"Error"},{"html_id":"redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/errors.cr","line_number":7,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"}},{"html_id":"redis/Redis/Parser","path":"Redis/Parser.html","kind":"struct","full_name":"Redis::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/parser.cr","line_number":5,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"constructors":[{"html_id":"new(io:IO)-class-method","name":"new","doc":"Initialize a parser to read from the given IO","summary":"<p>Initialize a parser to read from the given IO</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/parser.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"_ = allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"read:Value-instance-method","name":"read","doc":"Read a `Redis::Value` from the parser's `IO`\n\nExample:\n\n```\nio = IO::Memory.new\nio << \"$3\\r\\n\"\nio << \"foo\\r\\n\"\nio.rewind\n\nParser.new(io).read # => \"foo\"\n```","summary":"<p>Read a <code><a href=\"../Redis/Value.html\">Redis::Value</a></code> from the parser's <code>IO</code></p>","abstract":false,"location":{"filename":"src/parser.cr","line_number":22,"url":null},"def":{"name":"read","return_type":"Value","visibility":"Public","body":"case byte_marker = @io.read_byte\nwhen ':'\n  parse_int.tap do\n    @io.skip(2)\n  end\nwhen '*'\n  length = parse_int\n  @io.skip(2)\n  if length >= 0\n    Array.new(length) do\n      read\n    end\n  end\nwhen '$'\n  length = parse_int\n  @io.skip(2)\n  if length >= 0\n    value = @io.read_string(length)\n    @io.skip(2)\n    value\n  end\nwhen '+'\n  @io.read_line\nwhen '-'\n  type, message = @io.read_line.split(' ', 2)\n  raise(ERROR_MAP[type].new(\"#{type} #{message}\"))\nwhen nil\n  raise(IO::Error.new(\"Connection closed\"))\nelse\n  raise(\"Invalid byte marker: #{byte_marker.chr.inspect}\")\nend"}}]},{"html_id":"redis/Redis/Pipeline","path":"Redis/Pipeline.html","kind":"class","full_name":"Redis::Pipeline","name":"Pipeline","abstract":false,"superclass":{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"redis/Redis/Commands","kind":"module","full_name":"Redis::Commands","name":"Commands"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/pipeline.cr","line_number":6,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"redis/Redis/Commands","kind":"module","full_name":"Redis::Commands","name":"Commands"}],"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"constructors":[{"html_id":"new(connection:Connection)-class-method","name":"new","doc":"Wraps a connection so that our `run` and `commit` methods can execute against it.","summary":"<p>Wraps a connection so that our <code><a href=\"../Redis/Pipeline.html#run%28command%29-instance-method\">#run</a></code> and <code><a href=\"../Redis/Pipeline.html#commit-instance-method\">#commit</a></code> methods can execute against it.</p>","abstract":false,"args":[{"name":"connection","external_name":"connection","restriction":"Connection"}],"args_string":"(connection : Connection)","args_html":"(connection : <a href=\"../Redis/Connection.html\">Connection</a>)","location":{"filename":"src/pipeline.cr","line_number":12,"url":null},"def":{"name":"new","args":[{"name":"connection","external_name":"connection","restriction":"Connection"}],"visibility":"Public","body":"_ = allocate\n_.initialize(connection)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"commit-instance-method","name":"commit","doc":"Read all of the return values from all of the commands we've sent to Redis\nand resolve all `Redis::Future`s with them in the order they were sent.","summary":"<p>Read all of the return values from all of the commands we've sent to Redis and resolve all <code><a href=\"../Redis/Future.html\">Redis::Future</a></code>s with them in the order they were sent.</p>","abstract":false,"location":{"filename":"src/pipeline.cr","line_number":26,"url":null},"def":{"name":"commit","visibility":"Public","body":"@futures.map(&.resolve(@connection.read))"}},{"html_id":"run(command)-instance-method","name":"run","doc":"The `run` method is required by the `Commands` mixin. When you run a Redis\ncommand, it gets pushed to the server via this method.","summary":"<p>The <code><a href=\"../Redis/Pipeline.html#run%28command%29-instance-method\">#run</a></code> method is required by the <code><a href=\"../Redis/Commands.html\">Commands</a></code> mixin.</p>","abstract":false,"args":[{"name":"command","external_name":"command","restriction":""}],"args_string":"(command)","args_html":"(command)","location":{"filename":"src/pipeline.cr","line_number":17,"url":null},"def":{"name":"run","args":[{"name":"command","external_name":"command","restriction":""}],"visibility":"Public","body":"@connection.encode(command)\nfuture = Future.new\n@futures << future\nfuture\n"}}]},{"html_id":"redis/Redis/Streaming","path":"Redis/Streaming.html","kind":"module","full_name":"Redis::Streaming","name":"Streaming","abstract":false,"locations":[{"filename":"src/streaming.cr","line_number":4,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"types":[{"html_id":"redis/Redis/Streaming/Message","path":"Redis/Streaming/Message.html","kind":"struct","full_name":"Redis::Streaming::Message","name":"Message","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/streaming.cr","line_number":92,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Streaming","kind":"module","full_name":"Redis::Streaming","name":"Streaming"},"constructors":[{"html_id":"new(message:Array)-class-method","name":"new","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"Array"}],"args_string":"(message : Array)","args_html":"(message : <a href=\"../../Array.html\">Array</a>)","location":{"filename":"src/streaming.cr","line_number":95,"url":null},"def":{"name":"new","args":[{"name":"message","external_name":"message","restriction":"Array"}],"visibility":"Public","body":"_ = allocate\n_.initialize(message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"id:String-instance-method","name":"id","abstract":false,"location":{"filename":"src/streaming.cr","line_number":93,"url":null},"def":{"name":"id","visibility":"Public","body":"@id"}},{"html_id":"values:Hash(String,String)-instance-method","name":"values","abstract":false,"location":{"filename":"src/streaming.cr","line_number":93,"url":null},"def":{"name":"values","visibility":"Public","body":"@values"}}]},{"html_id":"redis/Redis/Streaming/XAutoClaimResponse","path":"Redis/Streaming/XAutoClaimResponse.html","kind":"struct","full_name":"Redis::Streaming::XAutoClaimResponse","name":"XAutoClaimResponse","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/streaming.cr","line_number":77,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Streaming","kind":"module","full_name":"Redis::Streaming","name":"Streaming"},"constructors":[{"html_id":"new(response:Array)-class-method","name":"new","abstract":false,"args":[{"name":"response","external_name":"response","restriction":"Array"}],"args_string":"(response : Array)","args_html":"(response : <a href=\"../../Array.html\">Array</a>)","location":{"filename":"src/streaming.cr","line_number":81,"url":null},"def":{"name":"new","args":[{"name":"response","external_name":"response","restriction":"Array"}],"visibility":"Public","body":"_ = allocate\n_.initialize(response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"id:String-instance-method","name":"id","abstract":false,"location":{"filename":"src/streaming.cr","line_number":78,"url":null},"def":{"name":"id","return_type":"String","visibility":"Public","body":"@id"}},{"html_id":"messages:Array(Message)-instance-method","name":"messages","abstract":false,"location":{"filename":"src/streaming.cr","line_number":79,"url":null},"def":{"name":"messages","return_type":"Array(Message)","visibility":"Public","body":"@messages"}}]},{"html_id":"redis/Redis/Streaming/XPendingBaseResponse","path":"Redis/Streaming/XPendingBaseResponse.html","kind":"struct","full_name":"Redis::Streaming::XPendingBaseResponse","name":"XPendingBaseResponse","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/streaming.cr","line_number":5,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Streaming","kind":"module","full_name":"Redis::Streaming","name":"Streaming"},"constructors":[{"html_id":"new(response:Array)-class-method","name":"new","abstract":false,"args":[{"name":"response","external_name":"response","restriction":"Array"}],"args_string":"(response : Array)","args_html":"(response : <a href=\"../../Array.html\">Array</a>)","location":{"filename":"src/streaming.cr","line_number":8,"url":null},"def":{"name":"new","args":[{"name":"response","external_name":"response","restriction":"Array"}],"visibility":"Public","body":"_ = allocate\n_.initialize(response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"count:Int64-instance-method","name":"count","abstract":false,"location":{"filename":"src/streaming.cr","line_number":6,"url":null},"def":{"name":"count","visibility":"Public","body":"@count"}},{"html_id":"data:Array(Data)-instance-method","name":"data","abstract":false,"location":{"filename":"src/streaming.cr","line_number":6,"url":null},"def":{"name":"data","return_type":"Array(Data)","visibility":"Public","body":"@data"}},{"html_id":"earliest:String-instance-method","name":"earliest","abstract":false,"location":{"filename":"src/streaming.cr","line_number":6,"url":null},"def":{"name":"earliest","visibility":"Public","body":"@earliest"}},{"html_id":"latest:String-instance-method","name":"latest","abstract":false,"location":{"filename":"src/streaming.cr","line_number":6,"url":null},"def":{"name":"latest","visibility":"Public","body":"@latest"}}],"types":[{"html_id":"redis/Redis/Streaming/XPendingBaseResponse/Data","path":"Redis/Streaming/XPendingBaseResponse/Data.html","kind":"struct","full_name":"Redis::Streaming::XPendingBaseResponse::Data","name":"Data","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/streaming.cr","line_number":21,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Streaming/XPendingBaseResponse","kind":"struct","full_name":"Redis::Streaming::XPendingBaseResponse","name":"XPendingBaseResponse"},"constructors":[{"html_id":"new(consumer:String,pending_count:Int64)-class-method","name":"new","abstract":false,"args":[{"name":"consumer","external_name":"consumer","restriction":"String"},{"name":"pending_count","external_name":"pending_count","restriction":"Int64"}],"args_string":"(consumer : String, pending_count : Int64)","args_html":"(consumer : <a href=\"../../../String.html\">String</a>, pending_count : <a href=\"../../../Int64.html\">Int64</a>)","location":{"filename":"src/streaming.cr","line_number":21,"url":null},"def":{"name":"new","args":[{"name":"consumer","external_name":"consumer","restriction":"String"},{"name":"pending_count","external_name":"pending_count","restriction":"Int64"}],"visibility":"Public","body":"_ = allocate\n_.initialize(consumer, pending_count)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/streaming.cr","line_number":21,"url":null},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@consumer.clone, @pending_count.clone)"}},{"html_id":"consumer:String-instance-method","name":"consumer","abstract":false,"def":{"name":"consumer","return_type":"String","visibility":"Public","body":"@consumer"}},{"html_id":"copy_with(consumer_consumer=@consumer,pending_count_pending_count=@pending_count)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_consumer","default_value":"@consumer","external_name":"consumer","restriction":""},{"name":"_pending_count","default_value":"@pending_count","external_name":"pending_count","restriction":""}],"args_string":"(consumer _consumer = @consumer, pending_count _pending_count = @pending_count)","args_html":"(consumer _consumer = @consumer, pending_count _pending_count = @pending_count)","location":{"filename":"src/streaming.cr","line_number":21,"url":null},"def":{"name":"copy_with","args":[{"name":"_consumer","default_value":"@consumer","external_name":"consumer","restriction":""},{"name":"_pending_count","default_value":"@pending_count","external_name":"pending_count","restriction":""}],"visibility":"Public","body":"self.class.new(_consumer, _pending_count)"}},{"html_id":"pending_count:Int64-instance-method","name":"pending_count","abstract":false,"def":{"name":"pending_count","return_type":"Int64","visibility":"Public","body":"@pending_count"}}]}]},{"html_id":"redis/Redis/Streaming/XPendingExtendedResponse","path":"Redis/Streaming/XPendingExtendedResponse.html","kind":"struct","full_name":"Redis::Streaming::XPendingExtendedResponse","name":"XPendingExtendedResponse","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/streaming.cr","line_number":24,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Streaming","kind":"module","full_name":"Redis::Streaming","name":"Streaming"},"constructors":[{"html_id":"new(data:Array,now:Time=Time.utc)-class-method","name":"new","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Array"},{"name":"now","default_value":"Time.utc","external_name":"now","restriction":"Time"}],"args_string":"(data : Array, now : Time = Time.utc)","args_html":"(data : <a href=\"../../Array.html\">Array</a>, now : <a href=\"../../Time.html\">Time</a> = <span class=\"t\">Time</span>.utc)","location":{"filename":"src/streaming.cr","line_number":27,"url":null},"def":{"name":"new","args":[{"name":"data","external_name":"data","restriction":"Array"},{"name":"now","default_value":"Time.utc","external_name":"now","restriction":"Time"}],"visibility":"Public","body":"_ = allocate\n_.initialize(data, now)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"messages:Array(MessageData)-instance-method","name":"messages","abstract":false,"location":{"filename":"src/streaming.cr","line_number":25,"url":null},"def":{"name":"messages","return_type":"Array(MessageData)","visibility":"Public","body":"@messages"}}],"types":[{"html_id":"redis/Redis/Streaming/XPendingExtendedResponse/MessageData","path":"Redis/Streaming/XPendingExtendedResponse/MessageData.html","kind":"struct","full_name":"Redis::Streaming::XPendingExtendedResponse::MessageData","name":"MessageData","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/streaming.cr","line_number":40,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Streaming/XPendingExtendedResponse","kind":"struct","full_name":"Redis::Streaming::XPendingExtendedResponse","name":"XPendingExtendedResponse"},"constructors":[{"html_id":"new(id,consumer,last_delivered_at,delivery_count)-class-method","name":"new","abstract":false,"args":[{"name":"id","external_name":"id","restriction":""},{"name":"consumer","external_name":"consumer","restriction":""},{"name":"last_delivered_at","external_name":"last_delivered_at","restriction":""},{"name":"delivery_count","external_name":"delivery_count","restriction":""}],"args_string":"(id, consumer, last_delivered_at, delivery_count)","args_html":"(id, consumer, last_delivered_at, delivery_count)","location":{"filename":"src/streaming.cr","line_number":46,"url":null},"def":{"name":"new","args":[{"name":"id","external_name":"id","restriction":""},{"name":"consumer","external_name":"consumer","restriction":""},{"name":"last_delivered_at","external_name":"last_delivered_at","restriction":""},{"name":"delivery_count","external_name":"delivery_count","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(id, consumer, last_delivered_at, delivery_count)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"age-instance-method","name":"age","abstract":false,"location":{"filename":"src/streaming.cr","line_number":49,"url":null},"def":{"name":"age","visibility":"Public","body":"Time.utc - last_delivered_at"}},{"html_id":"consumer:String-instance-method","name":"consumer","abstract":false,"location":{"filename":"src/streaming.cr","line_number":42,"url":null},"def":{"name":"consumer","return_type":"String","visibility":"Public","body":"@consumer"}},{"html_id":"delivery_count:Int64-instance-method","name":"delivery_count","abstract":false,"location":{"filename":"src/streaming.cr","line_number":44,"url":null},"def":{"name":"delivery_count","return_type":"Int64","visibility":"Public","body":"@delivery_count"}},{"html_id":"id:String-instance-method","name":"id","abstract":false,"location":{"filename":"src/streaming.cr","line_number":41,"url":null},"def":{"name":"id","return_type":"String","visibility":"Public","body":"@id"}},{"html_id":"last_delivered_at:Time-instance-method","name":"last_delivered_at","abstract":false,"location":{"filename":"src/streaming.cr","line_number":43,"url":null},"def":{"name":"last_delivered_at","return_type":"Time","visibility":"Public","body":"@last_delivered_at"}}]}]},{"html_id":"redis/Redis/Streaming/XReadGroupResponse","path":"Redis/Streaming/XReadGroupResponse.html","kind":"struct","full_name":"Redis::Streaming::XReadGroupResponse","name":"XReadGroupResponse","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/streaming.cr","line_number":55,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Streaming","kind":"module","full_name":"Redis::Streaming","name":"Streaming"},"constructors":[{"html_id":"new(response:Array(Redis::Value))-class-method","name":"new","abstract":false,"args":[{"name":"response","external_name":"response","restriction":"Array(Redis::Value)"}],"args_string":"(response : Array(Redis::Value))","args_html":"(response : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Redis/Value.html\">Redis::Value</a>))","location":{"filename":"src/streaming.cr","line_number":58,"url":null},"def":{"name":"new","args":[{"name":"response","external_name":"response","restriction":"Array(Redis::Value)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"results:Array(Redis::Streaming::XReadGroupResponse::Result)-instance-method","name":"results","abstract":false,"location":{"filename":"src/streaming.cr","line_number":56,"url":null},"def":{"name":"results","visibility":"Public","body":"@results"}}],"types":[{"html_id":"redis/Redis/Streaming/XReadGroupResponse/Result","path":"Redis/Streaming/XReadGroupResponse/Result.html","kind":"struct","full_name":"Redis::Streaming::XReadGroupResponse::Result","name":"Result","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/streaming.cr","line_number":67,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/Streaming/XReadGroupResponse","kind":"struct","full_name":"Redis::Streaming::XReadGroupResponse","name":"XReadGroupResponse"},"constructors":[{"html_id":"new(key:String,messages:Array)-class-method","name":"new","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"messages","external_name":"messages","restriction":"Array"}],"args_string":"(key : String, messages : Array)","args_html":"(key : <a href=\"../../../String.html\">String</a>, messages : <a href=\"../../../Array.html\">Array</a>)","location":{"filename":"src/streaming.cr","line_number":71,"url":null},"def":{"name":"new","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"messages","external_name":"messages","restriction":"Array"}],"visibility":"Public","body":"_ = allocate\n_.initialize(key, messages)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"key:String-instance-method","name":"key","abstract":false,"location":{"filename":"src/streaming.cr","line_number":69,"url":null},"def":{"name":"key","return_type":"String","visibility":"Public","body":"@key"}},{"html_id":"messages:Array(Message)-instance-method","name":"messages","abstract":false,"location":{"filename":"src/streaming.cr","line_number":68,"url":null},"def":{"name":"messages","return_type":"Array(Message)","visibility":"Public","body":"@messages"}}]}]}]},{"html_id":"redis/Redis/TimeSeries","path":"Redis/TimeSeries.html","kind":"struct","full_name":"Redis::TimeSeries(Runnable)","name":"TimeSeries","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/time_series.cr","line_number":15,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"doc":"Time-series support for Redis using the\n[RedisTimeSeries module](https://oss.redis.com/redistimeseries/).\n\n```\nrequire \"redis\"\nrequire \"redis/time_series\"\n\n\n```","summary":"<p>Time-series support for Redis using the <a href=\"https://oss.redis.com/redistimeseries/\">RedisTimeSeries module</a>.</p>\n<p><span class=\"flag lime\">EXPERIMENTAL</span>  Support for the Redis TimeSeries module is subject to change.</p>","instance_methods":[{"html_id":"add(key:String,value:Float64|Int64,retention:Time::Span?=nil,encoding:Encoding?=nil,chunk_size:Int64?=nil,on_duplicateduplicate_policy:DuplicatePolicy?=nil,labels:Hash(String,String|Int32|Int64)?=nil)-instance-method","name":"add","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"Float64 | Int64"},{"name":"retention","default_value":"nil","external_name":"retention","restriction":"Time::Span | ::Nil"},{"name":"encoding","default_value":"nil","external_name":"encoding","restriction":"Encoding | ::Nil"},{"name":"chunk_size","default_value":"nil","external_name":"chunk_size","restriction":"Int64 | ::Nil"},{"name":"duplicate_policy","default_value":"nil","external_name":"on_duplicate","restriction":"DuplicatePolicy | ::Nil"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Hash(String, String | Int32 | Int64) | ::Nil"}],"args_string":"(key : String, value : Float64 | Int64, retention : Time::Span? = nil, encoding : Encoding? = nil, chunk_size : Int64? = nil, on_duplicate duplicate_policy : DuplicatePolicy? = nil, labels : Hash(String, String | Int32 | Int64)? = nil)","args_html":"(key : <a href=\"../String.html\">String</a>, value : Float64 | <a href=\"../Int64.html\">Int64</a>, retention : Time::Span? = <span class=\"n\">nil</span>, encoding : <a href=\"../Redis/TimeSeries/Encoding.html\">Encoding</a>? = <span class=\"n\">nil</span>, chunk_size : <a href=\"../Int64.html\">Int64</a>? = <span class=\"n\">nil</span>, on_duplicate duplicate_policy : <a href=\"../Redis/TimeSeries/DuplicatePolicy.html\">DuplicatePolicy</a>? = <span class=\"n\">nil</span>, labels : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a> | <a href=\"../Int32.html\">Int32</a> | <a href=\"../Int64.html\">Int64</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/time_series.cr","line_number":53,"url":null},"def":{"name":"add","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"Float64 | Int64"},{"name":"retention","default_value":"nil","external_name":"retention","restriction":"Time::Span | ::Nil"},{"name":"encoding","default_value":"nil","external_name":"encoding","restriction":"Encoding | ::Nil"},{"name":"chunk_size","default_value":"nil","external_name":"chunk_size","restriction":"Int64 | ::Nil"},{"name":"duplicate_policy","default_value":"nil","external_name":"on_duplicate","restriction":"DuplicatePolicy | ::Nil"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Hash(String, String | Int32 | Int64) | ::Nil"}],"visibility":"Public","body":"command = Array(String).new(initial_capacity: 12 + (labels.try(&.size) || 0))\n(((command << \"ts.add\") << key) << \"*\") << value.to_s\nif retention\n  (command << \"retention\") << retention.total_milliseconds.to_i.to_s\nend\nif encoding\n  (command << \"encoding\") << encoding.to_s\nend\nif chunk_size\n  (command << \"chunk_size\") << chunk_size.to_s\nend\nif duplicate_policy\n  (command << \"duplicate_policy\") << duplicate_policy.to_s\nend\nif labels && labels.any?\n  command << \"labels\"\n  labels.each do |key, value|\n    (command << key) << value.to_s\n  end\nend\n@redis.run(command)\n"}},{"html_id":"add(key:String,timestamp:Time,value:Float64|Int64,retention:Time::Span?=nil,encoding:Encoding?=nil,chunk_size:Int64?=nil,on_duplicateduplicate_policy:DuplicatePolicy?=nil,labels:Hash(String,String|Int32|Int64)?=nil)-instance-method","name":"add","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"timestamp","external_name":"timestamp","restriction":"Time"},{"name":"value","external_name":"value","restriction":"Float64 | Int64"},{"name":"retention","default_value":"nil","external_name":"retention","restriction":"Time::Span | ::Nil"},{"name":"encoding","default_value":"nil","external_name":"encoding","restriction":"Encoding | ::Nil"},{"name":"chunk_size","default_value":"nil","external_name":"chunk_size","restriction":"Int64 | ::Nil"},{"name":"duplicate_policy","default_value":"nil","external_name":"on_duplicate","restriction":"DuplicatePolicy | ::Nil"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Hash(String, String | Int32 | Int64) | ::Nil"}],"args_string":"(key : String, timestamp : Time, value : Float64 | Int64, retention : Time::Span? = nil, encoding : Encoding? = nil, chunk_size : Int64? = nil, on_duplicate duplicate_policy : DuplicatePolicy? = nil, labels : Hash(String, String | Int32 | Int64)? = nil)","args_html":"(key : <a href=\"../String.html\">String</a>, timestamp : <a href=\"../Time.html\">Time</a>, value : Float64 | <a href=\"../Int64.html\">Int64</a>, retention : Time::Span? = <span class=\"n\">nil</span>, encoding : <a href=\"../Redis/TimeSeries/Encoding.html\">Encoding</a>? = <span class=\"n\">nil</span>, chunk_size : <a href=\"../Int64.html\">Int64</a>? = <span class=\"n\">nil</span>, on_duplicate duplicate_policy : <a href=\"../Redis/TimeSeries/DuplicatePolicy.html\">DuplicatePolicy</a>? = <span class=\"n\">nil</span>, labels : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a> | <a href=\"../Int32.html\">Int32</a> | <a href=\"../Int64.html\">Int64</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/time_series.cr","line_number":87,"url":null},"def":{"name":"add","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"timestamp","external_name":"timestamp","restriction":"Time"},{"name":"value","external_name":"value","restriction":"Float64 | Int64"},{"name":"retention","default_value":"nil","external_name":"retention","restriction":"Time::Span | ::Nil"},{"name":"encoding","default_value":"nil","external_name":"encoding","restriction":"Encoding | ::Nil"},{"name":"chunk_size","default_value":"nil","external_name":"chunk_size","restriction":"Int64 | ::Nil"},{"name":"duplicate_policy","default_value":"nil","external_name":"on_duplicate","restriction":"DuplicatePolicy | ::Nil"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Hash(String, String | Int32 | Int64) | ::Nil"}],"visibility":"Public","body":"command = Array(String).new(initial_capacity: 13 + (labels.try(&.size) || 0))\n(((command << \"ts.add\") << key) << timestamp.to_unix_ms.to_s) << value.to_s\nif retention\n  (command << \"retention\") << retention.total_milliseconds.to_i.to_s\nend\nif encoding\n  (command << \"encoding\") << encoding.to_s\nend\nif chunk_size\n  (command << \"chunk_size\") << chunk_size.to_s\nend\nif duplicate_policy\n  (command << \"duplicate_policy\") << duplicate_policy.to_s\nend\nif labels && labels.any?\n  command << \"labels\"\n  labels.each do |key, value|\n    (command << key) << value.to_s\n  end\nend\n@redis.run(command)\n"}},{"html_id":"create(key:String,retention:Time::Span?=nil,encoding:Encoding?=nil,chunk_size:Int64?=nil,duplicate_policy:DuplicatePolicy?=nil,labels:Hash(String,String|Int32|Int64)?=nil)-instance-method","name":"create","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"retention","default_value":"nil","external_name":"retention","restriction":"Time::Span | ::Nil"},{"name":"encoding","default_value":"nil","external_name":"encoding","restriction":"Encoding | ::Nil"},{"name":"chunk_size","default_value":"nil","external_name":"chunk_size","restriction":"Int64 | ::Nil"},{"name":"duplicate_policy","default_value":"nil","external_name":"duplicate_policy","restriction":"DuplicatePolicy | ::Nil"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Hash(String, String | Int32 | Int64) | ::Nil"}],"args_string":"(key : String, retention : Time::Span? = nil, encoding : Encoding? = nil, chunk_size : Int64? = nil, duplicate_policy : DuplicatePolicy? = nil, labels : Hash(String, String | Int32 | Int64)? = nil)","args_html":"(key : <a href=\"../String.html\">String</a>, retention : Time::Span? = <span class=\"n\">nil</span>, encoding : <a href=\"../Redis/TimeSeries/Encoding.html\">Encoding</a>? = <span class=\"n\">nil</span>, chunk_size : <a href=\"../Int64.html\">Int64</a>? = <span class=\"n\">nil</span>, duplicate_policy : <a href=\"../Redis/TimeSeries/DuplicatePolicy.html\">DuplicatePolicy</a>? = <span class=\"n\">nil</span>, labels : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a> | <a href=\"../Int32.html\">Int32</a> | <a href=\"../Int64.html\">Int64</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/time_series.cr","line_number":20,"url":null},"def":{"name":"create","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"retention","default_value":"nil","external_name":"retention","restriction":"Time::Span | ::Nil"},{"name":"encoding","default_value":"nil","external_name":"encoding","restriction":"Encoding | ::Nil"},{"name":"chunk_size","default_value":"nil","external_name":"chunk_size","restriction":"Int64 | ::Nil"},{"name":"duplicate_policy","default_value":"nil","external_name":"duplicate_policy","restriction":"DuplicatePolicy | ::Nil"},{"name":"labels","default_value":"nil","external_name":"labels","restriction":"Hash(String, String | Int32 | Int64) | ::Nil"}],"visibility":"Public","body":"command = Array(String).new(initial_capacity: 11 + (labels.try(&.size) || 0))\n(command << \"ts.create\") << key\nif retention\n  (command << \"retention\") << retention.total_milliseconds.to_i.to_s\nend\nif encoding\n  (command << \"encoding\") << encoding.to_s\nend\nif chunk_size\n  (command << \"chunk_size\") << chunk_size.to_s\nend\nif duplicate_policy\n  (command << \"duplicate_policy\") << duplicate_policy.to_s\nend\nif labels && labels.any?\n  command << \"labels\"\n  labels.each do |key, value|\n    (command << key) << value.to_s\n  end\nend\n@redis.run(command)\n"}},{"html_id":"info(key:String)-instance-method","name":"info","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/time_series.cr","line_number":137,"url":null},"def":{"name":"info","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"@redis.run({\"ts.info\", key})"}},{"html_id":"range(key:String,time_range:::Range(Time,Time),&:RangeOptions->)-instance-method","name":"range","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"time_range","external_name":"time_range","restriction":"::Range(Time, Time)"}],"args_string":"(key : String, time_range : ::Range(Time, Time), & : RangeOptions -> )","args_html":"(key : <a href=\"../String.html\">String</a>, time_range : ::Range(<a href=\"../Time.html\">Time</a>, <a href=\"../Time.html\">Time</a>), & : <a href=\"../Redis/TimeSeries/RangeOptions.html\">RangeOptions</a> -> )","location":{"filename":"src/time_series.cr","line_number":122,"url":null},"def":{"name":"range","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"time_range","external_name":"time_range","restriction":"::Range(Time, Time)"}],"yields":1,"block_arg":{"name":"","external_name":"","restriction":"(RangeOptions ->)"},"visibility":"Public","body":"command = Array(String).new(initial_capacity: 14)\noptions = RangeOptions.new\n(((command << \"ts.range\") << key) << time_range.begin.to_unix_ms.to_s) << time_range.end.to_unix_ms.to_s\nyield options\nif agg = options.aggregation\n  ((command << \"aggregation\") << agg.type.to_s) << agg.time_bucket.total_milliseconds.to_i.to_s\nend\n@redis.run(command)\n"}}],"types":[{"html_id":"redis/Redis/TimeSeries/DuplicatePolicy","path":"Redis/TimeSeries/DuplicatePolicy.html","kind":"enum","full_name":"Redis::TimeSeries::DuplicatePolicy","name":"DuplicatePolicy","abstract":false,"ancestors":[{"html_id":"redis/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/time_series.cr","line_number":181,"url":null}],"repository_name":"redis","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"BLOCK","name":"BLOCK","value":"0","doc":"An error will occur for any out-of-order sample","summary":"<p>An error will occur for any out-of-order sample</p>"},{"id":"FIRST","name":"FIRST","value":"1","doc":"Ignore the new value","summary":"<p>Ignore the new value</p>"},{"id":"LAST","name":"LAST","value":"2","doc":"Override with the latest value","summary":"<p>Override with the latest value</p>"},{"id":"MIN","name":"MIN","value":"3","doc":"Only override if the new value is lower than the existing value","summary":"<p>Only override if the new value is lower than the existing value</p>"},{"id":"MAX","name":"MAX","value":"4","doc":"Only override if the new value is higher than the existing value","summary":"<p>Only override if the new value is higher than the existing value</p>"},{"id":"SUM","name":"SUM","value":"5","doc":"If a previous sample exists, add the new sample to it so that the\nupdated value is equal to `previous + new`. If no previous sample\nexists, set the updated value equal to the new value.","summary":"<p>If a previous sample exists, add the new sample to it so that the updated value is equal to <code>previous + new</code>.</p>"}],"namespace":{"html_id":"redis/Redis/TimeSeries","kind":"struct","full_name":"Redis::TimeSeries(Runnable)","name":"TimeSeries"},"instance_methods":[{"html_id":"block?-instance-method","name":"block?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":183,"url":null},"def":{"name":"block?","visibility":"Public","body":"self == BLOCK"}},{"html_id":"first?-instance-method","name":"first?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":186,"url":null},"def":{"name":"first?","visibility":"Public","body":"self == FIRST"}},{"html_id":"last?-instance-method","name":"last?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":189,"url":null},"def":{"name":"last?","visibility":"Public","body":"self == LAST"}},{"html_id":"max?-instance-method","name":"max?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":195,"url":null},"def":{"name":"max?","visibility":"Public","body":"self == MAX"}},{"html_id":"min?-instance-method","name":"min?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":192,"url":null},"def":{"name":"min?","visibility":"Public","body":"self == MIN"}},{"html_id":"sum?-instance-method","name":"sum?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":200,"url":null},"def":{"name":"sum?","visibility":"Public","body":"self == SUM"}}]},{"html_id":"redis/Redis/TimeSeries/Encoding","path":"Redis/TimeSeries/Encoding.html","kind":"enum","full_name":"Redis::TimeSeries::Encoding","name":"Encoding","abstract":false,"ancestors":[{"html_id":"redis/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/time_series.cr","line_number":176,"url":null}],"repository_name":"redis","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"COMPRESSED","name":"COMPRESSED","value":"0"},{"id":"UNCOMPRESSED","name":"UNCOMPRESSED","value":"1"}],"namespace":{"html_id":"redis/Redis/TimeSeries","kind":"struct","full_name":"Redis::TimeSeries(Runnable)","name":"TimeSeries"},"instance_methods":[{"html_id":"compressed?-instance-method","name":"compressed?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":177,"url":null},"def":{"name":"compressed?","visibility":"Public","body":"self == COMPRESSED"}},{"html_id":"uncompressed?-instance-method","name":"uncompressed?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":178,"url":null},"def":{"name":"uncompressed?","visibility":"Public","body":"self == UNCOMPRESSED"}}]},{"html_id":"redis/Redis/TimeSeries/Range","path":"Redis/TimeSeries/Range.html","kind":"struct","full_name":"Redis::TimeSeries::Range","name":"Range","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/time_series.cr","line_number":141,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/TimeSeries","kind":"struct","full_name":"Redis::TimeSeries(Runnable)","name":"TimeSeries"},"constructors":[{"html_id":"new(raw_data:Array)-class-method","name":"new","abstract":false,"args":[{"name":"raw_data","external_name":"raw_data","restriction":"Array"}],"args_string":"(raw_data : Array)","args_html":"(raw_data : <a href=\"../../Array.html\">Array</a>)","location":{"filename":"src/time_series.cr","line_number":142,"url":null},"def":{"name":"new","args":[{"name":"raw_data","external_name":"raw_data","restriction":"Array"}],"visibility":"Public","body":"_ = allocate\n_.initialize(raw_data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"redis/Redis/TimeSeries/RangeOptions","path":"Redis/TimeSeries/RangeOptions.html","kind":"class","full_name":"Redis::TimeSeries::RangeOptions","name":"RangeOptions","abstract":false,"superclass":{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/time_series.cr","line_number":151,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/TimeSeries","kind":"struct","full_name":"Redis::TimeSeries(Runnable)","name":"TimeSeries"},"instance_methods":[{"html_id":"aggregation(type:AggregationType,bucket:Time::Span)-instance-method","name":"aggregation","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"AggregationType"},{"name":"bucket","external_name":"bucket","restriction":"Time::Span"}],"args_string":"(type : AggregationType, bucket : Time::Span)","args_html":"(type : <a href=\"../../Redis/TimeSeries/RangeOptions/AggregationType.html\">AggregationType</a>, bucket : Time::Span)","location":{"filename":"src/time_series.cr","line_number":154,"url":null},"def":{"name":"aggregation","args":[{"name":"type","external_name":"type","restriction":"AggregationType"},{"name":"bucket","external_name":"bucket","restriction":"Time::Span"}],"visibility":"Public","body":"@aggregation = Aggregation.new(type, bucket)"}},{"html_id":"aggregation:Aggregation?-instance-method","name":"aggregation","abstract":false,"location":{"filename":"src/time_series.cr","line_number":152,"url":null},"def":{"name":"aggregation","return_type":"Aggregation | ::Nil","visibility":"Public","body":"@aggregation"}}],"types":[{"html_id":"redis/Redis/TimeSeries/RangeOptions/Aggregation","path":"Redis/TimeSeries/RangeOptions/Aggregation.html","kind":"struct","full_name":"Redis::TimeSeries::RangeOptions::Aggregation","name":"Aggregation","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/time_series.cr","line_number":158,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"redis/Redis/TimeSeries/RangeOptions","kind":"class","full_name":"Redis::TimeSeries::RangeOptions","name":"RangeOptions"},"constructors":[{"html_id":"new(type:AggregationType,time_bucket:Time::Span)-class-method","name":"new","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"AggregationType"},{"name":"time_bucket","external_name":"time_bucket","restriction":"Time::Span"}],"args_string":"(type : AggregationType, time_bucket : Time::Span)","args_html":"(type : <a href=\"../../../Redis/TimeSeries/RangeOptions/AggregationType.html\">AggregationType</a>, time_bucket : Time::Span)","location":{"filename":"src/time_series.cr","line_number":158,"url":null},"def":{"name":"new","args":[{"name":"type","external_name":"type","restriction":"AggregationType"},{"name":"time_bucket","external_name":"time_bucket","restriction":"Time::Span"}],"visibility":"Public","body":"_ = allocate\n_.initialize(type, time_bucket)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/time_series.cr","line_number":158,"url":null},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@type.clone, @time_bucket.clone)"}},{"html_id":"copy_with(type_type=@type,time_bucket_time_bucket=@time_bucket)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_type","default_value":"@type","external_name":"type","restriction":""},{"name":"_time_bucket","default_value":"@time_bucket","external_name":"time_bucket","restriction":""}],"args_string":"(type _type = @type, time_bucket _time_bucket = @time_bucket)","args_html":"(type _type = @type, time_bucket _time_bucket = @time_bucket)","location":{"filename":"src/time_series.cr","line_number":158,"url":null},"def":{"name":"copy_with","args":[{"name":"_type","default_value":"@type","external_name":"type","restriction":""},{"name":"_time_bucket","default_value":"@time_bucket","external_name":"time_bucket","restriction":""}],"visibility":"Public","body":"self.class.new(_type, _time_bucket)"}},{"html_id":"time_bucket:Time::Span-instance-method","name":"time_bucket","abstract":false,"def":{"name":"time_bucket","return_type":"Time::Span","visibility":"Public","body":"@time_bucket"}},{"html_id":"type:AggregationType-instance-method","name":"type","abstract":false,"def":{"name":"type","return_type":"AggregationType","visibility":"Public","body":"@type"}}]},{"html_id":"redis/Redis/TimeSeries/RangeOptions/AggregationType","path":"Redis/TimeSeries/RangeOptions/AggregationType.html","kind":"enum","full_name":"Redis::TimeSeries::RangeOptions::AggregationType","name":"AggregationType","abstract":false,"ancestors":[{"html_id":"redis/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/time_series.cr","line_number":160,"url":null}],"repository_name":"redis","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"AVG","name":"AVG","value":"0"},{"id":"SUM","name":"SUM","value":"1"},{"id":"MIN","name":"MIN","value":"2"},{"id":"MAX","name":"MAX","value":"3"},{"id":"RANGE","name":"RANGE","value":"4"},{"id":"COUNT","name":"COUNT","value":"5"},{"id":"FIRST","name":"FIRST","value":"6"},{"id":"LAST","name":"LAST","value":"7"},{"id":"STD_P","name":"STD_P","value":"8"},{"id":"STD_S","name":"STD_S","value":"9"},{"id":"VAR_P","name":"VAR_P","value":"10"},{"id":"VAR_S","name":"VAR_S","value":"11"}],"namespace":{"html_id":"redis/Redis/TimeSeries/RangeOptions","kind":"class","full_name":"Redis::TimeSeries::RangeOptions","name":"RangeOptions"},"instance_methods":[{"html_id":"avg?-instance-method","name":"avg?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":161,"url":null},"def":{"name":"avg?","visibility":"Public","body":"self == AVG"}},{"html_id":"count?-instance-method","name":"count?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":166,"url":null},"def":{"name":"count?","visibility":"Public","body":"self == COUNT"}},{"html_id":"first?-instance-method","name":"first?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":167,"url":null},"def":{"name":"first?","visibility":"Public","body":"self == FIRST"}},{"html_id":"last?-instance-method","name":"last?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":168,"url":null},"def":{"name":"last?","visibility":"Public","body":"self == LAST"}},{"html_id":"max?-instance-method","name":"max?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":164,"url":null},"def":{"name":"max?","visibility":"Public","body":"self == MAX"}},{"html_id":"min?-instance-method","name":"min?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":163,"url":null},"def":{"name":"min?","visibility":"Public","body":"self == MIN"}},{"html_id":"range?-instance-method","name":"range?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":165,"url":null},"def":{"name":"range?","visibility":"Public","body":"self == RANGE"}},{"html_id":"std_p?-instance-method","name":"std_p?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":169,"url":null},"def":{"name":"std_p?","visibility":"Public","body":"self == STD_P"}},{"html_id":"std_s?-instance-method","name":"std_s?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":170,"url":null},"def":{"name":"std_s?","visibility":"Public","body":"self == STD_S"}},{"html_id":"sum?-instance-method","name":"sum?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":162,"url":null},"def":{"name":"sum?","visibility":"Public","body":"self == SUM"}},{"html_id":"var_p?-instance-method","name":"var_p?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":171,"url":null},"def":{"name":"var_p?","visibility":"Public","body":"self == VAR_P"}},{"html_id":"var_s?-instance-method","name":"var_s?","abstract":false,"location":{"filename":"src/time_series.cr","line_number":172,"url":null},"def":{"name":"var_s?","visibility":"Public","body":"self == VAR_S"}}]}]}]},{"html_id":"redis/Redis/Transaction","path":"Redis/Transaction.html","kind":"class","full_name":"Redis::Transaction","name":"Transaction","abstract":false,"superclass":{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"redis/Redis/Commands","kind":"module","full_name":"Redis::Commands","name":"Commands"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/transaction.cr","line_number":5,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"redis/Redis/Commands","kind":"module","full_name":"Redis::Commands","name":"Commands"}],"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"constructors":[{"html_id":"new(connection:Connection)-class-method","name":"new","abstract":false,"args":[{"name":"connection","external_name":"connection","restriction":"Connection"}],"args_string":"(connection : Connection)","args_html":"(connection : <a href=\"../Redis/Connection.html\">Connection</a>)","location":{"filename":"src/transaction.cr","line_number":10,"url":null},"def":{"name":"new","args":[{"name":"connection","external_name":"connection","restriction":"Connection"}],"visibility":"Public","body":"_ = allocate\n_.initialize(connection)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"discard:Nil-instance-method","name":"discard","abstract":false,"location":{"filename":"src/transaction.cr","line_number":14,"url":null},"def":{"name":"discard","return_type":"Nil","visibility":"Public","body":"@discarded = true\nfinish(\"discard\")\n"}},{"html_id":"discarded?:Bool?-instance-method","name":"discarded?","abstract":false,"location":{"filename":"src/transaction.cr","line_number":8,"url":null},"def":{"name":"discarded?","visibility":"Public","body":"@discarded"}},{"html_id":"exec-instance-method","name":"exec","abstract":false,"location":{"filename":"src/transaction.cr","line_number":25,"url":null},"def":{"name":"exec","visibility":"Public","body":"(finish(\"exec\")).as(Array)"}},{"html_id":"run(command):Nil-instance-method","name":"run","doc":"Execute the given command and return the result from the server. Commands\nmust be an `Enumerable` and its `size` method must be re-entrant.\n\n```\nrun({\"set\", \"foo\", \"bar\"})\n```","summary":"<p>Execute the given command and return the result from the server.</p>","abstract":false,"args":[{"name":"command","external_name":"command","restriction":""}],"args_string":"(command) : Nil","args_html":"(command) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/transaction.cr","line_number":19,"url":null},"def":{"name":"run","args":[{"name":"command","external_name":"command","restriction":""}],"return_type":"Nil","visibility":"Public","body":"if discarded?\n  return\nend\n@connection.encode(command)\n@command_count = @command_count + 1\n"}},{"html_id":"start!-instance-method","name":"start!","abstract":false,"location":{"filename":"src/transaction.cr","line_number":29,"url":null},"def":{"name":"start!","visibility":"Public","body":"@connection.encode({\"multi\"})"}}]},{"html_id":"redis/Redis/Value","path":"Redis/Value.html","kind":"alias","full_name":"Redis::Value","name":"Value","abstract":false,"locations":[{"filename":"src/value.cr","line_number":4,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":true,"aliased":"(Array(Redis::Value) | Int64 | String | Nil)","aliased_html":"<a href=\"../Array.html\">Array</a>(<a href=\"../Redis/Value.html\">Redis::Value</a>) | <a href=\"../Int64.html\">Int64</a> | <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>","const":false,"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"doc":"Values consumed and emitted by Redis can be strings, 64-bit integers, `nil`,\nor an array of any of these types.","summary":"<p>Values consumed and emitted by Redis can be strings, 64-bit integers, <code>nil</code>, or an array of any of these types.</p>"},{"html_id":"redis/Redis/Writer","path":"Redis/Writer.html","kind":"struct","full_name":"Redis::Writer","name":"Writer","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/writer.cr","line_number":2,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"CRLF","name":"CRLF","value":"\"\\r\\n\""}],"namespace":{"html_id":"redis/Redis","kind":"module","full_name":"Redis","name":"Redis"},"constructors":[{"html_id":"new(io:IO)-class-method","name":"new","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/writer.cr","line_number":7,"url":null},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"_ = allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"io:IO-instance-method","name":"io","abstract":false,"location":{"filename":"src/writer.cr","line_number":5,"url":null},"def":{"name":"io","visibility":"Public","body":"@io"}}]}]},{"html_id":"redis/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":198,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"doc":"A `String` represents an immutable sequence of UTF-8 characters.\n\nA `String` is typically created with a string literal, enclosing UTF-8 characters\nin double quotes:\n\n```\n\"hello world\"\n```\n\nSee [`String` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/string.html) in the language reference.\n\nA backslash can be used to denote some characters inside the string:\n\n```\n\"\\\"\" # double quote\n\"\\\\\" # backslash\n\"\\e\" # escape\n\"\\f\" # form feed\n\"\\n\" # newline\n\"\\r\" # carriage return\n\"\\t\" # tab\n\"\\v\" # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n\"\\u0041\" # == \"A\"\n```\n\nOr you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):\n\n```\n\"\\u{41}\" # == \"A\"\n```\n\nA string can span multiple lines:\n\n```\n\"hello\n      world\" # same as \"hello\\n      world\"\n```\n\nNote that in the above example trailing and leading spaces, as well as newlines,\nend up in the resulting string. To avoid this, you can split a string into multiple lines\nby joining multiple literals with a backslash:\n\n```\n\"hello \" \\\n\"world, \" \\\n\"no newlines\" # same as \"hello world, no newlines\"\n```\n\nAlternatively, a backslash followed by a newline can be inserted inside the string literal:\n\n```\n\"hello \\\n     world, \\\n     no newlines\" # same as \"hello world, no newlines\"\n```\n\nIn this case, leading whitespace is not included in the resulting string.\n\nIf you need to write a string that has many double quotes, parentheses, or similar\ncharacters, you can use alternative literals:\n\n```\n# Supports double quotes and nested parentheses\n%(hello (\"world\")) # same as \"hello (\\\"world\\\")\"\n\n# Supports double quotes and nested brackets\n%[hello [\"world\"]] # same as \"hello [\\\"world\\\"]\"\n\n# Supports double quotes and nested curlies\n%{hello {\"world\"}} # same as \"hello {\\\"world\\\"}\"\n\n# Supports double quotes and nested angles\n%<hello <\"world\">> # same as \"hello <\\\"world\\\">\"\n```\n\nTo create a `String` with embedded expressions, you can use string interpolation:\n\n```\na = 1\nb = 2\n\"sum = #{a + b}\" # \"sum = 3\"\n```\n\nThis ends up invoking `Object#to_s(IO)` on each expression enclosed by `#{...}`.\n\nIf you need to dynamically build a string, use `String#build` or `IO::Memory`.\n\n### Non UTF-8 valid strings\n\nString might end up being conformed of bytes which are an invalid\nbyte sequence according to UTF-8. This can happen if the string is created\nvia one of the constructors that accept bytes, or when getting a string\nfrom `String.build` or `IO::Memory`. No exception will be raised, but\ninvalid byte sequences, when asked as chars, will use the unicode replacement\nchar (value 0xFFFD). For example:\n\n```\n# here 255 is not a valid byte value in the UTF-8 encoding\nstring = String.new(Bytes[255, 97])\nstring.valid_encoding? # => false\n\n# The first char here is the unicode replacement char\nstring.chars # => ['�', 'a']\n```\n\nOne can also create strings with specific byte value in them by\nusing octal and hexadecimal escape sequences:\n\n```\n# Octal escape sequences\n\"\\101\" # # => \"A\"\n\"\\12\"  # # => \"\\n\"\n\"\\1\"   # string with one character with code point 1\n\"\\377\" # string with one byte with value 255\n\n# Hexadecimal escape sequences\n\"\\x41\" # # => \"A\"\n\"\\xFF\" # string with one byte with value 255\n```\n\nThe reason for allowing strings that don't have a valid UTF-8 sequence\nis that the world is full of content that isn't properly encoded,\nand having a program raise an exception or stop because of this\nis not good. It's better if programs are more resilient, but\nshow a replacement character when there's an error in incoming data.","summary":"<p>A <code><a href=\"String.html\">String</a></code> represents an immutable sequence of UTF-8 characters.</p>","class_methods":[{"html_id":"can_transform_graph_result?(result:String)-class-method","name":"can_transform_graph_result?","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"String"}],"args_string":"(result : String)","args_html":"(result : <a href=\"String.html\">String</a>)","location":{"filename":"src/graph/serializable.cr","line_number":207,"url":null},"def":{"name":"can_transform_graph_result?","args":[{"name":"result","external_name":"result","restriction":"String"}],"visibility":"Public","body":"true"}},{"html_id":"can_transform_graph_result?(result:Redis::Value)-class-method","name":"can_transform_graph_result?","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"args_string":"(result : Redis::Value)","args_html":"(result : <a href=\"Redis/Value.html\">Redis::Value</a>)","location":{"filename":"src/graph/serializable.cr","line_number":203,"url":null},"def":{"name":"can_transform_graph_result?","args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"visibility":"Public","body":"false"}},{"html_id":"from_graph_result(result:String)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"String"}],"args_string":"(result : String)","args_html":"(result : <a href=\"String.html\">String</a>)","location":{"filename":"src/graph/serializable.cr","line_number":211,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"String"}],"visibility":"Public","body":"result"}},{"html_id":"from_graph_result(result:Redis::Value)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"args_string":"(result : Redis::Value)","args_html":"(result : <a href=\"Redis/Value.html\">Redis::Value</a>)","location":{"filename":"src/graph/serializable.cr","line_number":199,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"visibility":"Public","body":"raise(ArgumentError.new(\"Cannot create a #{self} from #{result.inspect}\"))"}}],"instance_methods":[{"html_id":"to_redis_graph_param(io:IO)-instance-method","name":"to_redis_graph_param","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/graph/serializable.cr","line_number":215,"url":null},"def":{"name":"to_redis_graph_param","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"inspect(io)"}}]},{"html_id":"redis/Time","path":"Time.html","kind":"struct","full_name":"Time","name":"Time","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":148,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"}],"doc":"`Time` represents a date-time instant in\n[incremental time](https://www.w3.org/International/articles/definitions-time/#incremental_time)\nobserved in a specific time zone.\n\nThe calendaric calculations are based on the rules of the proleptic Gregorian\ncalendar as specified in [ISO 8601](http://xml.coverpages.org/ISO-FDIS-8601.pdf).\nLeap seconds are ignored.\n\nInternally, the time is stored as an `Int64` representing seconds from epoch\n(`0001-01-01 00:00:00.0 UTC`) and an `Int32` representing\nnanosecond-of-second with value range `0..999_999_999`.\n\nThe supported date range is `0001-01-01 00:00:00.0` to\n`9999-12-31 23:59:59.999_999_999` in any local time zone.\n\n### Telling the Time\n\nThere are several methods to retrieve a `Time` instance representing the\ncurrent time:\n\n```\nTime.utc                                        # returns the current time in UTC\nTime.local Time::Location.load(\"Europe/Berlin\") # returns the current time in time zone Europe/Berlin\nTime.local                                      # returns the current time in current time zone\n```\n\nIt is generally recommended to keep instances in UTC and only apply a\nlocal time zone when formatting for user display, unless the domain logic\nrequires having a specific time zone (for example for calendaric operations).\n\n### Creating a Specific Instant\n\n`Time` instances representing a specific instant can be created by\n`.utc` or `.new` with the date-time specified as individual arguments:\n\n```\ntime = Time.utc(2016, 2, 15, 10, 20, 30)\ntime.to_s # => 2016-02-15 10:20:30 UTC\ntime = Time.local(2016, 2, 15, 10, 20, 30, location: Time::Location.load(\"Europe/Berlin\"))\ntime.to_s # => 2016-02-15 10:20:30 +01:00 Europe/Berlin\n# The time-of-day can be omitted and defaults to midnight (start of day):\ntime = Time.utc(2016, 2, 15)\ntime.to_s # => 2016-02-15 00:00:00 UTC\n```\n\n### Retrieving Time Information\n\nEach `Time` instance allows querying calendar data:\n\n```\ntime = Time.utc(2016, 2, 15, 10, 20, 30)\ntime.year        # => 2016\ntime.month       # => 2\ntime.day         # => 15\ntime.hour        # => 10\ntime.minute      # => 20\ntime.second      # => 30\ntime.millisecond # => 0\ntime.nanosecond  # => 0\ntime.day_of_week # => Time::DayOfWeek::Monday\ntime.day_of_year # => 46\ntime.monday?     # => true\ntime.time_of_day # => 10:20:30\n```\n\nFor querying if a time is at a specific day of week, `Time` offers named\npredicate methods, delegating to `#day_of_week`:\n\n```\ntime.monday? # => true\n# ...\ntime.sunday? # => false\n```\n\n### Time Zones\n\nEach time is attached to a specific time zone, represented by a `Location`\n(see `#location`).\n`#zone` returns the time zone observed in this location at the current time\n(i.e. the instant represented by this `Time`).\n`#offset` returns the offset of the current zone in seconds.\n\n```\ntime = Time.local(2018, 3, 8, 22, 5, 13, location: Time::Location.load(\"Europe/Berlin\"))\ntime          # => 2018-03-08 22:05:13 +01:00 Europe/Berlin\ntime.location # => #<Time::Location Europe/Berlin>\ntime.zone     # => #<Time::Location::Zone CET +01:00 (3600s) STD>\ntime.offset   # => 3600\n```\n\nUsing `.utc`, the location is `Time::Location::UTC`:\n\n```\ntime = Time.utc(2018, 3, 8, 22, 5, 13)\ntime          # => 2018-03-08 22:05:13.0 UTC\ntime.location # => #<Time::Location UTC>\ntime.zone     # => #<Time::Location::Zone UTC +00:00 (0s) STD>\ntime.offset   # => 0\n```\n\nA `Time` instance can be transformed to a different time zone while retaining\nthe same instant using `#in`:\n\n```\ntime_de = Time.local(2018, 3, 8, 22, 5, 13, location: Time::Location.load(\"Europe/Berlin\"))\ntime_ar = time_de.in Time::Location.load(\"America/Buenos_Aires\")\ntime_de # => 2018-03-08 22:05:13 +01:00 Europe/Berlin\ntime_ar # => 2018-03-08 18:05:13 -03:00 America/Buenos_Aires\n```\n\nBoth `Time` instances show a different local date-time, but they represent\nthe same date-time in the instant time-line, therefore they are considered\nequal:\n\n```\ntime_de.to_utc     # => 2018-03-08 21:05:13 UTC\ntime_ar.to_utc     # => 2018-03-08 21:05:13 UTC\ntime_de == time_ar # => true\n```\n\nThere are also two special methods for converting to UTC and local time zone:\n\n```\ntime.to_utc   # equals time.in(Location::UTC)\ntime.to_local # equals time.in(Location.local)\n```\n\n`#to_local_in` allows changing the time zone while keeping\nthe same local date-time (wall clock) which results in a different instant\non the time line.\n\n### Formatting and Parsing Time\n\nTo make date-time instances exchangeable between different computer systems\nor readable to humans, they are usually converted to and from a string\nrepresentation.\n\nThe method `#to_s` formats the date-time according to a specified pattern.\n\n```\ntime = Time.utc(2015, 10, 12, 10, 30, 0)\ntime.to_s(\"%Y-%m-%d %H:%M:%S %:z\") # => \"2015-10-12 10:30:00 +00:00\"\n```\n\nSimilarly, `Time.parse` and `Time.parse!` are used to construct a `Time` instance from date-time\ninformation in a string, according to a specified pattern:\n\n```\nTime.parse(\"2015-10-12 10:30:00 +00:00\", \"%Y-%m-%d %H:%M:%S %z\", Time::Location::UTC)\nTime.parse!(\"2015-10-12 10:30:00 +00:00\", \"%Y-%m-%d %H:%M:%S %z\")\n```\n\nSee `Time::Format` for all directives.\n\n### Calculations\n\n```\nTime.utc(2015, 10, 10) - 5.days # => 2015-10-05 00:00:00 +00:00\n\nspan = Time.utc(2015, 10, 10) - Time.utc(2015, 9, 10)\nspan.days          # => 30\nspan.total_hours   # => 720\nspan.total_minutes # => 43200\n```\n\n## Measuring Time\n\nThe typical time representation provided by the operating system is based on\na \"wall clock\" which is subject to changes for clock synchronization.\nThis can result in discontinuous jumps in the time-line making it not\nsuitable for accurately measuring elapsed time.\n\nInstances of `Time` are focused on telling time – using a \"wall clock\".\nWhen `Time.local` is called multiple times, the difference between the\nreturned instances is not guaranteed to equal to the time elapsed between\nmaking the calls; even the order of the returned `Time` instances might\nnot reflect invocation order.\n\n```\nt1 = Time.utc\n# operation that takes 1 minute\nt2 = Time.utc\nt2 - t1 # => ?\n```\n\nThe resulting `Time::Span` could be anything, even negative, if the\ncomputer's wall clock has changed between both calls.\n\nAs an alternative, the operating system also provides a monotonic clock.\nIts time-line has no specified starting point but is strictly linearly\nincreasing.\n\nThis monotonic clock should always be used for measuring elapsed time.\n\nA reading from this clock can be taken using `.monotonic`:\n\n```\nt1 = Time.monotonic\n# operation that takes 1 minute\nt2 = Time.monotonic\nt2 - t1 # => 1.minute (approximately)\n```\n\nThe execution time of a block can be measured using `.measure`:\n\n```\nelapsed_time = Time.measure do\n  # operation that takes 20 milliseconds\nend\nelapsed_time # => 20.milliseconds (approximately)\n```","summary":"<p><code><a href=\"Time.html\">Time</a></code> represents a date-time instant in <a href=\"https://www.w3.org/International/articles/definitions-time/#incremental_time\">incremental time</a> observed in a specific time zone.</p>","class_methods":[{"html_id":"can_transform_graph_result?(result:Int64|String)-class-method","name":"can_transform_graph_result?","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Int64 | String"}],"args_string":"(result : Int64 | String)","args_html":"(result : <a href=\"Int64.html\">Int64</a> | <a href=\"String.html\">String</a>)","location":{"filename":"src/graph/serializable.cr","line_number":157,"url":null},"def":{"name":"can_transform_graph_result?","args":[{"name":"result","external_name":"result","restriction":"Int64 | String"}],"visibility":"Public","body":"true"}},{"html_id":"can_transform_graph_result?(result:Redis::Value)-class-method","name":"can_transform_graph_result?","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"args_string":"(result : Redis::Value)","args_html":"(result : <a href=\"Redis/Value.html\">Redis::Value</a>)","location":{"filename":"src/graph/serializable.cr","line_number":153,"url":null},"def":{"name":"can_transform_graph_result?","args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"visibility":"Public","body":"false"}},{"html_id":"from_graph_result(result:String)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"String"}],"args_string":"(result : String)","args_html":"(result : <a href=\"String.html\">String</a>)","location":{"filename":"src/graph/serializable.cr","line_number":161,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"String"}],"visibility":"Public","body":"Time::Format::RFC_3339.parse(result)"}},{"html_id":"from_graph_result(result:Int64)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Int64"}],"args_string":"(result : Int64)","args_html":"(result : <a href=\"Int64.html\">Int64</a>)","location":{"filename":"src/graph/serializable.cr","line_number":165,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Int64"}],"visibility":"Public","body":"Time.unix_ms(result)"}},{"html_id":"from_graph_result(result:Redis::Value)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"args_string":"(result : Redis::Value)","args_html":"(result : <a href=\"Redis/Value.html\">Redis::Value</a>)","location":{"filename":"src/graph/serializable.cr","line_number":149,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"visibility":"Public","body":"raise(ArgumentError.new(\"Cannot create a {{@type.id}} from #{result.inspect}\"))"}}],"instance_methods":[{"html_id":"to_redis_graph_param(io:IO)-instance-method","name":"to_redis_graph_param","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/graph/serializable.cr","line_number":169,"url":null},"def":{"name":"to_redis_graph_param","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"to_unix_ms.to_redis_graph_param(io)"}}]},{"html_id":"redis/Tuple","path":"Tuple.html","kind":"struct","full_name":"Tuple(*T)","name":"Tuple","abstract":false,"superclass":{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"redis/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"redis/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":122,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"doc":"A tuple is a fixed-size, immutable, stack-allocated sequence of values\nof possibly different types.\n\nYou can think of a `Tuple` as an immutable `Array` whose types for each position\nare known at compile time.\n\nA tuple can be created with the usual `new` method or with a tuple literal:\n\n```\ntuple = {1, \"hello\", 'x'} # Tuple(Int32, String, Char)\ntuple[0]                  # => 1\ntuple[1]                  # => \"hello\"\ntuple[2]                  # => 'x'\n```\n\nSee [`Tuple` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/tuple.html) in the language reference.\n\nThe compiler knows what types are in each position, so when indexing\na tuple with an integer literal the compiler will return\nthe value in that index and with the expected type, like in the above\nsnippet. Indexing with an integer literal outside the bounds of the tuple\nwill give a compile-time error.\n\nIndexing with an integer value that is only known at runtime will return\na value whose type is the union of all the types in the tuple, and might raise\n`IndexError`.\n\nIndexing with a range literal known at compile-time is also allowed, and the\nreturned value will have the correct sub-tuple type:\n\n```\ntuple = {1, \"hello\", 'x'} # Tuple(Int32, String, Char)\nsub = tuple[0..1]         # => {1, \"hello\"}\ntypeof(sub)               # => Tuple(Int32, String)\n```\n\nTuples are the preferred way to return fixed-size multiple return\nvalues because no memory is needed to be allocated for them:\n\n```\ndef one_and_hello\n  {1, \"hello\"}\nend\n\none, hello = one_and_hello\none   # => 1\nhello # => \"hello\"\n```\n\nGood examples of the above are `Number#divmod` and `Enumerable#minmax`.\n\nTuples can be splat with the `*` operator and passed to methods:\n\n```\ndef multiply(string, value)\n  string * value\nend\n\ntuple = {\"hey\", 2}\nvalue = multiply(*tuple) # same as multiply tuple[0], tuple[1]\nvalue                    # => \"heyhey\"\n```\n\nFinally, when using a splat argument in a method definition its type\nwill be a tuple of the call arguments:\n\n```\ndef splat_test(*args)\n  args\nend\n\ntuple = splat_test 1, \"hello\", 'x'\ntuple.class # => Tuple(Int32, String, Char)\ntuple       # => {1, \"hello\", 'x'}\n```","summary":"<p>A tuple is a fixed-size, immutable, stack-allocated sequence of values of possibly different types.</p>","class_methods":[{"html_id":"can_transform_graph_result?(result:Array)-class-method","name":"can_transform_graph_result?","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Array"}],"args_string":"(result : Array)","args_html":"(result : <a href=\"Array.html\">Array</a>)","location":{"filename":"src/graph/serializable.cr","line_number":143,"url":null},"def":{"name":"can_transform_graph_result?","args":[{"name":"result","external_name":"result","restriction":"Array"}],"visibility":"Public","body":"true"}},{"html_id":"from_graph_result(result:Array)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Array"}],"args_string":"(result : Array)","args_html":"(result : <a href=\"Array.html\">Array</a>)","location":{"filename":"src/graph/serializable.cr","line_number":123,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Array"}],"visibility":"Public","body":"{% if true %}\n      {\n        {% for type, index in @type.type_vars %}\n          {{ type.instance }}.from_graph_result(result[{{ index }}]),\n        {% end %}\n      }\n    {% end %}"}}],"instance_methods":[{"html_id":"from_graph_result(result:Array)-instance-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Array"}],"args_string":"(result : Array)","args_html":"(result : <a href=\"Array.html\">Array</a>)","location":{"filename":"src/graph/serializable.cr","line_number":133,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Array"}],"visibility":"Public","body":"{% if true %}\n      {\n        {% for type, index in @type.type_vars %}\n          {{ type.instance }}.from_graph_result(result[{{ index }}]),\n        {% end %}\n      }\n    {% end %}"}}]},{"html_id":"redis/UUID","path":"UUID.html","kind":"struct","full_name":"UUID","name":"UUID","abstract":false,"superclass":{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/graph/serializable.cr","line_number":174,"url":null}],"repository_name":"redis","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"redis/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"doc":"Represents a UUID (Universally Unique IDentifier).","summary":"<p>Represents a UUID (Universally Unique IDentifier).</p>","class_methods":[{"html_id":"can_transform_graph_result?(result:String)-class-method","name":"can_transform_graph_result?","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"String"}],"args_string":"(result : String)","args_html":"(result : <a href=\"String.html\">String</a>)","location":{"filename":"src/graph/serializable.cr","line_number":183,"url":null},"def":{"name":"can_transform_graph_result?","args":[{"name":"result","external_name":"result","restriction":"String"}],"visibility":"Public","body":"true"}},{"html_id":"can_transform_graph_result?(result:Redis::Value)-class-method","name":"can_transform_graph_result?","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"args_string":"(result : Redis::Value)","args_html":"(result : <a href=\"Redis/Value.html\">Redis::Value</a>)","location":{"filename":"src/graph/serializable.cr","line_number":179,"url":null},"def":{"name":"can_transform_graph_result?","args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"visibility":"Public","body":"false"}},{"html_id":"from_graph_result(result:String)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"String"}],"args_string":"(result : String)","args_html":"(result : <a href=\"String.html\">String</a>)","location":{"filename":"src/graph/serializable.cr","line_number":187,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"String"}],"visibility":"Public","body":"new(result)"}},{"html_id":"from_graph_result(result:Redis::Value)-class-method","name":"from_graph_result","abstract":false,"args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"args_string":"(result : Redis::Value)","args_html":"(result : <a href=\"Redis/Value.html\">Redis::Value</a>)","location":{"filename":"src/graph/serializable.cr","line_number":175,"url":null},"def":{"name":"from_graph_result","args":[{"name":"result","external_name":"result","restriction":"Redis::Value"}],"visibility":"Public","body":"raise(ArgumentError.new(\"Cannot create a #{self} from #{result.inspect}\"))"}}],"instance_methods":[{"html_id":"to_redis_graph_param(io:IO)-instance-method","name":"to_redis_graph_param","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/graph/serializable.cr","line_number":191,"url":null},"def":{"name":"to_redis_graph_param","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io << '\"'\nto_s(io)\nio << '\"'\n"}}]}]}})